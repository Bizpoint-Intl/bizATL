//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PicoGuards.BizModules.CFR.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CFRds1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CFRds1 : global::System.Data.DataSet {
        
        private CFRHDataTable tableCFRH;
        
        private PFMSRDataTable tablePFMSR;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CFRds1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CFRds1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CFRH"] != null)) {
                    base.Tables.Add(new CFRHDataTable(ds.Tables["CFRH"]));
                }
                if ((ds.Tables["PFMSR"] != null)) {
                    base.Tables.Add(new PFMSRDataTable(ds.Tables["PFMSR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CFRHDataTable CFRH {
            get {
                return this.tableCFRH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PFMSRDataTable PFMSR {
            get {
                return this.tablePFMSR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CFRds1 cln = ((CFRds1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CFRH"] != null)) {
                    base.Tables.Add(new CFRHDataTable(ds.Tables["CFRH"]));
                }
                if ((ds.Tables["PFMSR"] != null)) {
                    base.Tables.Add(new PFMSRDataTable(ds.Tables["PFMSR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCFRH = ((CFRHDataTable)(base.Tables["CFRH"]));
            if ((initTable == true)) {
                if ((this.tableCFRH != null)) {
                    this.tableCFRH.InitVars();
                }
            }
            this.tablePFMSR = ((PFMSRDataTable)(base.Tables["PFMSR"]));
            if ((initTable == true)) {
                if ((this.tablePFMSR != null)) {
                    this.tablePFMSR.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CFRds1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CFRds1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCFRH = new CFRHDataTable();
            base.Tables.Add(this.tableCFRH);
            this.tablePFMSR = new PFMSRDataTable();
            base.Tables.Add(this.tablePFMSR);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCFRH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePFMSR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CFRds1 ds = new CFRds1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CFRHRowChangeEventHandler(object sender, CFRHRowChangeEvent e);
        
        public delegate void PFMSRRowChangeEventHandler(object sender, PFMSRRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CFRHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnconfirmedby;
            
            private global::System.Data.DataColumn columnconfirmedcomments;
            
            private global::System.Data.DataColumn columnappraisalscore;
            
            private global::System.Data.DataColumn columnisrecommended;
            
            private global::System.Data.DataColumn columnapprovedby;
            
            private global::System.Data.DataColumn columnapprovedcomments;
            
            private global::System.Data.DataColumn columnisapproved;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnemploymentdate;
            
            private global::System.Data.DataColumn columncurrentsal;
            
            private global::System.Data.DataColumn columnlastincrementdate;
            
            private global::System.Data.DataColumn columnreasonforlastincre;
            
            private global::System.Data.DataColumn columnnewsal;
            
            private global::System.Data.DataColumn columnnewsaleffectivedate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnconfirmationdate;
            
            private global::System.Data.DataColumn columnstatuscode;
            
            private global::System.Data.DataColumn columnsitenum;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columnempname;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columnhasConfirmationDate;
            
            private global::System.Data.DataColumn columnID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFRHDataTable() {
                this.TableName = "CFRH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CFRHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CFRHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmedbyColumn {
                get {
                    return this.columnconfirmedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmedcommentsColumn {
                get {
                    return this.columnconfirmedcomments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appraisalscoreColumn {
                get {
                    return this.columnappraisalscore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isrecommendedColumn {
                get {
                    return this.columnisrecommended;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvedbyColumn {
                get {
                    return this.columnapprovedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvedcommentsColumn {
                get {
                    return this.columnapprovedcomments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isapprovedColumn {
                get {
                    return this.columnisapproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn employmentdateColumn {
                get {
                    return this.columnemploymentdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn currentsalColumn {
                get {
                    return this.columncurrentsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastincrementdateColumn {
                get {
                    return this.columnlastincrementdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reasonforlastincreColumn {
                get {
                    return this.columnreasonforlastincre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn newsalColumn {
                get {
                    return this.columnnewsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn newsaleffectivedateColumn {
                get {
                    return this.columnnewsaleffectivedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmationdateColumn {
                get {
                    return this.columnconfirmationdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statuscodeColumn {
                get {
                    return this.columnstatuscode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenumColumn {
                get {
                    return this.columnsitenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnameColumn {
                get {
                    return this.columnempname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hasConfirmationDateColumn {
                get {
                    return this.columnhasConfirmationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFRHRow this[int index] {
                get {
                    return ((CFRHRow)(this.Rows[index]));
                }
            }
            
            public event CFRHRowChangeEventHandler CFRHRowChanging;
            
            public event CFRHRowChangeEventHandler CFRHRowChanged;
            
            public event CFRHRowChangeEventHandler CFRHRowDeleting;
            
            public event CFRHRowChangeEventHandler CFRHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCFRHRow(CFRHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFRHRow AddCFRHRow(
                        string refnum, 
                        string empnum, 
                        string confirmedby, 
                        string confirmedcomments, 
                        decimal appraisalscore, 
                        bool isrecommended, 
                        string approvedby, 
                        string approvedcomments, 
                        bool isapproved, 
                        System.DateTime trandate, 
                        System.DateTime employmentdate, 
                        decimal currentsal, 
                        System.DateTime lastincrementdate, 
                        string reasonforlastincre, 
                        decimal newsal, 
                        System.DateTime newsaleffectivedate, 
                        string remark, 
                        string status, 
                        string flag, 
                        string user, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        System.DateTime confirmationdate, 
                        string statuscode, 
                        string sitenum, 
                        string sectorcode, 
                        string empname, 
                        string designation, 
                        bool hasConfirmationDate, 
                        string ID) {
                CFRHRow rowCFRHRow = ((CFRHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        refnum,
                        empnum,
                        confirmedby,
                        confirmedcomments,
                        appraisalscore,
                        isrecommended,
                        approvedby,
                        approvedcomments,
                        isapproved,
                        trandate,
                        employmentdate,
                        currentsal,
                        lastincrementdate,
                        reasonforlastincre,
                        newsal,
                        newsaleffectivedate,
                        remark,
                        status,
                        flag,
                        user,
                        created,
                        modified,
                        confirmationdate,
                        statuscode,
                        sitenum,
                        sectorcode,
                        empname,
                        designation,
                        hasConfirmationDate,
                        ID};
                rowCFRHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCFRHRow);
                return rowCFRHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFRHRow FindByID(string ID) {
                return ((CFRHRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CFRHDataTable cln = ((CFRHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CFRHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnconfirmedby = base.Columns["confirmedby"];
                this.columnconfirmedcomments = base.Columns["confirmedcomments"];
                this.columnappraisalscore = base.Columns["appraisalscore"];
                this.columnisrecommended = base.Columns["isrecommended"];
                this.columnapprovedby = base.Columns["approvedby"];
                this.columnapprovedcomments = base.Columns["approvedcomments"];
                this.columnisapproved = base.Columns["isapproved"];
                this.columntrandate = base.Columns["trandate"];
                this.columnemploymentdate = base.Columns["employmentdate"];
                this.columncurrentsal = base.Columns["currentsal"];
                this.columnlastincrementdate = base.Columns["lastincrementdate"];
                this.columnreasonforlastincre = base.Columns["reasonforlastincre"];
                this.columnnewsal = base.Columns["newsal"];
                this.columnnewsaleffectivedate = base.Columns["newsaleffectivedate"];
                this.columnremark = base.Columns["remark"];
                this.columnstatus = base.Columns["status"];
                this.columnflag = base.Columns["flag"];
                this.columnuser = base.Columns["user"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnconfirmationdate = base.Columns["confirmationdate"];
                this.columnstatuscode = base.Columns["statuscode"];
                this.columnsitenum = base.Columns["sitenum"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columnempname = base.Columns["empname"];
                this.columndesignation = base.Columns["designation"];
                this.columnhasConfirmationDate = base.Columns["hasConfirmationDate"];
                this.columnID = base.Columns["ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnconfirmedby = new global::System.Data.DataColumn("confirmedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmedby);
                this.columnconfirmedcomments = new global::System.Data.DataColumn("confirmedcomments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmedcomments);
                this.columnappraisalscore = new global::System.Data.DataColumn("appraisalscore", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappraisalscore);
                this.columnisrecommended = new global::System.Data.DataColumn("isrecommended", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisrecommended);
                this.columnapprovedby = new global::System.Data.DataColumn("approvedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovedby);
                this.columnapprovedcomments = new global::System.Data.DataColumn("approvedcomments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovedcomments);
                this.columnisapproved = new global::System.Data.DataColumn("isapproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisapproved);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnemploymentdate = new global::System.Data.DataColumn("employmentdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploymentdate);
                this.columncurrentsal = new global::System.Data.DataColumn("currentsal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrentsal);
                this.columnlastincrementdate = new global::System.Data.DataColumn("lastincrementdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastincrementdate);
                this.columnreasonforlastincre = new global::System.Data.DataColumn("reasonforlastincre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreasonforlastincre);
                this.columnnewsal = new global::System.Data.DataColumn("newsal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnewsal);
                this.columnnewsaleffectivedate = new global::System.Data.DataColumn("newsaleffectivedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnewsaleffectivedate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnconfirmationdate = new global::System.Data.DataColumn("confirmationdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmationdate);
                this.columnstatuscode = new global::System.Data.DataColumn("statuscode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatuscode);
                this.columnsitenum = new global::System.Data.DataColumn("sitenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitenum);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columnempname = new global::System.Data.DataColumn("empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columnhasConfirmationDate = new global::System.Data.DataColumn("hasConfirmationDate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhasConfirmationDate);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnrefnum.AllowDBNull = false;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnconfirmedby.MaxLength = 20;
                this.columnconfirmedcomments.MaxLength = 100;
                this.columnapprovedby.MaxLength = 20;
                this.columnapprovedcomments.MaxLength = 100;
                this.columnreasonforlastincre.MaxLength = 20;
                this.columnremark.MaxLength = 250;
                this.columnstatus.MaxLength = 1;
                this.columnflag.MaxLength = 10;
                this.columnuser.MaxLength = 50;
                this.columnstatuscode.MaxLength = 30;
                this.columnsitenum.MaxLength = 30;
                this.columnsectorcode.MaxLength = 30;
                this.columnempname.MaxLength = 50;
                this.columndesignation.MaxLength = 30;
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFRHRow NewCFRHRow() {
                return ((CFRHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CFRHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CFRHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CFRHRowChanged != null)) {
                    this.CFRHRowChanged(this, new CFRHRowChangeEvent(((CFRHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CFRHRowChanging != null)) {
                    this.CFRHRowChanging(this, new CFRHRowChangeEvent(((CFRHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CFRHRowDeleted != null)) {
                    this.CFRHRowDeleted(this, new CFRHRowChangeEvent(((CFRHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CFRHRowDeleting != null)) {
                    this.CFRHRowDeleting(this, new CFRHRowChangeEvent(((CFRHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCFRHRow(CFRHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CFRds1 ds = new CFRds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CFRHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PFMSRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnsaldesc;
            
            private global::System.Data.DataColumn columnrateamt;
            
            private global::System.Data.DataColumn columnhsamcode;
            
            private global::System.Data.DataColumn columndateadjusted;
            
            private global::System.Data.DataColumn columnremarks;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnhsgcode;
            
            private global::System.Data.DataColumn columnsalcode;
            
            private global::System.Data.DataColumn columnAdjustmentFlag;
            
            private global::System.Data.DataColumn columnsajmcode;
            
            private global::System.Data.DataColumn columnline;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMSRDataTable() {
                this.TableName = "PFMSR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMSRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PFMSRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saldescColumn {
                get {
                    return this.columnsaldesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rateamtColumn {
                get {
                    return this.columnrateamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hsamcodeColumn {
                get {
                    return this.columnhsamcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateadjustedColumn {
                get {
                    return this.columndateadjusted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarksColumn {
                get {
                    return this.columnremarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hsgcodeColumn {
                get {
                    return this.columnhsgcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salcodeColumn {
                get {
                    return this.columnsalcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentFlagColumn {
                get {
                    return this.columnAdjustmentFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sajmcodeColumn {
                get {
                    return this.columnsajmcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineColumn {
                get {
                    return this.columnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMSRRow this[int index] {
                get {
                    return ((PFMSRRow)(this.Rows[index]));
                }
            }
            
            public event PFMSRRowChangeEventHandler PFMSRRowChanging;
            
            public event PFMSRRowChangeEventHandler PFMSRRowChanged;
            
            public event PFMSRRowChangeEventHandler PFMSRRowDeleting;
            
            public event PFMSRRowChangeEventHandler PFMSRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPFMSRRow(PFMSRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMSRRow AddPFMSRRow(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string saldesc, 
                        decimal rateamt, 
                        string hsamcode, 
                        System.DateTime dateadjusted, 
                        string remarks, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string createdby, 
                        string hsgcode, 
                        string salcode, 
                        string AdjustmentFlag, 
                        string sajmcode, 
                        decimal line) {
                PFMSRRow rowPFMSRRow = ((PFMSRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        saldesc,
                        rateamt,
                        hsamcode,
                        dateadjusted,
                        remarks,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        createdby,
                        hsgcode,
                        salcode,
                        AdjustmentFlag,
                        sajmcode,
                        line};
                rowPFMSRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPFMSRRow);
                return rowPFMSRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PFMSRDataTable cln = ((PFMSRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PFMSRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnsaldesc = base.Columns["saldesc"];
                this.columnrateamt = base.Columns["rateamt"];
                this.columnhsamcode = base.Columns["hsamcode"];
                this.columndateadjusted = base.Columns["dateadjusted"];
                this.columnremarks = base.Columns["remarks"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnhsgcode = base.Columns["hsgcode"];
                this.columnsalcode = base.Columns["salcode"];
                this.columnAdjustmentFlag = base.Columns["AdjustmentFlag"];
                this.columnsajmcode = base.Columns["sajmcode"];
                this.columnline = base.Columns["line"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnsaldesc = new global::System.Data.DataColumn("saldesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaldesc);
                this.columnrateamt = new global::System.Data.DataColumn("rateamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrateamt);
                this.columnhsamcode = new global::System.Data.DataColumn("hsamcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhsamcode);
                this.columndateadjusted = new global::System.Data.DataColumn("dateadjusted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateadjusted);
                this.columnremarks = new global::System.Data.DataColumn("remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremarks);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnhsgcode = new global::System.Data.DataColumn("hsgcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhsgcode);
                this.columnsalcode = new global::System.Data.DataColumn("salcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalcode);
                this.columnAdjustmentFlag = new global::System.Data.DataColumn("AdjustmentFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustmentFlag);
                this.columnsajmcode = new global::System.Data.DataColumn("sajmcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsajmcode);
                this.columnline = new global::System.Data.DataColumn("line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline);
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnsaldesc.MaxLength = 20;
                this.columnhsamcode.MaxLength = 20;
                this.columnremarks.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncreatedby.MaxLength = 50;
                this.columnhsgcode.MaxLength = 30;
                this.columnsalcode.MaxLength = 30;
                this.columnAdjustmentFlag.MaxLength = 30;
                this.columnsajmcode.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMSRRow NewPFMSRRow() {
                return ((PFMSRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PFMSRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PFMSRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PFMSRRowChanged != null)) {
                    this.PFMSRRowChanged(this, new PFMSRRowChangeEvent(((PFMSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PFMSRRowChanging != null)) {
                    this.PFMSRRowChanging(this, new PFMSRRowChangeEvent(((PFMSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PFMSRRowDeleted != null)) {
                    this.PFMSRRowDeleted(this, new PFMSRRowChangeEvent(((PFMSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PFMSRRowDeleting != null)) {
                    this.PFMSRRowDeleting(this, new PFMSRRowChangeEvent(((PFMSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePFMSRRow(PFMSRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CFRds1 ds = new CFRds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PFMSRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CFRHRow : global::System.Data.DataRow {
            
            private CFRHDataTable tableCFRH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CFRHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCFRH = ((CFRHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    return ((string)(this[this.tableCFRH.refnumColumn]));
                }
                set {
                    this[this.tableCFRH.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirmedby {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.confirmedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmedby\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.confirmedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirmedcomments {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.confirmedcommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmedcomments\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.confirmedcommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal appraisalscore {
                get {
                    try {
                        return ((decimal)(this[this.tableCFRH.appraisalscoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appraisalscore\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.appraisalscoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isrecommended {
                get {
                    try {
                        return ((bool)(this[this.tableCFRH.isrecommendedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isrecommended\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.isrecommendedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvedby {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.approvedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvedby\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.approvedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvedcomments {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.approvedcommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvedcomments\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.approvedcommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isapproved {
                get {
                    try {
                        return ((bool)(this[this.tableCFRH.isapprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isapproved\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.isapprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCFRH.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime employmentdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCFRH.employmentdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'employmentdate\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.employmentdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal currentsal {
                get {
                    try {
                        return ((decimal)(this[this.tableCFRH.currentsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'currentsal\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.currentsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lastincrementdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCFRH.lastincrementdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lastincrementdate\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.lastincrementdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string reasonforlastincre {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.reasonforlastincreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reasonforlastincre\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.reasonforlastincreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal newsal {
                get {
                    try {
                        return ((decimal)(this[this.tableCFRH.newsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'newsal\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.newsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime newsaleffectivedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCFRH.newsaleffectivedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'newsaleffectivedate\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.newsaleffectivedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCFRH.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCFRH.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime confirmationdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCFRH.confirmationdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmationdate\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.confirmationdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statuscode {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.statuscodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statuscode\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.statuscodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitenum {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.sitenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitenum\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.sitenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.empnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.empnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tableCFRH.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool hasConfirmationDate {
                get {
                    try {
                        return ((bool)(this[this.tableCFRH.hasConfirmationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hasConfirmationDate\' in table \'CFRH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCFRH.hasConfirmationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tableCFRH.IDColumn]));
                }
                set {
                    this[this.tableCFRH.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableCFRH.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableCFRH.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmedbyNull() {
                return this.IsNull(this.tableCFRH.confirmedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmedbyNull() {
                this[this.tableCFRH.confirmedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmedcommentsNull() {
                return this.IsNull(this.tableCFRH.confirmedcommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmedcommentsNull() {
                this[this.tableCFRH.confirmedcommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsappraisalscoreNull() {
                return this.IsNull(this.tableCFRH.appraisalscoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetappraisalscoreNull() {
                this[this.tableCFRH.appraisalscoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisrecommendedNull() {
                return this.IsNull(this.tableCFRH.isrecommendedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisrecommendedNull() {
                this[this.tableCFRH.isrecommendedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovedbyNull() {
                return this.IsNull(this.tableCFRH.approvedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovedbyNull() {
                this[this.tableCFRH.approvedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovedcommentsNull() {
                return this.IsNull(this.tableCFRH.approvedcommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovedcommentsNull() {
                this[this.tableCFRH.approvedcommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisapprovedNull() {
                return this.IsNull(this.tableCFRH.isapprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisapprovedNull() {
                this[this.tableCFRH.isapprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tableCFRH.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tableCFRH.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemploymentdateNull() {
                return this.IsNull(this.tableCFRH.employmentdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemploymentdateNull() {
                this[this.tableCFRH.employmentdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurrentsalNull() {
                return this.IsNull(this.tableCFRH.currentsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurrentsalNull() {
                this[this.tableCFRH.currentsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslastincrementdateNull() {
                return this.IsNull(this.tableCFRH.lastincrementdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlastincrementdateNull() {
                this[this.tableCFRH.lastincrementdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreasonforlastincreNull() {
                return this.IsNull(this.tableCFRH.reasonforlastincreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreasonforlastincreNull() {
                this[this.tableCFRH.reasonforlastincreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnewsalNull() {
                return this.IsNull(this.tableCFRH.newsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnewsalNull() {
                this[this.tableCFRH.newsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnewsaleffectivedateNull() {
                return this.IsNull(this.tableCFRH.newsaleffectivedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnewsaleffectivedateNull() {
                this[this.tableCFRH.newsaleffectivedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableCFRH.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableCFRH.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableCFRH.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableCFRH.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableCFRH.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableCFRH.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableCFRH.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableCFRH.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableCFRH.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableCFRH.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableCFRH.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableCFRH.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmationdateNull() {
                return this.IsNull(this.tableCFRH.confirmationdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmationdateNull() {
                this[this.tableCFRH.confirmationdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatuscodeNull() {
                return this.IsNull(this.tableCFRH.statuscodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatuscodeNull() {
                this[this.tableCFRH.statuscodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenumNull() {
                return this.IsNull(this.tableCFRH.sitenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenumNull() {
                this[this.tableCFRH.sitenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tableCFRH.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tableCFRH.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnameNull() {
                return this.IsNull(this.tableCFRH.empnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnameNull() {
                this[this.tableCFRH.empnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tableCFRH.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tableCFRH.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshasConfirmationDateNull() {
                return this.IsNull(this.tableCFRH.hasConfirmationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethasConfirmationDateNull() {
                this[this.tableCFRH.hasConfirmationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PFMSRRow : global::System.Data.DataRow {
            
            private PFMSRDataTable tablePFMSR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMSRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePFMSR = ((PFMSRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tablePFMSR.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saldesc {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.saldescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saldesc\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.saldescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rateamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePFMSR.rateamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rateamt\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.rateamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hsamcode {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.hsamcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hsamcode\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.hsamcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateadjusted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMSR.dateadjustedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateadjusted\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.dateadjustedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remarks {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.remarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remarks\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.remarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMSR.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMSR.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hsgcode {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.hsgcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hsgcode\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.hsgcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salcode {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.salcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salcode\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.salcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AdjustmentFlag {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.AdjustmentFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustmentFlag\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.AdjustmentFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sajmcode {
                get {
                    try {
                        return ((string)(this[this.tablePFMSR.sajmcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sajmcode\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.sajmcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal line {
                get {
                    try {
                        return ((decimal)(this[this.tablePFMSR.lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'line\' in table \'PFMSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMSR.lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablePFMSR.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablePFMSR.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePFMSR.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePFMSR.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePFMSR.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePFMSR.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePFMSR.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePFMSR.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaldescNull() {
                return this.IsNull(this.tablePFMSR.saldescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaldescNull() {
                this[this.tablePFMSR.saldescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrateamtNull() {
                return this.IsNull(this.tablePFMSR.rateamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrateamtNull() {
                this[this.tablePFMSR.rateamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshsamcodeNull() {
                return this.IsNull(this.tablePFMSR.hsamcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethsamcodeNull() {
                this[this.tablePFMSR.hsamcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateadjustedNull() {
                return this.IsNull(this.tablePFMSR.dateadjustedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateadjustedNull() {
                this[this.tablePFMSR.dateadjustedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarksNull() {
                return this.IsNull(this.tablePFMSR.remarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarksNull() {
                this[this.tablePFMSR.remarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePFMSR.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePFMSR.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePFMSR.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePFMSR.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePFMSR.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePFMSR.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePFMSR.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePFMSR.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePFMSR.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePFMSR.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePFMSR.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePFMSR.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshsgcodeNull() {
                return this.IsNull(this.tablePFMSR.hsgcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethsgcodeNull() {
                this[this.tablePFMSR.hsgcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalcodeNull() {
                return this.IsNull(this.tablePFMSR.salcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalcodeNull() {
                this[this.tablePFMSR.salcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustmentFlagNull() {
                return this.IsNull(this.tablePFMSR.AdjustmentFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustmentFlagNull() {
                this[this.tablePFMSR.AdjustmentFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssajmcodeNull() {
                return this.IsNull(this.tablePFMSR.sajmcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsajmcodeNull() {
                this[this.tablePFMSR.sajmcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNull() {
                return this.IsNull(this.tablePFMSR.lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNull() {
                this[this.tablePFMSR.lineColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CFRHRowChangeEvent : global::System.EventArgs {
            
            private CFRHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFRHRowChangeEvent(CFRHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFRHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PFMSRRowChangeEvent : global::System.EventArgs {
            
            private PFMSRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMSRRowChangeEvent(PFMSRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMSRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591