//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9164
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.HEMP.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ApplicationDS1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ApplicationDS1 : global::System.Data.DataSet {
        
        private HEMPHDataTable tableHEMPH;
        
        private FAMRDataTable tableFAMR;
        
        private PFMEDUDataTable tablePFMEDU;
        
        private PFMWEDataTable tablePFMWE;
        
        private LetterAppointmentDataTable tableLetterAppointment;
        
        private CoyDataTable tableCoy;
        
        private SigTBDataTable tableSigTB;
        
        private PhotoTBDataTable tablePhotoTB;
        
        private HRAMDataTable tableHRAM;
        
        private HRRMDataTable tableHRRM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDS1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ApplicationDS1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HEMPH"] != null)) {
                    base.Tables.Add(new HEMPHDataTable(ds.Tables["HEMPH"]));
                }
                if ((ds.Tables["FAMR"] != null)) {
                    base.Tables.Add(new FAMRDataTable(ds.Tables["FAMR"]));
                }
                if ((ds.Tables["PFMEDU"] != null)) {
                    base.Tables.Add(new PFMEDUDataTable(ds.Tables["PFMEDU"]));
                }
                if ((ds.Tables["PFMWE"] != null)) {
                    base.Tables.Add(new PFMWEDataTable(ds.Tables["PFMWE"]));
                }
                if ((ds.Tables["LetterAppointment"] != null)) {
                    base.Tables.Add(new LetterAppointmentDataTable(ds.Tables["LetterAppointment"]));
                }
                if ((ds.Tables["Coy"] != null)) {
                    base.Tables.Add(new CoyDataTable(ds.Tables["Coy"]));
                }
                if ((ds.Tables["SigTB"] != null)) {
                    base.Tables.Add(new SigTBDataTable(ds.Tables["SigTB"]));
                }
                if ((ds.Tables["PhotoTB"] != null)) {
                    base.Tables.Add(new PhotoTBDataTable(ds.Tables["PhotoTB"]));
                }
                if ((ds.Tables["HRAM"] != null)) {
                    base.Tables.Add(new HRAMDataTable(ds.Tables["HRAM"]));
                }
                if ((ds.Tables["HRRM"] != null)) {
                    base.Tables.Add(new HRRMDataTable(ds.Tables["HRRM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HEMPHDataTable HEMPH {
            get {
                return this.tableHEMPH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FAMRDataTable FAMR {
            get {
                return this.tableFAMR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PFMEDUDataTable PFMEDU {
            get {
                return this.tablePFMEDU;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PFMWEDataTable PFMWE {
            get {
                return this.tablePFMWE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LetterAppointmentDataTable LetterAppointment {
            get {
                return this.tableLetterAppointment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CoyDataTable Coy {
            get {
                return this.tableCoy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SigTBDataTable SigTB {
            get {
                return this.tableSigTB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PhotoTBDataTable PhotoTB {
            get {
                return this.tablePhotoTB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HRAMDataTable HRAM {
            get {
                return this.tableHRAM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HRRMDataTable HRRM {
            get {
                return this.tableHRRM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ApplicationDS1 cln = ((ApplicationDS1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HEMPH"] != null)) {
                    base.Tables.Add(new HEMPHDataTable(ds.Tables["HEMPH"]));
                }
                if ((ds.Tables["FAMR"] != null)) {
                    base.Tables.Add(new FAMRDataTable(ds.Tables["FAMR"]));
                }
                if ((ds.Tables["PFMEDU"] != null)) {
                    base.Tables.Add(new PFMEDUDataTable(ds.Tables["PFMEDU"]));
                }
                if ((ds.Tables["PFMWE"] != null)) {
                    base.Tables.Add(new PFMWEDataTable(ds.Tables["PFMWE"]));
                }
                if ((ds.Tables["LetterAppointment"] != null)) {
                    base.Tables.Add(new LetterAppointmentDataTable(ds.Tables["LetterAppointment"]));
                }
                if ((ds.Tables["Coy"] != null)) {
                    base.Tables.Add(new CoyDataTable(ds.Tables["Coy"]));
                }
                if ((ds.Tables["SigTB"] != null)) {
                    base.Tables.Add(new SigTBDataTable(ds.Tables["SigTB"]));
                }
                if ((ds.Tables["PhotoTB"] != null)) {
                    base.Tables.Add(new PhotoTBDataTable(ds.Tables["PhotoTB"]));
                }
                if ((ds.Tables["HRAM"] != null)) {
                    base.Tables.Add(new HRAMDataTable(ds.Tables["HRAM"]));
                }
                if ((ds.Tables["HRRM"] != null)) {
                    base.Tables.Add(new HRRMDataTable(ds.Tables["HRRM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHEMPH = ((HEMPHDataTable)(base.Tables["HEMPH"]));
            if ((initTable == true)) {
                if ((this.tableHEMPH != null)) {
                    this.tableHEMPH.InitVars();
                }
            }
            this.tableFAMR = ((FAMRDataTable)(base.Tables["FAMR"]));
            if ((initTable == true)) {
                if ((this.tableFAMR != null)) {
                    this.tableFAMR.InitVars();
                }
            }
            this.tablePFMEDU = ((PFMEDUDataTable)(base.Tables["PFMEDU"]));
            if ((initTable == true)) {
                if ((this.tablePFMEDU != null)) {
                    this.tablePFMEDU.InitVars();
                }
            }
            this.tablePFMWE = ((PFMWEDataTable)(base.Tables["PFMWE"]));
            if ((initTable == true)) {
                if ((this.tablePFMWE != null)) {
                    this.tablePFMWE.InitVars();
                }
            }
            this.tableLetterAppointment = ((LetterAppointmentDataTable)(base.Tables["LetterAppointment"]));
            if ((initTable == true)) {
                if ((this.tableLetterAppointment != null)) {
                    this.tableLetterAppointment.InitVars();
                }
            }
            this.tableCoy = ((CoyDataTable)(base.Tables["Coy"]));
            if ((initTable == true)) {
                if ((this.tableCoy != null)) {
                    this.tableCoy.InitVars();
                }
            }
            this.tableSigTB = ((SigTBDataTable)(base.Tables["SigTB"]));
            if ((initTable == true)) {
                if ((this.tableSigTB != null)) {
                    this.tableSigTB.InitVars();
                }
            }
            this.tablePhotoTB = ((PhotoTBDataTable)(base.Tables["PhotoTB"]));
            if ((initTable == true)) {
                if ((this.tablePhotoTB != null)) {
                    this.tablePhotoTB.InitVars();
                }
            }
            this.tableHRAM = ((HRAMDataTable)(base.Tables["HRAM"]));
            if ((initTable == true)) {
                if ((this.tableHRAM != null)) {
                    this.tableHRAM.InitVars();
                }
            }
            this.tableHRRM = ((HRRMDataTable)(base.Tables["HRRM"]));
            if ((initTable == true)) {
                if ((this.tableHRRM != null)) {
                    this.tableHRRM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ApplicationDS1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ApplicationDS1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHEMPH = new HEMPHDataTable();
            base.Tables.Add(this.tableHEMPH);
            this.tableFAMR = new FAMRDataTable();
            base.Tables.Add(this.tableFAMR);
            this.tablePFMEDU = new PFMEDUDataTable();
            base.Tables.Add(this.tablePFMEDU);
            this.tablePFMWE = new PFMWEDataTable();
            base.Tables.Add(this.tablePFMWE);
            this.tableLetterAppointment = new LetterAppointmentDataTable();
            base.Tables.Add(this.tableLetterAppointment);
            this.tableCoy = new CoyDataTable();
            base.Tables.Add(this.tableCoy);
            this.tableSigTB = new SigTBDataTable();
            base.Tables.Add(this.tableSigTB);
            this.tablePhotoTB = new PhotoTBDataTable();
            base.Tables.Add(this.tablePhotoTB);
            this.tableHRAM = new HRAMDataTable();
            base.Tables.Add(this.tableHRAM);
            this.tableHRRM = new HRRMDataTable();
            base.Tables.Add(this.tableHRRM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHEMPH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFAMR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePFMEDU() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePFMWE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLetterAppointment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCoy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSigTB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePhotoTB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHRAM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHRRM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ApplicationDS1 ds = new ApplicationDS1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HEMPHRowChangeEventHandler(object sender, HEMPHRowChangeEvent e);
        
        public delegate void FAMRRowChangeEventHandler(object sender, FAMRRowChangeEvent e);
        
        public delegate void PFMEDURowChangeEventHandler(object sender, PFMEDURowChangeEvent e);
        
        public delegate void PFMWERowChangeEventHandler(object sender, PFMWERowChangeEvent e);
        
        public delegate void LetterAppointmentRowChangeEventHandler(object sender, LetterAppointmentRowChangeEvent e);
        
        public delegate void CoyRowChangeEventHandler(object sender, CoyRowChangeEvent e);
        
        public delegate void SigTBRowChangeEventHandler(object sender, SigTBRowChangeEvent e);
        
        public delegate void PhotoTBRowChangeEventHandler(object sender, PhotoTBRowChangeEvent e);
        
        public delegate void HRAMRowChangeEventHandler(object sender, HRAMRowChangeEvent e);
        
        public delegate void HRRMRowChangeEventHandler(object sender, HRRMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HEMPHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnempname1;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnnationality;
            
            private global::System.Data.DataColumn columnmaritalstatus;
            
            private global::System.Data.DataColumn columnethnicity;
            
            private global::System.Data.DataColumn columndob;
            
            private global::System.Data.DataColumn columnbloodtype;
            
            private global::System.Data.DataColumn columnetype;
            
            private global::System.Data.DataColumn columnstatusid;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columndateconfirmed;
            
            private global::System.Data.DataColumn columndateresigned;
            
            private global::System.Data.DataColumn columnbankacc;
            
            private global::System.Data.DataColumn columnbasicsal;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnnextapprdate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnempname;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columncardid;
            
            private global::System.Data.DataColumn columnrecrempnum;
            
            private global::System.Data.DataColumn columnhsgcode;
            
            private global::System.Data.DataColumn columnphoto;
            
            private global::System.Data.DataColumn columnreligion;
            
            private global::System.Data.DataColumn columnforce;
            
            private global::System.Data.DataColumn columnrank;
            
            private global::System.Data.DataColumn columnvocation;
            
            private global::System.Data.DataColumn columnyearserved;
            
            private global::System.Data.DataColumn columnpadd1;
            
            private global::System.Data.DataColumn columnpadd2;
            
            private global::System.Data.DataColumn columnpadd3;
            
            private global::System.Data.DataColumn columnppostal;
            
            private global::System.Data.DataColumn columncadd1;
            
            private global::System.Data.DataColumn columncadd2;
            
            private global::System.Data.DataColumn columncadd3;
            
            private global::System.Data.DataColumn columncpostal;
            
            private global::System.Data.DataColumn columnisNSmandatory;
            
            private global::System.Data.DataColumn columnstatuscode;
            
            private global::System.Data.DataColumn columndatejoined;
            
            private global::System.Data.DataColumn columnhramnum;
            
            private global::System.Data.DataColumn columnregname;
            
            private global::System.Data.DataColumn columnisHQstaff;
            
            private global::System.Data.DataColumn columnconfirmationdate;
            
            private global::System.Data.DataColumn columnisretired;
            
            private global::System.Data.DataColumn columncontractend;
            
            private global::System.Data.DataColumn columnsitnumi;
            
            private global::System.Data.DataColumn columnpaytypecode;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columndaysperweek;
            
            private global::System.Data.DataColumn columnhramdesc;
            
            private global::System.Data.DataColumn columnisblacklisted;
            
            private global::System.Data.DataColumn columnBldgBlock;
            
            private global::System.Data.DataColumn columnLevelNo;
            
            private global::System.Data.DataColumn columnUnitNo;
            
            private global::System.Data.DataColumn columnStreetName;
            
            private global::System.Data.DataColumn columnCountryAddress;
            
            private global::System.Data.DataColumn columnBankCode;
            
            private global::System.Data.DataColumn columnBranchCode;
            
            private global::System.Data.DataColumn columnForeignAddress;
            
            private global::System.Data.DataColumn columnbankname;
            
            private global::System.Data.DataColumn columnCOUNTRY;
            
            private global::System.Data.DataColumn columnagencyfund;
            
            private global::System.Data.DataColumn columndatePR;
            
            private global::System.Data.DataColumn columnpostal;
            
            private global::System.Data.DataColumn columnpcountry;
            
            private global::System.Data.DataColumn columnpmcode;
            
            private global::System.Data.DataColumn columnemptype;
            
            private global::System.Data.DataColumn columnphotourl;
            
            private global::System.Data.DataColumn columnsitenum;
            
            private global::System.Data.DataColumn columncontractdoc;
            
            private global::System.Data.DataColumn columncontractloc;
            
            private global::System.Data.DataColumn columncontractsigned;
            
            private global::System.Data.DataColumn columnsignaturepicloc;
            
            private global::System.Data.DataColumn columninterviewedby;
            
            private global::System.Data.DataColumn columnisWebAdd;
            
            private global::System.Data.DataColumn columnwebguid;
            
            private global::System.Data.DataColumn columnmodifiedby;
            
            private global::System.Data.DataColumn columncontactno;
            
            private global::System.Data.DataColumn columnisApproved;
            
            private global::System.Data.DataColumn columnapprovedate;
            
            private global::System.Data.DataColumn columnapproveby;
            
            private global::System.Data.DataColumn columnapprovename;
            
            private global::System.Data.DataColumn columnapprovestatus;
            
            private global::System.Data.DataColumn columndateapplied;
            
            private global::System.Data.DataColumn columnenglishWritten;
            
            private global::System.Data.DataColumn columnenglishSpoken;
            
            private global::System.Data.DataColumn columnchineseWritten;
            
            private global::System.Data.DataColumn columnchineseSpoken;
            
            private global::System.Data.DataColumn columnotherLanguage;
            
            private global::System.Data.DataColumn columnotherLanguageWritten;
            
            private global::System.Data.DataColumn columnotherLanguageSpoken;
            
            private global::System.Data.DataColumn columndriverlicence;
            
            private global::System.Data.DataColumn columndeclaration1;
            
            private global::System.Data.DataColumn columndeclaration2;
            
            private global::System.Data.DataColumn columndeclaration3;
            
            private global::System.Data.DataColumn columndeclaration4;
            
            private global::System.Data.DataColumn columndeclaration5;
            
            private global::System.Data.DataColumn columndeclaration6;
            
            private global::System.Data.DataColumn columndeclaration6remark;
            
            private global::System.Data.DataColumn columngiroReason;
            
            private global::System.Data.DataColumn columnappliFormSigLoc;
            
            private global::System.Data.DataColumn columncontactHouse;
            
            private global::System.Data.DataColumn columncommencedate;
            
            private global::System.Data.DataColumn columnhomecontactno;
            
            private global::System.Data.DataColumn columnMonToFriTimeFrom;
            
            private global::System.Data.DataColumn columnMonToFriTimeTo;
            
            private global::System.Data.DataColumn columnMonToFriLunchHr;
            
            private global::System.Data.DataColumn columnMonToFriTeaBrkHr;
            
            private global::System.Data.DataColumn columnSatTimeFrom;
            
            private global::System.Data.DataColumn columnSatTimeTo;
            
            private global::System.Data.DataColumn columnSatLunchHr;
            
            private global::System.Data.DataColumn columnSatTeaBrkHr;
            
            private global::System.Data.DataColumn columnSunTimeFrom;
            
            private global::System.Data.DataColumn columnSunTimeTo;
            
            private global::System.Data.DataColumn columnSunLunchHr;
            
            private global::System.Data.DataColumn columnSunTeaBrkHr;
            
            private global::System.Data.DataColumn columnRegularOffDay;
            
            private global::System.Data.DataColumn columnPHTimeFrom;
            
            private global::System.Data.DataColumn columnPHTimeTo;
            
            private global::System.Data.DataColumn columnPHLunchHr;
            
            private global::System.Data.DataColumn columnPHTeaBrkHr;
            
            private global::System.Data.DataColumn columnjobgroup;
            
            private global::System.Data.DataColumn columnRecommSigLoc;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnreferby;
            
            private global::System.Data.DataColumn columngiroSigLoc;
            
            private global::System.Data.DataColumn columnsupv;
            
            private global::System.Data.DataColumn columnrejDesc;
            
            private global::System.Data.DataColumn columnemgName;
            
            private global::System.Data.DataColumn columnemgContact;
            
            private global::System.Data.DataColumn columnemgRelationship;
            
            private global::System.Data.DataColumn columnsalaryRemark;
            
            private global::System.Data.DataColumn columnresigndate;
            
            private global::System.Data.DataColumn columndeclaration7;
            
            private global::System.Data.DataColumn columndeclaration1Remark;
            
            private global::System.Data.DataColumn columndeclaration2Remark;
            
            private global::System.Data.DataColumn columndeclaration3Remark;
            
            private global::System.Data.DataColumn columndeclaration4Remark;
            
            private global::System.Data.DataColumn columndeclaration5Remark;
            
            private global::System.Data.DataColumn columnaccountHolderName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHDataTable() {
                this.TableName = "HEMPH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HEMPHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HEMPHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empname1Column {
                get {
                    return this.columnempname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nationalityColumn {
                get {
                    return this.columnnationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maritalstatusColumn {
                get {
                    return this.columnmaritalstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ethnicityColumn {
                get {
                    return this.columnethnicity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dobColumn {
                get {
                    return this.columndob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bloodtypeColumn {
                get {
                    return this.columnbloodtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn etypeColumn {
                get {
                    return this.columnetype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusidColumn {
                get {
                    return this.columnstatusid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateconfirmedColumn {
                get {
                    return this.columndateconfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateresignedColumn {
                get {
                    return this.columndateresigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankaccColumn {
                get {
                    return this.columnbankacc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basicsalColumn {
                get {
                    return this.columnbasicsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nextapprdateColumn {
                get {
                    return this.columnnextapprdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnameColumn {
                get {
                    return this.columnempname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cardidColumn {
                get {
                    return this.columncardid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recrempnumColumn {
                get {
                    return this.columnrecrempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hsgcodeColumn {
                get {
                    return this.columnhsgcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photoColumn {
                get {
                    return this.columnphoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn religionColumn {
                get {
                    return this.columnreligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn forceColumn {
                get {
                    return this.columnforce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rankColumn {
                get {
                    return this.columnrank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vocationColumn {
                get {
                    return this.columnvocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearservedColumn {
                get {
                    return this.columnyearserved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd1Column {
                get {
                    return this.columnpadd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd2Column {
                get {
                    return this.columnpadd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd3Column {
                get {
                    return this.columnpadd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ppostalColumn {
                get {
                    return this.columnppostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd1Column {
                get {
                    return this.columncadd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd2Column {
                get {
                    return this.columncadd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd3Column {
                get {
                    return this.columncadd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cpostalColumn {
                get {
                    return this.columncpostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isNSmandatoryColumn {
                get {
                    return this.columnisNSmandatory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statuscodeColumn {
                get {
                    return this.columnstatuscode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datejoinedColumn {
                get {
                    return this.columndatejoined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramnumColumn {
                get {
                    return this.columnhramnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn regnameColumn {
                get {
                    return this.columnregname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isHQstaffColumn {
                get {
                    return this.columnisHQstaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmationdateColumn {
                get {
                    return this.columnconfirmationdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isretiredColumn {
                get {
                    return this.columnisretired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractendColumn {
                get {
                    return this.columncontractend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitnumiColumn {
                get {
                    return this.columnsitnumi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paytypecodeColumn {
                get {
                    return this.columnpaytypecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daysperweekColumn {
                get {
                    return this.columndaysperweek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramdescColumn {
                get {
                    return this.columnhramdesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isblacklistedColumn {
                get {
                    return this.columnisblacklisted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BldgBlockColumn {
                get {
                    return this.columnBldgBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LevelNoColumn {
                get {
                    return this.columnLevelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNoColumn {
                get {
                    return this.columnUnitNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetNameColumn {
                get {
                    return this.columnStreetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryAddressColumn {
                get {
                    return this.columnCountryAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankCodeColumn {
                get {
                    return this.columnBankCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchCodeColumn {
                get {
                    return this.columnBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForeignAddressColumn {
                get {
                    return this.columnForeignAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn banknameColumn {
                get {
                    return this.columnbankname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTRYColumn {
                get {
                    return this.columnCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agencyfundColumn {
                get {
                    return this.columnagencyfund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datePRColumn {
                get {
                    return this.columndatePR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn postalColumn {
                get {
                    return this.columnpostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcountryColumn {
                get {
                    return this.columnpcountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pmcodeColumn {
                get {
                    return this.columnpmcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emptypeColumn {
                get {
                    return this.columnemptype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photourlColumn {
                get {
                    return this.columnphotourl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenumColumn {
                get {
                    return this.columnsitenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractdocColumn {
                get {
                    return this.columncontractdoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractlocColumn {
                get {
                    return this.columncontractloc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractsignedColumn {
                get {
                    return this.columncontractsigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn signaturepiclocColumn {
                get {
                    return this.columnsignaturepicloc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn interviewedbyColumn {
                get {
                    return this.columninterviewedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isWebAddColumn {
                get {
                    return this.columnisWebAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn webguidColumn {
                get {
                    return this.columnwebguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedbyColumn {
                get {
                    return this.columnmodifiedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactnoColumn {
                get {
                    return this.columncontactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isApprovedColumn {
                get {
                    return this.columnisApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvedateColumn {
                get {
                    return this.columnapprovedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvebyColumn {
                get {
                    return this.columnapproveby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvenameColumn {
                get {
                    return this.columnapprovename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvestatusColumn {
                get {
                    return this.columnapprovestatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateappliedColumn {
                get {
                    return this.columndateapplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn englishWrittenColumn {
                get {
                    return this.columnenglishWritten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn englishSpokenColumn {
                get {
                    return this.columnenglishSpoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chineseWrittenColumn {
                get {
                    return this.columnchineseWritten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chineseSpokenColumn {
                get {
                    return this.columnchineseSpoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherLanguageColumn {
                get {
                    return this.columnotherLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherLanguageWrittenColumn {
                get {
                    return this.columnotherLanguageWritten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherLanguageSpokenColumn {
                get {
                    return this.columnotherLanguageSpoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driverlicenceColumn {
                get {
                    return this.columndriverlicence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration1Column {
                get {
                    return this.columndeclaration1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration2Column {
                get {
                    return this.columndeclaration2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration3Column {
                get {
                    return this.columndeclaration3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration4Column {
                get {
                    return this.columndeclaration4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration5Column {
                get {
                    return this.columndeclaration5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration6Column {
                get {
                    return this.columndeclaration6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration6remarkColumn {
                get {
                    return this.columndeclaration6remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn giroReasonColumn {
                get {
                    return this.columngiroReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appliFormSigLocColumn {
                get {
                    return this.columnappliFormSigLoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactHouseColumn {
                get {
                    return this.columncontactHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commencedateColumn {
                get {
                    return this.columncommencedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn homecontactnoColumn {
                get {
                    return this.columnhomecontactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTimeFromColumn {
                get {
                    return this.columnMonToFriTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTimeToColumn {
                get {
                    return this.columnMonToFriTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriLunchHrColumn {
                get {
                    return this.columnMonToFriLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTeaBrkHrColumn {
                get {
                    return this.columnMonToFriTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTimeFromColumn {
                get {
                    return this.columnSatTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTimeToColumn {
                get {
                    return this.columnSatTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatLunchHrColumn {
                get {
                    return this.columnSatLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTeaBrkHrColumn {
                get {
                    return this.columnSatTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTimeFromColumn {
                get {
                    return this.columnSunTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTimeToColumn {
                get {
                    return this.columnSunTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunLunchHrColumn {
                get {
                    return this.columnSunLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTeaBrkHrColumn {
                get {
                    return this.columnSunTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegularOffDayColumn {
                get {
                    return this.columnRegularOffDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTimeFromColumn {
                get {
                    return this.columnPHTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTimeToColumn {
                get {
                    return this.columnPHTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHLunchHrColumn {
                get {
                    return this.columnPHLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTeaBrkHrColumn {
                get {
                    return this.columnPHTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jobgroupColumn {
                get {
                    return this.columnjobgroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecommSigLocColumn {
                get {
                    return this.columnRecommSigLoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn referbyColumn {
                get {
                    return this.columnreferby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn giroSigLocColumn {
                get {
                    return this.columngiroSigLoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supvColumn {
                get {
                    return this.columnsupv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rejDescColumn {
                get {
                    return this.columnrejDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emgNameColumn {
                get {
                    return this.columnemgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emgContactColumn {
                get {
                    return this.columnemgContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emgRelationshipColumn {
                get {
                    return this.columnemgRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salaryRemarkColumn {
                get {
                    return this.columnsalaryRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn resigndateColumn {
                get {
                    return this.columnresigndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration7Column {
                get {
                    return this.columndeclaration7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration1RemarkColumn {
                get {
                    return this.columndeclaration1Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration2RemarkColumn {
                get {
                    return this.columndeclaration2Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration3RemarkColumn {
                get {
                    return this.columndeclaration3Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration4RemarkColumn {
                get {
                    return this.columndeclaration4Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration5RemarkColumn {
                get {
                    return this.columndeclaration5Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accountHolderNameColumn {
                get {
                    return this.columnaccountHolderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow this[int index] {
                get {
                    return ((HEMPHRow)(this.Rows[index]));
                }
            }
            
            public event HEMPHRowChangeEventHandler HEMPHRowChanging;
            
            public event HEMPHRowChangeEventHandler HEMPHRowChanged;
            
            public event HEMPHRowChangeEventHandler HEMPHRowDeleting;
            
            public event HEMPHRowChangeEventHandler HEMPHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHEMPHRow(HEMPHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow AddHEMPHRow(
                        long ID, 
                        string refnum, 
                        string empnum, 
                        string nric, 
                        string empname1, 
                        string gender, 
                        string nationality, 
                        string maritalstatus, 
                        string ethnicity, 
                        System.DateTime dob, 
                        string bloodtype, 
                        string etype, 
                        string statusid, 
                        string sectorcode, 
                        System.DateTime dateconfirmed, 
                        System.DateTime dateresigned, 
                        string bankacc, 
                        decimal basicsal, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string createdby, 
                        System.DateTime nextapprdate, 
                        string remark, 
                        string contact, 
                        string empname, 
                        string designation, 
                        string cardid, 
                        string recrempnum, 
                        string hsgcode, 
                        byte[] photo, 
                        string religion, 
                        string force, 
                        string rank, 
                        string vocation, 
                        string yearserved, 
                        string padd1, 
                        string padd2, 
                        string padd3, 
                        string ppostal, 
                        string cadd1, 
                        string cadd2, 
                        string cadd3, 
                        string cpostal, 
                        bool isNSmandatory, 
                        string statuscode, 
                        System.DateTime datejoined, 
                        string hramnum, 
                        string regname, 
                        bool isHQstaff, 
                        string confirmationdate, 
                        bool isretired, 
                        string contractend, 
                        string sitnumi, 
                        string paytypecode, 
                        string matnum, 
                        string matname, 
                        decimal daysperweek, 
                        string hramdesc, 
                        bool isblacklisted, 
                        string BldgBlock, 
                        string LevelNo, 
                        string UnitNo, 
                        string StreetName, 
                        string CountryAddress, 
                        string BankCode, 
                        string BranchCode, 
                        string ForeignAddress, 
                        string bankname, 
                        string COUNTRY, 
                        string agencyfund, 
                        string datePR, 
                        string postal, 
                        string pcountry, 
                        string pmcode, 
                        string emptype, 
                        string photourl, 
                        string sitenum, 
                        byte[] contractdoc, 
                        string contractloc, 
                        bool contractsigned, 
                        string signaturepicloc, 
                        string interviewedby, 
                        bool isWebAdd, 
                        string webguid, 
                        string modifiedby, 
                        string contactno, 
                        bool isApproved, 
                        System.DateTime approvedate, 
                        string approveby, 
                        string approvename, 
                        string approvestatus, 
                        System.DateTime dateapplied, 
                        int englishWritten, 
                        int englishSpoken, 
                        int chineseWritten, 
                        int chineseSpoken, 
                        string otherLanguage, 
                        int otherLanguageWritten, 
                        int otherLanguageSpoken, 
                        string driverlicence, 
                        bool declaration1, 
                        bool declaration2, 
                        bool declaration3, 
                        bool declaration4, 
                        bool declaration5, 
                        bool declaration6, 
                        string declaration6remark, 
                        string giroReason, 
                        string appliFormSigLoc, 
                        string contactHouse, 
                        System.DateTime commencedate, 
                        string homecontactno, 
                        string MonToFriTimeFrom, 
                        string MonToFriTimeTo, 
                        string MonToFriLunchHr, 
                        string MonToFriTeaBrkHr, 
                        string SatTimeFrom, 
                        string SatTimeTo, 
                        string SatLunchHr, 
                        string SatTeaBrkHr, 
                        string SunTimeFrom, 
                        string SunTimeTo, 
                        string SunLunchHr, 
                        string SunTeaBrkHr, 
                        string RegularOffDay, 
                        string PHTimeFrom, 
                        string PHTimeTo, 
                        string PHLunchHr, 
                        string PHTeaBrkHr, 
                        string jobgroup, 
                        string RecommSigLoc, 
                        string email, 
                        string referby, 
                        string giroSigLoc, 
                        string supv, 
                        string rejDesc, 
                        string emgName, 
                        string emgContact, 
                        string emgRelationship, 
                        string salaryRemark, 
                        System.DateTime resigndate, 
                        bool declaration7, 
                        string declaration1Remark, 
                        string declaration2Remark, 
                        string declaration3Remark, 
                        string declaration4Remark, 
                        string declaration5Remark, 
                        string accountHolderName) {
                HEMPHRow rowHEMPHRow = ((HEMPHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        empnum,
                        nric,
                        empname1,
                        gender,
                        nationality,
                        maritalstatus,
                        ethnicity,
                        dob,
                        bloodtype,
                        etype,
                        statusid,
                        sectorcode,
                        dateconfirmed,
                        dateresigned,
                        bankacc,
                        basicsal,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        createdby,
                        nextapprdate,
                        remark,
                        contact,
                        empname,
                        designation,
                        cardid,
                        recrempnum,
                        hsgcode,
                        photo,
                        religion,
                        force,
                        rank,
                        vocation,
                        yearserved,
                        padd1,
                        padd2,
                        padd3,
                        ppostal,
                        cadd1,
                        cadd2,
                        cadd3,
                        cpostal,
                        isNSmandatory,
                        statuscode,
                        datejoined,
                        hramnum,
                        regname,
                        isHQstaff,
                        confirmationdate,
                        isretired,
                        contractend,
                        sitnumi,
                        paytypecode,
                        matnum,
                        matname,
                        daysperweek,
                        hramdesc,
                        isblacklisted,
                        BldgBlock,
                        LevelNo,
                        UnitNo,
                        StreetName,
                        CountryAddress,
                        BankCode,
                        BranchCode,
                        ForeignAddress,
                        bankname,
                        COUNTRY,
                        agencyfund,
                        datePR,
                        postal,
                        pcountry,
                        pmcode,
                        emptype,
                        photourl,
                        sitenum,
                        contractdoc,
                        contractloc,
                        contractsigned,
                        signaturepicloc,
                        interviewedby,
                        isWebAdd,
                        webguid,
                        modifiedby,
                        contactno,
                        isApproved,
                        approvedate,
                        approveby,
                        approvename,
                        approvestatus,
                        dateapplied,
                        englishWritten,
                        englishSpoken,
                        chineseWritten,
                        chineseSpoken,
                        otherLanguage,
                        otherLanguageWritten,
                        otherLanguageSpoken,
                        driverlicence,
                        declaration1,
                        declaration2,
                        declaration3,
                        declaration4,
                        declaration5,
                        declaration6,
                        declaration6remark,
                        giroReason,
                        appliFormSigLoc,
                        contactHouse,
                        commencedate,
                        homecontactno,
                        MonToFriTimeFrom,
                        MonToFriTimeTo,
                        MonToFriLunchHr,
                        MonToFriTeaBrkHr,
                        SatTimeFrom,
                        SatTimeTo,
                        SatLunchHr,
                        SatTeaBrkHr,
                        SunTimeFrom,
                        SunTimeTo,
                        SunLunchHr,
                        SunTeaBrkHr,
                        RegularOffDay,
                        PHTimeFrom,
                        PHTimeTo,
                        PHLunchHr,
                        PHTeaBrkHr,
                        jobgroup,
                        RecommSigLoc,
                        email,
                        referby,
                        giroSigLoc,
                        supv,
                        rejDesc,
                        emgName,
                        emgContact,
                        emgRelationship,
                        salaryRemark,
                        resigndate,
                        declaration7,
                        declaration1Remark,
                        declaration2Remark,
                        declaration3Remark,
                        declaration4Remark,
                        declaration5Remark,
                        accountHolderName};
                rowHEMPHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHEMPHRow);
                return rowHEMPHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HEMPHDataTable cln = ((HEMPHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HEMPHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnnric = base.Columns["nric"];
                this.columnempname1 = base.Columns["empname1"];
                this.columngender = base.Columns["gender"];
                this.columnnationality = base.Columns["nationality"];
                this.columnmaritalstatus = base.Columns["maritalstatus"];
                this.columnethnicity = base.Columns["ethnicity"];
                this.columndob = base.Columns["dob"];
                this.columnbloodtype = base.Columns["bloodtype"];
                this.columnetype = base.Columns["etype"];
                this.columnstatusid = base.Columns["statusid"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columndateconfirmed = base.Columns["dateconfirmed"];
                this.columndateresigned = base.Columns["dateresigned"];
                this.columnbankacc = base.Columns["bankacc"];
                this.columnbasicsal = base.Columns["basicsal"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnnextapprdate = base.Columns["nextapprdate"];
                this.columnremark = base.Columns["remark"];
                this.columncontact = base.Columns["contact"];
                this.columnempname = base.Columns["empname"];
                this.columndesignation = base.Columns["designation"];
                this.columncardid = base.Columns["cardid"];
                this.columnrecrempnum = base.Columns["recrempnum"];
                this.columnhsgcode = base.Columns["hsgcode"];
                this.columnphoto = base.Columns["photo"];
                this.columnreligion = base.Columns["religion"];
                this.columnforce = base.Columns["force"];
                this.columnrank = base.Columns["rank"];
                this.columnvocation = base.Columns["vocation"];
                this.columnyearserved = base.Columns["yearserved"];
                this.columnpadd1 = base.Columns["padd1"];
                this.columnpadd2 = base.Columns["padd2"];
                this.columnpadd3 = base.Columns["padd3"];
                this.columnppostal = base.Columns["ppostal"];
                this.columncadd1 = base.Columns["cadd1"];
                this.columncadd2 = base.Columns["cadd2"];
                this.columncadd3 = base.Columns["cadd3"];
                this.columncpostal = base.Columns["cpostal"];
                this.columnisNSmandatory = base.Columns["isNSmandatory"];
                this.columnstatuscode = base.Columns["statuscode"];
                this.columndatejoined = base.Columns["datejoined"];
                this.columnhramnum = base.Columns["hramnum"];
                this.columnregname = base.Columns["regname"];
                this.columnisHQstaff = base.Columns["isHQstaff"];
                this.columnconfirmationdate = base.Columns["confirmationdate"];
                this.columnisretired = base.Columns["isretired"];
                this.columncontractend = base.Columns["contractend"];
                this.columnsitnumi = base.Columns["sitnumi"];
                this.columnpaytypecode = base.Columns["paytypecode"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columndaysperweek = base.Columns["daysperweek"];
                this.columnhramdesc = base.Columns["hramdesc"];
                this.columnisblacklisted = base.Columns["isblacklisted"];
                this.columnBldgBlock = base.Columns["BldgBlock"];
                this.columnLevelNo = base.Columns["LevelNo"];
                this.columnUnitNo = base.Columns["UnitNo"];
                this.columnStreetName = base.Columns["StreetName"];
                this.columnCountryAddress = base.Columns["CountryAddress"];
                this.columnBankCode = base.Columns["BankCode"];
                this.columnBranchCode = base.Columns["BranchCode"];
                this.columnForeignAddress = base.Columns["ForeignAddress"];
                this.columnbankname = base.Columns["bankname"];
                this.columnCOUNTRY = base.Columns["COUNTRY"];
                this.columnagencyfund = base.Columns["agencyfund"];
                this.columndatePR = base.Columns["datePR"];
                this.columnpostal = base.Columns["postal"];
                this.columnpcountry = base.Columns["pcountry"];
                this.columnpmcode = base.Columns["pmcode"];
                this.columnemptype = base.Columns["emptype"];
                this.columnphotourl = base.Columns["photourl"];
                this.columnsitenum = base.Columns["sitenum"];
                this.columncontractdoc = base.Columns["contractdoc"];
                this.columncontractloc = base.Columns["contractloc"];
                this.columncontractsigned = base.Columns["contractsigned"];
                this.columnsignaturepicloc = base.Columns["signaturepicloc"];
                this.columninterviewedby = base.Columns["interviewedby"];
                this.columnisWebAdd = base.Columns["isWebAdd"];
                this.columnwebguid = base.Columns["webguid"];
                this.columnmodifiedby = base.Columns["modifiedby"];
                this.columncontactno = base.Columns["contactno"];
                this.columnisApproved = base.Columns["isApproved"];
                this.columnapprovedate = base.Columns["approvedate"];
                this.columnapproveby = base.Columns["approveby"];
                this.columnapprovename = base.Columns["approvename"];
                this.columnapprovestatus = base.Columns["approvestatus"];
                this.columndateapplied = base.Columns["dateapplied"];
                this.columnenglishWritten = base.Columns["englishWritten"];
                this.columnenglishSpoken = base.Columns["englishSpoken"];
                this.columnchineseWritten = base.Columns["chineseWritten"];
                this.columnchineseSpoken = base.Columns["chineseSpoken"];
                this.columnotherLanguage = base.Columns["otherLanguage"];
                this.columnotherLanguageWritten = base.Columns["otherLanguageWritten"];
                this.columnotherLanguageSpoken = base.Columns["otherLanguageSpoken"];
                this.columndriverlicence = base.Columns["driverlicence"];
                this.columndeclaration1 = base.Columns["declaration1"];
                this.columndeclaration2 = base.Columns["declaration2"];
                this.columndeclaration3 = base.Columns["declaration3"];
                this.columndeclaration4 = base.Columns["declaration4"];
                this.columndeclaration5 = base.Columns["declaration5"];
                this.columndeclaration6 = base.Columns["declaration6"];
                this.columndeclaration6remark = base.Columns["declaration6remark"];
                this.columngiroReason = base.Columns["giroReason"];
                this.columnappliFormSigLoc = base.Columns["appliFormSigLoc"];
                this.columncontactHouse = base.Columns["contactHouse"];
                this.columncommencedate = base.Columns["commencedate"];
                this.columnhomecontactno = base.Columns["homecontactno"];
                this.columnMonToFriTimeFrom = base.Columns["MonToFriTimeFrom"];
                this.columnMonToFriTimeTo = base.Columns["MonToFriTimeTo"];
                this.columnMonToFriLunchHr = base.Columns["MonToFriLunchHr"];
                this.columnMonToFriTeaBrkHr = base.Columns["MonToFriTeaBrkHr"];
                this.columnSatTimeFrom = base.Columns["SatTimeFrom"];
                this.columnSatTimeTo = base.Columns["SatTimeTo"];
                this.columnSatLunchHr = base.Columns["SatLunchHr"];
                this.columnSatTeaBrkHr = base.Columns["SatTeaBrkHr"];
                this.columnSunTimeFrom = base.Columns["SunTimeFrom"];
                this.columnSunTimeTo = base.Columns["SunTimeTo"];
                this.columnSunLunchHr = base.Columns["SunLunchHr"];
                this.columnSunTeaBrkHr = base.Columns["SunTeaBrkHr"];
                this.columnRegularOffDay = base.Columns["RegularOffDay"];
                this.columnPHTimeFrom = base.Columns["PHTimeFrom"];
                this.columnPHTimeTo = base.Columns["PHTimeTo"];
                this.columnPHLunchHr = base.Columns["PHLunchHr"];
                this.columnPHTeaBrkHr = base.Columns["PHTeaBrkHr"];
                this.columnjobgroup = base.Columns["jobgroup"];
                this.columnRecommSigLoc = base.Columns["RecommSigLoc"];
                this.columnemail = base.Columns["email"];
                this.columnreferby = base.Columns["referby"];
                this.columngiroSigLoc = base.Columns["giroSigLoc"];
                this.columnsupv = base.Columns["supv"];
                this.columnrejDesc = base.Columns["rejDesc"];
                this.columnemgName = base.Columns["emgName"];
                this.columnemgContact = base.Columns["emgContact"];
                this.columnemgRelationship = base.Columns["emgRelationship"];
                this.columnsalaryRemark = base.Columns["salaryRemark"];
                this.columnresigndate = base.Columns["resigndate"];
                this.columndeclaration7 = base.Columns["declaration7"];
                this.columndeclaration1Remark = base.Columns["declaration1Remark"];
                this.columndeclaration2Remark = base.Columns["declaration2Remark"];
                this.columndeclaration3Remark = base.Columns["declaration3Remark"];
                this.columndeclaration4Remark = base.Columns["declaration4Remark"];
                this.columndeclaration5Remark = base.Columns["declaration5Remark"];
                this.columnaccountHolderName = base.Columns["accountHolderName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnempname1 = new global::System.Data.DataColumn("empname1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname1);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnnationality = new global::System.Data.DataColumn("nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnationality);
                this.columnmaritalstatus = new global::System.Data.DataColumn("maritalstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalstatus);
                this.columnethnicity = new global::System.Data.DataColumn("ethnicity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnethnicity);
                this.columndob = new global::System.Data.DataColumn("dob", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndob);
                this.columnbloodtype = new global::System.Data.DataColumn("bloodtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloodtype);
                this.columnetype = new global::System.Data.DataColumn("etype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnetype);
                this.columnstatusid = new global::System.Data.DataColumn("statusid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatusid);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columndateconfirmed = new global::System.Data.DataColumn("dateconfirmed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateconfirmed);
                this.columndateresigned = new global::System.Data.DataColumn("dateresigned", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateresigned);
                this.columnbankacc = new global::System.Data.DataColumn("bankacc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankacc);
                this.columnbasicsal = new global::System.Data.DataColumn("basicsal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbasicsal);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnnextapprdate = new global::System.Data.DataColumn("nextapprdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnextapprdate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnempname = new global::System.Data.DataColumn("empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columncardid = new global::System.Data.DataColumn("cardid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncardid);
                this.columnrecrempnum = new global::System.Data.DataColumn("recrempnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecrempnum);
                this.columnhsgcode = new global::System.Data.DataColumn("hsgcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhsgcode);
                this.columnphoto = new global::System.Data.DataColumn("photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto);
                this.columnreligion = new global::System.Data.DataColumn("religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreligion);
                this.columnforce = new global::System.Data.DataColumn("force", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforce);
                this.columnrank = new global::System.Data.DataColumn("rank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrank);
                this.columnvocation = new global::System.Data.DataColumn("vocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvocation);
                this.columnyearserved = new global::System.Data.DataColumn("yearserved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearserved);
                this.columnpadd1 = new global::System.Data.DataColumn("padd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd1);
                this.columnpadd2 = new global::System.Data.DataColumn("padd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd2);
                this.columnpadd3 = new global::System.Data.DataColumn("padd3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd3);
                this.columnppostal = new global::System.Data.DataColumn("ppostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppostal);
                this.columncadd1 = new global::System.Data.DataColumn("cadd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd1);
                this.columncadd2 = new global::System.Data.DataColumn("cadd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd2);
                this.columncadd3 = new global::System.Data.DataColumn("cadd3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd3);
                this.columncpostal = new global::System.Data.DataColumn("cpostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpostal);
                this.columnisNSmandatory = new global::System.Data.DataColumn("isNSmandatory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisNSmandatory);
                this.columnstatuscode = new global::System.Data.DataColumn("statuscode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatuscode);
                this.columndatejoined = new global::System.Data.DataColumn("datejoined", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatejoined);
                this.columnhramnum = new global::System.Data.DataColumn("hramnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramnum);
                this.columnregname = new global::System.Data.DataColumn("regname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregname);
                this.columnisHQstaff = new global::System.Data.DataColumn("isHQstaff", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHQstaff);
                this.columnconfirmationdate = new global::System.Data.DataColumn("confirmationdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmationdate);
                this.columnisretired = new global::System.Data.DataColumn("isretired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisretired);
                this.columncontractend = new global::System.Data.DataColumn("contractend", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractend);
                this.columnsitnumi = new global::System.Data.DataColumn("sitnumi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitnumi);
                this.columnpaytypecode = new global::System.Data.DataColumn("paytypecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaytypecode);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columndaysperweek = new global::System.Data.DataColumn("daysperweek", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaysperweek);
                this.columnhramdesc = new global::System.Data.DataColumn("hramdesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramdesc);
                this.columnisblacklisted = new global::System.Data.DataColumn("isblacklisted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisblacklisted);
                this.columnBldgBlock = new global::System.Data.DataColumn("BldgBlock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBldgBlock);
                this.columnLevelNo = new global::System.Data.DataColumn("LevelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevelNo);
                this.columnUnitNo = new global::System.Data.DataColumn("UnitNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNo);
                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetName);
                this.columnCountryAddress = new global::System.Data.DataColumn("CountryAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryAddress);
                this.columnBankCode = new global::System.Data.DataColumn("BankCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCode);
                this.columnBranchCode = new global::System.Data.DataColumn("BranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCode);
                this.columnForeignAddress = new global::System.Data.DataColumn("ForeignAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignAddress);
                this.columnbankname = new global::System.Data.DataColumn("bankname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankname);
                this.columnCOUNTRY = new global::System.Data.DataColumn("COUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTRY);
                this.columnagencyfund = new global::System.Data.DataColumn("agencyfund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagencyfund);
                this.columndatePR = new global::System.Data.DataColumn("datePR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatePR);
                this.columnpostal = new global::System.Data.DataColumn("postal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostal);
                this.columnpcountry = new global::System.Data.DataColumn("pcountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcountry);
                this.columnpmcode = new global::System.Data.DataColumn("pmcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpmcode);
                this.columnemptype = new global::System.Data.DataColumn("emptype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemptype);
                this.columnphotourl = new global::System.Data.DataColumn("photourl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphotourl);
                this.columnsitenum = new global::System.Data.DataColumn("sitenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitenum);
                this.columncontractdoc = new global::System.Data.DataColumn("contractdoc", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractdoc);
                this.columncontractloc = new global::System.Data.DataColumn("contractloc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractloc);
                this.columncontractsigned = new global::System.Data.DataColumn("contractsigned", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractsigned);
                this.columnsignaturepicloc = new global::System.Data.DataColumn("signaturepicloc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsignaturepicloc);
                this.columninterviewedby = new global::System.Data.DataColumn("interviewedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninterviewedby);
                this.columnisWebAdd = new global::System.Data.DataColumn("isWebAdd", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisWebAdd);
                this.columnwebguid = new global::System.Data.DataColumn("webguid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwebguid);
                this.columnmodifiedby = new global::System.Data.DataColumn("modifiedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedby);
                this.columncontactno = new global::System.Data.DataColumn("contactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactno);
                this.columnisApproved = new global::System.Data.DataColumn("isApproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisApproved);
                this.columnapprovedate = new global::System.Data.DataColumn("approvedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovedate);
                this.columnapproveby = new global::System.Data.DataColumn("approveby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapproveby);
                this.columnapprovename = new global::System.Data.DataColumn("approvename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovename);
                this.columnapprovestatus = new global::System.Data.DataColumn("approvestatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovestatus);
                this.columndateapplied = new global::System.Data.DataColumn("dateapplied", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateapplied);
                this.columnenglishWritten = new global::System.Data.DataColumn("englishWritten", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenglishWritten);
                this.columnenglishSpoken = new global::System.Data.DataColumn("englishSpoken", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenglishSpoken);
                this.columnchineseWritten = new global::System.Data.DataColumn("chineseWritten", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchineseWritten);
                this.columnchineseSpoken = new global::System.Data.DataColumn("chineseSpoken", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchineseSpoken);
                this.columnotherLanguage = new global::System.Data.DataColumn("otherLanguage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherLanguage);
                this.columnotherLanguageWritten = new global::System.Data.DataColumn("otherLanguageWritten", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherLanguageWritten);
                this.columnotherLanguageSpoken = new global::System.Data.DataColumn("otherLanguageSpoken", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherLanguageSpoken);
                this.columndriverlicence = new global::System.Data.DataColumn("driverlicence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriverlicence);
                this.columndeclaration1 = new global::System.Data.DataColumn("declaration1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration1);
                this.columndeclaration2 = new global::System.Data.DataColumn("declaration2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration2);
                this.columndeclaration3 = new global::System.Data.DataColumn("declaration3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration3);
                this.columndeclaration4 = new global::System.Data.DataColumn("declaration4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration4);
                this.columndeclaration5 = new global::System.Data.DataColumn("declaration5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration5);
                this.columndeclaration6 = new global::System.Data.DataColumn("declaration6", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration6);
                this.columndeclaration6remark = new global::System.Data.DataColumn("declaration6remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration6remark);
                this.columngiroReason = new global::System.Data.DataColumn("giroReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngiroReason);
                this.columnappliFormSigLoc = new global::System.Data.DataColumn("appliFormSigLoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappliFormSigLoc);
                this.columncontactHouse = new global::System.Data.DataColumn("contactHouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactHouse);
                this.columncommencedate = new global::System.Data.DataColumn("commencedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommencedate);
                this.columnhomecontactno = new global::System.Data.DataColumn("homecontactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhomecontactno);
                this.columnMonToFriTimeFrom = new global::System.Data.DataColumn("MonToFriTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTimeFrom);
                this.columnMonToFriTimeTo = new global::System.Data.DataColumn("MonToFriTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTimeTo);
                this.columnMonToFriLunchHr = new global::System.Data.DataColumn("MonToFriLunchHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriLunchHr);
                this.columnMonToFriTeaBrkHr = new global::System.Data.DataColumn("MonToFriTeaBrkHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTeaBrkHr);
                this.columnSatTimeFrom = new global::System.Data.DataColumn("SatTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTimeFrom);
                this.columnSatTimeTo = new global::System.Data.DataColumn("SatTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTimeTo);
                this.columnSatLunchHr = new global::System.Data.DataColumn("SatLunchHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatLunchHr);
                this.columnSatTeaBrkHr = new global::System.Data.DataColumn("SatTeaBrkHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTeaBrkHr);
                this.columnSunTimeFrom = new global::System.Data.DataColumn("SunTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTimeFrom);
                this.columnSunTimeTo = new global::System.Data.DataColumn("SunTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTimeTo);
                this.columnSunLunchHr = new global::System.Data.DataColumn("SunLunchHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunLunchHr);
                this.columnSunTeaBrkHr = new global::System.Data.DataColumn("SunTeaBrkHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTeaBrkHr);
                this.columnRegularOffDay = new global::System.Data.DataColumn("RegularOffDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegularOffDay);
                this.columnPHTimeFrom = new global::System.Data.DataColumn("PHTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTimeFrom);
                this.columnPHTimeTo = new global::System.Data.DataColumn("PHTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTimeTo);
                this.columnPHLunchHr = new global::System.Data.DataColumn("PHLunchHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHLunchHr);
                this.columnPHTeaBrkHr = new global::System.Data.DataColumn("PHTeaBrkHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTeaBrkHr);
                this.columnjobgroup = new global::System.Data.DataColumn("jobgroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjobgroup);
                this.columnRecommSigLoc = new global::System.Data.DataColumn("RecommSigLoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommSigLoc);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnreferby = new global::System.Data.DataColumn("referby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreferby);
                this.columngiroSigLoc = new global::System.Data.DataColumn("giroSigLoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngiroSigLoc);
                this.columnsupv = new global::System.Data.DataColumn("supv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupv);
                this.columnrejDesc = new global::System.Data.DataColumn("rejDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrejDesc);
                this.columnemgName = new global::System.Data.DataColumn("emgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemgName);
                this.columnemgContact = new global::System.Data.DataColumn("emgContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemgContact);
                this.columnemgRelationship = new global::System.Data.DataColumn("emgRelationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemgRelationship);
                this.columnsalaryRemark = new global::System.Data.DataColumn("salaryRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalaryRemark);
                this.columnresigndate = new global::System.Data.DataColumn("resigndate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresigndate);
                this.columndeclaration7 = new global::System.Data.DataColumn("declaration7", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration7);
                this.columndeclaration1Remark = new global::System.Data.DataColumn("declaration1Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration1Remark);
                this.columndeclaration2Remark = new global::System.Data.DataColumn("declaration2Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration2Remark);
                this.columndeclaration3Remark = new global::System.Data.DataColumn("declaration3Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration3Remark);
                this.columndeclaration4Remark = new global::System.Data.DataColumn("declaration4Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration4Remark);
                this.columndeclaration5Remark = new global::System.Data.DataColumn("declaration5Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration5Remark);
                this.columnaccountHolderName = new global::System.Data.DataColumn("accountHolderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccountHolderName);
                this.columnID.AllowDBNull = false;
                this.columnrefnum.MaxLength = 120;
                this.columnempnum.MaxLength = 120;
                this.columnnric.MaxLength = 120;
                this.columnempname1.MaxLength = 100;
                this.columngender.MaxLength = 10;
                this.columnnationality.MaxLength = 50;
                this.columnmaritalstatus.MaxLength = 50;
                this.columnethnicity.MaxLength = 50;
                this.columnbloodtype.MaxLength = 5;
                this.columnetype.MaxLength = 10;
                this.columnstatusid.MaxLength = 20;
                this.columnsectorcode.MaxLength = 30;
                this.columnbankacc.MaxLength = 30;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncreatedby.MaxLength = 50;
                this.columnremark.MaxLength = 1150;
                this.columncontact.MaxLength = 120;
                this.columnempname.MaxLength = 1100;
                this.columndesignation.MaxLength = 125;
                this.columncardid.MaxLength = 25;
                this.columnrecrempnum.MaxLength = 20;
                this.columnhsgcode.MaxLength = 20;
                this.columnreligion.MaxLength = 50;
                this.columnforce.MaxLength = 50;
                this.columnrank.MaxLength = 50;
                this.columnvocation.MaxLength = 50;
                this.columnyearserved.MaxLength = 10;
                this.columnpadd1.MaxLength = 100;
                this.columnpadd2.MaxLength = 100;
                this.columnpadd3.MaxLength = 100;
                this.columnppostal.MaxLength = 25;
                this.columncadd1.MaxLength = 100;
                this.columncadd2.MaxLength = 100;
                this.columncadd3.MaxLength = 100;
                this.columncpostal.MaxLength = 25;
                this.columnstatuscode.MaxLength = 30;
                this.columnhramnum.MaxLength = 30;
                this.columnregname.MaxLength = 30;
                this.columnconfirmationdate.MaxLength = 10;
                this.columncontractend.MaxLength = 10;
                this.columnsitnumi.MaxLength = 30;
                this.columnpaytypecode.MaxLength = 30;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
                this.columnhramdesc.MaxLength = 30;
                this.columnBldgBlock.MaxLength = 10;
                this.columnLevelNo.MaxLength = 10;
                this.columnUnitNo.MaxLength = 10;
                this.columnStreetName.MaxLength = 100;
                this.columnCountryAddress.MaxLength = 100;
                this.columnBankCode.MaxLength = 100;
                this.columnBranchCode.MaxLength = 100;
                this.columnForeignAddress.MaxLength = 100;
                this.columnbankname.MaxLength = 50;
                this.columnCOUNTRY.MaxLength = 50;
                this.columnagencyfund.MaxLength = 10;
                this.columndatePR.MaxLength = 10;
                this.columnpostal.MaxLength = 20;
                this.columnpcountry.MaxLength = 30;
                this.columnpmcode.MaxLength = 20;
                this.columnemptype.MaxLength = 20;
                this.columnphotourl.MaxLength = 150;
                this.columnsitenum.MaxLength = 120;
                this.columncontractloc.MaxLength = 100;
                this.columnsignaturepicloc.MaxLength = 200;
                this.columninterviewedby.MaxLength = 100;
                this.columnwebguid.MaxLength = 32;
                this.columnmodifiedby.MaxLength = 50;
                this.columncontactno.MaxLength = 200;
                this.columnapproveby.MaxLength = 20;
                this.columnapprovename.MaxLength = 20;
                this.columnapprovestatus.MaxLength = 20;
                this.columnotherLanguage.MaxLength = 50;
                this.columndriverlicence.MaxLength = 600;
                this.columndeclaration6remark.MaxLength = 250;
                this.columngiroReason.MaxLength = 250;
                this.columnappliFormSigLoc.MaxLength = 500;
                this.columncontactHouse.MaxLength = 50;
                this.columnhomecontactno.MaxLength = 200;
                this.columnMonToFriTimeFrom.MaxLength = 4;
                this.columnMonToFriTimeTo.MaxLength = 4;
                this.columnMonToFriLunchHr.MaxLength = 200;
                this.columnMonToFriTeaBrkHr.MaxLength = 200;
                this.columnSatTimeFrom.MaxLength = 4;
                this.columnSatTimeTo.MaxLength = 4;
                this.columnSatLunchHr.MaxLength = 200;
                this.columnSatTeaBrkHr.MaxLength = 200;
                this.columnSunTimeFrom.MaxLength = 4;
                this.columnSunTimeTo.MaxLength = 4;
                this.columnSunLunchHr.MaxLength = 200;
                this.columnSunTeaBrkHr.MaxLength = 200;
                this.columnRegularOffDay.MaxLength = 50;
                this.columnPHTimeFrom.MaxLength = 4;
                this.columnPHTimeTo.MaxLength = 4;
                this.columnPHLunchHr.MaxLength = 200;
                this.columnPHTeaBrkHr.MaxLength = 200;
                this.columnjobgroup.MaxLength = 50;
                this.columnRecommSigLoc.MaxLength = 500;
                this.columnemail.MaxLength = 50;
                this.columnreferby.MaxLength = 20;
                this.columngiroSigLoc.MaxLength = 200;
                this.columnsupv.MaxLength = 50;
                this.columnrejDesc.MaxLength = 200;
                this.columnemgName.MaxLength = 200;
                this.columnemgContact.MaxLength = 200;
                this.columnemgRelationship.MaxLength = 200;
                this.columnsalaryRemark.MaxLength = 400;
                this.columndeclaration1Remark.MaxLength = 400;
                this.columndeclaration2Remark.MaxLength = 400;
                this.columndeclaration3Remark.MaxLength = 400;
                this.columndeclaration4Remark.MaxLength = 400;
                this.columndeclaration5Remark.MaxLength = 400;
                this.columnaccountHolderName.MaxLength = 120;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow NewHEMPHRow() {
                return ((HEMPHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HEMPHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HEMPHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HEMPHRowChanged != null)) {
                    this.HEMPHRowChanged(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HEMPHRowChanging != null)) {
                    this.HEMPHRowChanging(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HEMPHRowDeleted != null)) {
                    this.HEMPHRowDeleted(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HEMPHRowDeleting != null)) {
                    this.HEMPHRowDeleting(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHEMPHRow(HEMPHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HEMPHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FAMRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnrelationship;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnfnric;
            
            private global::System.Data.DataColumn columnfbirthcertificate;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnoccupation;
            
            private global::System.Data.DataColumn columncompany;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRDataTable() {
                this.TableName = "FAMR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAMRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FAMRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn relationshipColumn {
                get {
                    return this.columnrelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fnricColumn {
                get {
                    return this.columnfnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbirthcertificateColumn {
                get {
                    return this.columnfbirthcertificate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn occupationColumn {
                get {
                    return this.columnoccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyColumn {
                get {
                    return this.columncompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow this[int index] {
                get {
                    return ((FAMRRow)(this.Rows[index]));
                }
            }
            
            public event FAMRRowChangeEventHandler FAMRRowChanging;
            
            public event FAMRRowChangeEventHandler FAMRRowChanged;
            
            public event FAMRRowChangeEventHandler FAMRRowDeleting;
            
            public event FAMRRowChangeEventHandler FAMRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFAMRRow(FAMRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow AddFAMRRow(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string name, 
                        string relationship, 
                        string gender, 
                        string remark, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string contact, 
                        string fnric, 
                        string fbirthcertificate, 
                        int age, 
                        string occupation, 
                        string company) {
                FAMRRow rowFAMRRow = ((FAMRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        name,
                        relationship,
                        gender,
                        remark,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        contact,
                        fnric,
                        fbirthcertificate,
                        age,
                        occupation,
                        company};
                rowFAMRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFAMRRow);
                return rowFAMRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow FindByID(long ID) {
                return ((FAMRRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FAMRDataTable cln = ((FAMRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FAMRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnname = base.Columns["name"];
                this.columnrelationship = base.Columns["relationship"];
                this.columngender = base.Columns["gender"];
                this.columnremark = base.Columns["remark"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncontact = base.Columns["contact"];
                this.columnfnric = base.Columns["fnric"];
                this.columnfbirthcertificate = base.Columns["fbirthcertificate"];
                this.columnage = base.Columns["age"];
                this.columnoccupation = base.Columns["occupation"];
                this.columncompany = base.Columns["company"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnrelationship = new global::System.Data.DataColumn("relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelationship);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnfnric = new global::System.Data.DataColumn("fnric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfnric);
                this.columnfbirthcertificate = new global::System.Data.DataColumn("fbirthcertificate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbirthcertificate);
                this.columnage = new global::System.Data.DataColumn("age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnoccupation = new global::System.Data.DataColumn("occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation);
                this.columncompany = new global::System.Data.DataColumn("company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnname.MaxLength = 50;
                this.columnrelationship.MaxLength = 20;
                this.columngender.MaxLength = 1;
                this.columnremark.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columncontact.MaxLength = 20;
                this.columnfnric.MaxLength = 50;
                this.columnfbirthcertificate.MaxLength = 50;
                this.columnoccupation.MaxLength = 50;
                this.columncompany.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow NewFAMRRow() {
                return ((FAMRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FAMRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FAMRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FAMRRowChanged != null)) {
                    this.FAMRRowChanged(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FAMRRowChanging != null)) {
                    this.FAMRRowChanging(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FAMRRowDeleted != null)) {
                    this.FAMRRowDeleted(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FAMRRowDeleting != null)) {
                    this.FAMRRowDeleting(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFAMRRow(FAMRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FAMRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PFMEDUDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columncoursedesc;
            
            private global::System.Data.DataColumn columnInstitution;
            
            private global::System.Data.DataColumn columndatefinished;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columndocfile;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncertification;
            
            private global::System.Data.DataColumn columnyearfinished;
            
            private global::System.Data.DataColumn columnisHighest;
            
            private global::System.Data.DataColumn columnissecurityrelated;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnisCourse;
            
            private global::System.Data.DataColumn columncoursecode;
            
            private global::System.Data.DataColumn columncoursename;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columntrStartDate;
            
            private global::System.Data.DataColumn columntrEndDate;
            
            private global::System.Data.DataColumn columngrade;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDUDataTable() {
                this.TableName = "PFMEDU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMEDUDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PFMEDUDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coursedescColumn {
                get {
                    return this.columncoursedesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstitutionColumn {
                get {
                    return this.columnInstitution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datefinishedColumn {
                get {
                    return this.columndatefinished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn docfileColumn {
                get {
                    return this.columndocfile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn certificationColumn {
                get {
                    return this.columncertification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearfinishedColumn {
                get {
                    return this.columnyearfinished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isHighestColumn {
                get {
                    return this.columnisHighest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issecurityrelatedColumn {
                get {
                    return this.columnissecurityrelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isCourseColumn {
                get {
                    return this.columnisCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coursecodeColumn {
                get {
                    return this.columncoursecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coursenameColumn {
                get {
                    return this.columncoursename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trStartDateColumn {
                get {
                    return this.columntrStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trEndDateColumn {
                get {
                    return this.columntrEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gradeColumn {
                get {
                    return this.columngrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDURow this[int index] {
                get {
                    return ((PFMEDURow)(this.Rows[index]));
                }
            }
            
            public event PFMEDURowChangeEventHandler PFMEDURowChanging;
            
            public event PFMEDURowChangeEventHandler PFMEDURowChanged;
            
            public event PFMEDURowChangeEventHandler PFMEDURowDeleting;
            
            public event PFMEDURowChangeEventHandler PFMEDURowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPFMEDURow(PFMEDURow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDURow AddPFMEDURow(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string coursedesc, 
                        string Institution, 
                        System.DateTime datefinished, 
                        string sectorcode, 
                        string docfile, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string certification, 
                        string yearfinished, 
                        bool isHighest, 
                        bool issecurityrelated, 
                        string remark, 
                        bool isCourse, 
                        string coursecode, 
                        string coursename, 
                        string apnum, 
                        System.DateTime trStartDate, 
                        System.DateTime trEndDate, 
                        string grade) {
                PFMEDURow rowPFMEDURow = ((PFMEDURow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        coursedesc,
                        Institution,
                        datefinished,
                        sectorcode,
                        docfile,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        certification,
                        yearfinished,
                        isHighest,
                        issecurityrelated,
                        remark,
                        isCourse,
                        coursecode,
                        coursename,
                        apnum,
                        trStartDate,
                        trEndDate,
                        grade};
                rowPFMEDURow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPFMEDURow);
                return rowPFMEDURow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PFMEDUDataTable cln = ((PFMEDUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PFMEDUDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columncoursedesc = base.Columns["coursedesc"];
                this.columnInstitution = base.Columns["Institution"];
                this.columndatefinished = base.Columns["datefinished"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columndocfile = base.Columns["docfile"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncertification = base.Columns["certification"];
                this.columnyearfinished = base.Columns["yearfinished"];
                this.columnisHighest = base.Columns["isHighest"];
                this.columnissecurityrelated = base.Columns["issecurityrelated"];
                this.columnremark = base.Columns["remark"];
                this.columnisCourse = base.Columns["isCourse"];
                this.columncoursecode = base.Columns["coursecode"];
                this.columncoursename = base.Columns["coursename"];
                this.columnapnum = base.Columns["apnum"];
                this.columntrStartDate = base.Columns["trStartDate"];
                this.columntrEndDate = base.Columns["trEndDate"];
                this.columngrade = base.Columns["grade"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columncoursedesc = new global::System.Data.DataColumn("coursedesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoursedesc);
                this.columnInstitution = new global::System.Data.DataColumn("Institution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstitution);
                this.columndatefinished = new global::System.Data.DataColumn("datefinished", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatefinished);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columndocfile = new global::System.Data.DataColumn("docfile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocfile);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncertification = new global::System.Data.DataColumn("certification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertification);
                this.columnyearfinished = new global::System.Data.DataColumn("yearfinished", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearfinished);
                this.columnisHighest = new global::System.Data.DataColumn("isHighest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHighest);
                this.columnissecurityrelated = new global::System.Data.DataColumn("issecurityrelated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissecurityrelated);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnisCourse = new global::System.Data.DataColumn("isCourse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisCourse);
                this.columncoursecode = new global::System.Data.DataColumn("coursecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoursecode);
                this.columncoursename = new global::System.Data.DataColumn("coursename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoursename);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columntrStartDate = new global::System.Data.DataColumn("trStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrStartDate);
                this.columntrEndDate = new global::System.Data.DataColumn("trEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrEndDate);
                this.columngrade = new global::System.Data.DataColumn("grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrade);
                this.columnID.AllowDBNull = false;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columncoursedesc.MaxLength = 250;
                this.columnInstitution.MaxLength = 250;
                this.columnsectorcode.MaxLength = 20;
                this.columndocfile.MaxLength = 250;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columncertification.MaxLength = 50;
                this.columnyearfinished.MaxLength = 20;
                this.columnremark.MaxLength = 250;
                this.columncoursecode.MaxLength = 20;
                this.columncoursename.MaxLength = 50;
                this.columnapnum.MaxLength = 12;
                this.columngrade.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDURow NewPFMEDURow() {
                return ((PFMEDURow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PFMEDURow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PFMEDURow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PFMEDURowChanged != null)) {
                    this.PFMEDURowChanged(this, new PFMEDURowChangeEvent(((PFMEDURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PFMEDURowChanging != null)) {
                    this.PFMEDURowChanging(this, new PFMEDURowChangeEvent(((PFMEDURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PFMEDURowDeleted != null)) {
                    this.PFMEDURowDeleted(this, new PFMEDURowChangeEvent(((PFMEDURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PFMEDURowDeleting != null)) {
                    this.PFMEDURowDeleting(this, new PFMEDURowChangeEvent(((PFMEDURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePFMEDURow(PFMEDURow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PFMEDUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PFMWEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columncoyname;
            
            private global::System.Data.DataColumn columnyearfrom;
            
            private global::System.Data.DataColumn columnyearto;
            
            private global::System.Data.DataColumn columnissecurityrelated;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columnremark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWEDataTable() {
                this.TableName = "PFMWE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMWEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PFMWEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coynameColumn {
                get {
                    return this.columncoyname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearfromColumn {
                get {
                    return this.columnyearfrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yeartoColumn {
                get {
                    return this.columnyearto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issecurityrelatedColumn {
                get {
                    return this.columnissecurityrelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWERow this[int index] {
                get {
                    return ((PFMWERow)(this.Rows[index]));
                }
            }
            
            public event PFMWERowChangeEventHandler PFMWERowChanging;
            
            public event PFMWERowChangeEventHandler PFMWERowChanged;
            
            public event PFMWERowChangeEventHandler PFMWERowDeleting;
            
            public event PFMWERowChangeEventHandler PFMWERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPFMWERow(PFMWERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWERow AddPFMWERow(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string coy, 
                        string coyname, 
                        string yearfrom, 
                        string yearto, 
                        bool issecurityrelated, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string designation, 
                        string matnum, 
                        string matname, 
                        string remark) {
                PFMWERow rowPFMWERow = ((PFMWERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        coy,
                        coyname,
                        yearfrom,
                        yearto,
                        issecurityrelated,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        designation,
                        matnum,
                        matname,
                        remark};
                rowPFMWERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPFMWERow);
                return rowPFMWERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWERow FindByID(long ID) {
                return ((PFMWERow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PFMWEDataTable cln = ((PFMWEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PFMWEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columncoy = base.Columns["coy"];
                this.columncoyname = base.Columns["coyname"];
                this.columnyearfrom = base.Columns["yearfrom"];
                this.columnyearto = base.Columns["yearto"];
                this.columnissecurityrelated = base.Columns["issecurityrelated"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columndesignation = base.Columns["designation"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columnremark = base.Columns["remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columncoyname = new global::System.Data.DataColumn("coyname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyname);
                this.columnyearfrom = new global::System.Data.DataColumn("yearfrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearfrom);
                this.columnyearto = new global::System.Data.DataColumn("yearto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearto);
                this.columnissecurityrelated = new global::System.Data.DataColumn("issecurityrelated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissecurityrelated);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columncoy.MaxLength = 100;
                this.columncoyname.MaxLength = 100;
                this.columnyearfrom.MaxLength = 4;
                this.columnyearto.MaxLength = 4;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columndesignation.MaxLength = 25;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
                this.columnremark.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWERow NewPFMWERow() {
                return ((PFMWERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PFMWERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PFMWERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PFMWERowChanged != null)) {
                    this.PFMWERowChanged(this, new PFMWERowChangeEvent(((PFMWERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PFMWERowChanging != null)) {
                    this.PFMWERowChanging(this, new PFMWERowChangeEvent(((PFMWERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PFMWERowDeleted != null)) {
                    this.PFMWERowDeleted(this, new PFMWERowChangeEvent(((PFMWERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PFMWERowDeleting != null)) {
                    this.PFMWERowDeleting(this, new PFMWERowChangeEvent(((PFMWERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePFMWERow(PFMWERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PFMWEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LetterAppointmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnempname;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columnsitename;
            
            private global::System.Data.DataColumn columndatejoined;
            
            private global::System.Data.DataColumn columnbankacc;
            
            private global::System.Data.DataColumn columncommencedate;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columndaysperweek;
            
            private global::System.Data.DataColumn columnhomeaddress;
            
            private global::System.Data.DataColumn columnRegularOffDay;
            
            private global::System.Data.DataColumn columnSalaryDeductionPerDay;
            
            private global::System.Data.DataColumn columnOtherDudction;
            
            private global::System.Data.DataColumn columnBasicSal;
            
            private global::System.Data.DataColumn columnATTNALLW;
            
            private global::System.Data.DataColumn columnACCOMALLW;
            
            private global::System.Data.DataColumn columnDRIVTRANSALLW;
            
            private global::System.Data.DataColumn columnOtherAllowance;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnNextOfKeen;
            
            private global::System.Data.DataColumn columnFamilyContact;
            
            private global::System.Data.DataColumn columnhomecontactno;
            
            private global::System.Data.DataColumn columnOTALLW;
            
            private global::System.Data.DataColumn columnpaytypecode;
            
            private global::System.Data.DataColumn columnMonToFriTimeFrom;
            
            private global::System.Data.DataColumn columnMonToFriTimeTo;
            
            private global::System.Data.DataColumn columnMonToFriLunchHr;
            
            private global::System.Data.DataColumn columnMonToFriTeaBrkHr;
            
            private global::System.Data.DataColumn columnSatTimeFrom;
            
            private global::System.Data.DataColumn columnSatTimeTo;
            
            private global::System.Data.DataColumn columnSatLunchHr;
            
            private global::System.Data.DataColumn columnSatTeaBrkHr;
            
            private global::System.Data.DataColumn columnSunTimeFrom;
            
            private global::System.Data.DataColumn columnSunTimeTo;
            
            private global::System.Data.DataColumn columnSunLunchHr;
            
            private global::System.Data.DataColumn columnSunTeaBrkHr;
            
            private global::System.Data.DataColumn columnPHTimeFrom;
            
            private global::System.Data.DataColumn columnPHTimeTo;
            
            private global::System.Data.DataColumn columnPHLunchHr;
            
            private global::System.Data.DataColumn columnPHTeaBrkHr;
            
            private global::System.Data.DataColumn columnTotalSalary;
            
            private global::System.Data.DataColumn columnbankname;
            
            private global::System.Data.DataColumn columnOTHERALLW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LetterAppointmentDataTable() {
                this.TableName = "LetterAppointment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LetterAppointmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LetterAppointmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnameColumn {
                get {
                    return this.columnempname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenameColumn {
                get {
                    return this.columnsitename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datejoinedColumn {
                get {
                    return this.columndatejoined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankaccColumn {
                get {
                    return this.columnbankacc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commencedateColumn {
                get {
                    return this.columncommencedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daysperweekColumn {
                get {
                    return this.columndaysperweek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn homeaddressColumn {
                get {
                    return this.columnhomeaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegularOffDayColumn {
                get {
                    return this.columnRegularOffDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalaryDeductionPerDayColumn {
                get {
                    return this.columnSalaryDeductionPerDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherDudctionColumn {
                get {
                    return this.columnOtherDudction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasicSalColumn {
                get {
                    return this.columnBasicSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTNALLWColumn {
                get {
                    return this.columnATTNALLW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCOMALLWColumn {
                get {
                    return this.columnACCOMALLW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRIVTRANSALLWColumn {
                get {
                    return this.columnDRIVTRANSALLW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherAllowanceColumn {
                get {
                    return this.columnOtherAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextOfKeenColumn {
                get {
                    return this.columnNextOfKeen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyContactColumn {
                get {
                    return this.columnFamilyContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn homecontactnoColumn {
                get {
                    return this.columnhomecontactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OTALLWColumn {
                get {
                    return this.columnOTALLW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paytypecodeColumn {
                get {
                    return this.columnpaytypecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTimeFromColumn {
                get {
                    return this.columnMonToFriTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTimeToColumn {
                get {
                    return this.columnMonToFriTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriLunchHrColumn {
                get {
                    return this.columnMonToFriLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTeaBrkHrColumn {
                get {
                    return this.columnMonToFriTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTimeFromColumn {
                get {
                    return this.columnSatTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTimeToColumn {
                get {
                    return this.columnSatTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatLunchHrColumn {
                get {
                    return this.columnSatLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTeaBrkHrColumn {
                get {
                    return this.columnSatTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTimeFromColumn {
                get {
                    return this.columnSunTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTimeToColumn {
                get {
                    return this.columnSunTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunLunchHrColumn {
                get {
                    return this.columnSunLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTeaBrkHrColumn {
                get {
                    return this.columnSunTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTimeFromColumn {
                get {
                    return this.columnPHTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTimeToColumn {
                get {
                    return this.columnPHTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHLunchHrColumn {
                get {
                    return this.columnPHLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTeaBrkHrColumn {
                get {
                    return this.columnPHTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSalaryColumn {
                get {
                    return this.columnTotalSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn banknameColumn {
                get {
                    return this.columnbankname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OTHERALLWColumn {
                get {
                    return this.columnOTHERALLW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LetterAppointmentRow this[int index] {
                get {
                    return ((LetterAppointmentRow)(this.Rows[index]));
                }
            }
            
            public event LetterAppointmentRowChangeEventHandler LetterAppointmentRowChanging;
            
            public event LetterAppointmentRowChangeEventHandler LetterAppointmentRowChanged;
            
            public event LetterAppointmentRowChangeEventHandler LetterAppointmentRowDeleting;
            
            public event LetterAppointmentRowChangeEventHandler LetterAppointmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLetterAppointmentRow(LetterAppointmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LetterAppointmentRow AddLetterAppointmentRow(
                        string empname, 
                        string nric, 
                        string position, 
                        string sitename, 
                        System.DateTime datejoined, 
                        string bankacc, 
                        System.DateTime commencedate, 
                        string contact, 
                        string daysperweek, 
                        string homeaddress, 
                        string RegularOffDay, 
                        decimal SalaryDeductionPerDay, 
                        decimal OtherDudction, 
                        decimal BasicSal, 
                        decimal ATTNALLW, 
                        decimal ACCOMALLW, 
                        decimal DRIVTRANSALLW, 
                        decimal OtherAllowance, 
                        string remark, 
                        string NextOfKeen, 
                        string FamilyContact, 
                        string homecontactno, 
                        decimal OTALLW, 
                        string paytypecode, 
                        string MonToFriTimeFrom, 
                        string MonToFriTimeTo, 
                        string MonToFriLunchHr, 
                        string MonToFriTeaBrkHr, 
                        string SatTimeFrom, 
                        string SatTimeTo, 
                        string SatLunchHr, 
                        decimal SatTeaBrkHr, 
                        string SunTimeFrom, 
                        string SunTimeTo, 
                        string SunLunchHr, 
                        string SunTeaBrkHr, 
                        string PHTimeFrom, 
                        string PHTimeTo, 
                        decimal PHLunchHr, 
                        decimal PHTeaBrkHr, 
                        decimal TotalSalary, 
                        string bankname, 
                        decimal OTHERALLW) {
                LetterAppointmentRow rowLetterAppointmentRow = ((LetterAppointmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        empname,
                        nric,
                        position,
                        sitename,
                        datejoined,
                        bankacc,
                        commencedate,
                        contact,
                        daysperweek,
                        homeaddress,
                        RegularOffDay,
                        SalaryDeductionPerDay,
                        OtherDudction,
                        BasicSal,
                        ATTNALLW,
                        ACCOMALLW,
                        DRIVTRANSALLW,
                        OtherAllowance,
                        remark,
                        NextOfKeen,
                        FamilyContact,
                        homecontactno,
                        OTALLW,
                        paytypecode,
                        MonToFriTimeFrom,
                        MonToFriTimeTo,
                        MonToFriLunchHr,
                        MonToFriTeaBrkHr,
                        SatTimeFrom,
                        SatTimeTo,
                        SatLunchHr,
                        SatTeaBrkHr,
                        SunTimeFrom,
                        SunTimeTo,
                        SunLunchHr,
                        SunTeaBrkHr,
                        PHTimeFrom,
                        PHTimeTo,
                        PHLunchHr,
                        PHTeaBrkHr,
                        TotalSalary,
                        bankname,
                        OTHERALLW};
                rowLetterAppointmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLetterAppointmentRow);
                return rowLetterAppointmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LetterAppointmentDataTable cln = ((LetterAppointmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LetterAppointmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempname = base.Columns["empname"];
                this.columnnric = base.Columns["nric"];
                this.columnposition = base.Columns["position"];
                this.columnsitename = base.Columns["sitename"];
                this.columndatejoined = base.Columns["datejoined"];
                this.columnbankacc = base.Columns["bankacc"];
                this.columncommencedate = base.Columns["commencedate"];
                this.columncontact = base.Columns["contact"];
                this.columndaysperweek = base.Columns["daysperweek"];
                this.columnhomeaddress = base.Columns["homeaddress"];
                this.columnRegularOffDay = base.Columns["RegularOffDay"];
                this.columnSalaryDeductionPerDay = base.Columns["SalaryDeductionPerDay"];
                this.columnOtherDudction = base.Columns["OtherDudction"];
                this.columnBasicSal = base.Columns["BasicSal"];
                this.columnATTNALLW = base.Columns["ATTNALLW"];
                this.columnACCOMALLW = base.Columns["ACCOMALLW"];
                this.columnDRIVTRANSALLW = base.Columns["DRIVTRANSALLW"];
                this.columnOtherAllowance = base.Columns["OtherAllowance"];
                this.columnremark = base.Columns["remark"];
                this.columnNextOfKeen = base.Columns["NextOfKeen"];
                this.columnFamilyContact = base.Columns["FamilyContact"];
                this.columnhomecontactno = base.Columns["homecontactno"];
                this.columnOTALLW = base.Columns["OTALLW"];
                this.columnpaytypecode = base.Columns["paytypecode"];
                this.columnMonToFriTimeFrom = base.Columns["MonToFriTimeFrom"];
                this.columnMonToFriTimeTo = base.Columns["MonToFriTimeTo"];
                this.columnMonToFriLunchHr = base.Columns["MonToFriLunchHr"];
                this.columnMonToFriTeaBrkHr = base.Columns["MonToFriTeaBrkHr"];
                this.columnSatTimeFrom = base.Columns["SatTimeFrom"];
                this.columnSatTimeTo = base.Columns["SatTimeTo"];
                this.columnSatLunchHr = base.Columns["SatLunchHr"];
                this.columnSatTeaBrkHr = base.Columns["SatTeaBrkHr"];
                this.columnSunTimeFrom = base.Columns["SunTimeFrom"];
                this.columnSunTimeTo = base.Columns["SunTimeTo"];
                this.columnSunLunchHr = base.Columns["SunLunchHr"];
                this.columnSunTeaBrkHr = base.Columns["SunTeaBrkHr"];
                this.columnPHTimeFrom = base.Columns["PHTimeFrom"];
                this.columnPHTimeTo = base.Columns["PHTimeTo"];
                this.columnPHLunchHr = base.Columns["PHLunchHr"];
                this.columnPHTeaBrkHr = base.Columns["PHTeaBrkHr"];
                this.columnTotalSalary = base.Columns["TotalSalary"];
                this.columnbankname = base.Columns["bankname"];
                this.columnOTHERALLW = base.Columns["OTHERALLW"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempname = new global::System.Data.DataColumn("empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnsitename = new global::System.Data.DataColumn("sitename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitename);
                this.columndatejoined = new global::System.Data.DataColumn("datejoined", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatejoined);
                this.columnbankacc = new global::System.Data.DataColumn("bankacc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankacc);
                this.columncommencedate = new global::System.Data.DataColumn("commencedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommencedate);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columndaysperweek = new global::System.Data.DataColumn("daysperweek", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaysperweek);
                this.columnhomeaddress = new global::System.Data.DataColumn("homeaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhomeaddress);
                this.columnRegularOffDay = new global::System.Data.DataColumn("RegularOffDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegularOffDay);
                this.columnSalaryDeductionPerDay = new global::System.Data.DataColumn("SalaryDeductionPerDay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryDeductionPerDay);
                this.columnOtherDudction = new global::System.Data.DataColumn("OtherDudction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDudction);
                this.columnBasicSal = new global::System.Data.DataColumn("BasicSal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSal);
                this.columnATTNALLW = new global::System.Data.DataColumn("ATTNALLW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTNALLW);
                this.columnACCOMALLW = new global::System.Data.DataColumn("ACCOMALLW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOMALLW);
                this.columnDRIVTRANSALLW = new global::System.Data.DataColumn("DRIVTRANSALLW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRIVTRANSALLW);
                this.columnOtherAllowance = new global::System.Data.DataColumn("OtherAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAllowance);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnNextOfKeen = new global::System.Data.DataColumn("NextOfKeen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextOfKeen);
                this.columnFamilyContact = new global::System.Data.DataColumn("FamilyContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyContact);
                this.columnhomecontactno = new global::System.Data.DataColumn("homecontactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhomecontactno);
                this.columnOTALLW = new global::System.Data.DataColumn("OTALLW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTALLW);
                this.columnpaytypecode = new global::System.Data.DataColumn("paytypecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaytypecode);
                this.columnMonToFriTimeFrom = new global::System.Data.DataColumn("MonToFriTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTimeFrom);
                this.columnMonToFriTimeTo = new global::System.Data.DataColumn("MonToFriTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTimeTo);
                this.columnMonToFriLunchHr = new global::System.Data.DataColumn("MonToFriLunchHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriLunchHr);
                this.columnMonToFriTeaBrkHr = new global::System.Data.DataColumn("MonToFriTeaBrkHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTeaBrkHr);
                this.columnSatTimeFrom = new global::System.Data.DataColumn("SatTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTimeFrom);
                this.columnSatTimeTo = new global::System.Data.DataColumn("SatTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTimeTo);
                this.columnSatLunchHr = new global::System.Data.DataColumn("SatLunchHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatLunchHr);
                this.columnSatTeaBrkHr = new global::System.Data.DataColumn("SatTeaBrkHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTeaBrkHr);
                this.columnSunTimeFrom = new global::System.Data.DataColumn("SunTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTimeFrom);
                this.columnSunTimeTo = new global::System.Data.DataColumn("SunTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTimeTo);
                this.columnSunLunchHr = new global::System.Data.DataColumn("SunLunchHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunLunchHr);
                this.columnSunTeaBrkHr = new global::System.Data.DataColumn("SunTeaBrkHr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTeaBrkHr);
                this.columnPHTimeFrom = new global::System.Data.DataColumn("PHTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTimeFrom);
                this.columnPHTimeTo = new global::System.Data.DataColumn("PHTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTimeTo);
                this.columnPHLunchHr = new global::System.Data.DataColumn("PHLunchHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHLunchHr);
                this.columnPHTeaBrkHr = new global::System.Data.DataColumn("PHTeaBrkHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTeaBrkHr);
                this.columnTotalSalary = new global::System.Data.DataColumn("TotalSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSalary);
                this.columnbankname = new global::System.Data.DataColumn("bankname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankname);
                this.columnOTHERALLW = new global::System.Data.DataColumn("OTHERALLW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERALLW);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LetterAppointmentRow NewLetterAppointmentRow() {
                return ((LetterAppointmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LetterAppointmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LetterAppointmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LetterAppointmentRowChanged != null)) {
                    this.LetterAppointmentRowChanged(this, new LetterAppointmentRowChangeEvent(((LetterAppointmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LetterAppointmentRowChanging != null)) {
                    this.LetterAppointmentRowChanging(this, new LetterAppointmentRowChangeEvent(((LetterAppointmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LetterAppointmentRowDeleted != null)) {
                    this.LetterAppointmentRowDeleted(this, new LetterAppointmentRowChangeEvent(((LetterAppointmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LetterAppointmentRowDeleting != null)) {
                    this.LetterAppointmentRowDeleting(this, new LetterAppointmentRowChangeEvent(((LetterAppointmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLetterAppointmentRow(LetterAppointmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LetterAppointmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CoyDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columncoyname;
            
            private global::System.Data.DataColumn columncoyaddr1;
            
            private global::System.Data.DataColumn columncoyaddr2;
            
            private global::System.Data.DataColumn columncoyaddr3;
            
            private global::System.Data.DataColumn columncoyaddr4;
            
            private global::System.Data.DataColumn columncoyemail;
            
            private global::System.Data.DataColumn columncoyurl;
            
            private global::System.Data.DataColumn columncoytel;
            
            private global::System.Data.DataColumn columncoyfax;
            
            private global::System.Data.DataColumn columncoyregnum;
            
            private global::System.Data.DataColumn columncoygstnum;
            
            private global::System.Data.DataColumn columncpfregnum;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columnarnum;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoyimage;
            
            private global::System.Data.DataColumn columnwhnum;
            
            private global::System.Data.DataColumn columnccnum;
            
            private global::System.Data.DataColumn columncreatedby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CoyDataTable() {
                this.TableName = "Coy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CoyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CoyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coynameColumn {
                get {
                    return this.columncoyname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr1Column {
                get {
                    return this.columncoyaddr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr2Column {
                get {
                    return this.columncoyaddr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr3Column {
                get {
                    return this.columncoyaddr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr4Column {
                get {
                    return this.columncoyaddr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyemailColumn {
                get {
                    return this.columncoyemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyurlColumn {
                get {
                    return this.columncoyurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coytelColumn {
                get {
                    return this.columncoytel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyfaxColumn {
                get {
                    return this.columncoyfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyregnumColumn {
                get {
                    return this.columncoyregnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coygstnumColumn {
                get {
                    return this.columncoygstnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cpfregnumColumn {
                get {
                    return this.columncpfregnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn arnumColumn {
                get {
                    return this.columnarnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyimageColumn {
                get {
                    return this.columncoyimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn whnumColumn {
                get {
                    return this.columnwhnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ccnumColumn {
                get {
                    return this.columnccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CoyRow this[int index] {
                get {
                    return ((CoyRow)(this.Rows[index]));
                }
            }
            
            public event CoyRowChangeEventHandler CoyRowChanging;
            
            public event CoyRowChangeEventHandler CoyRowChanged;
            
            public event CoyRowChangeEventHandler CoyRowDeleting;
            
            public event CoyRowChangeEventHandler CoyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCoyRow(CoyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CoyRow AddCoyRow(
                        long ID, 
                        string coy, 
                        string coyname, 
                        string coyaddr1, 
                        string coyaddr2, 
                        string coyaddr3, 
                        string coyaddr4, 
                        string coyemail, 
                        string coyurl, 
                        string coytel, 
                        string coyfax, 
                        string coyregnum, 
                        string coygstnum, 
                        string cpfregnum, 
                        string apnum, 
                        string arnum, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        byte[] coyimage, 
                        string whnum, 
                        string ccnum, 
                        string createdby) {
                CoyRow rowCoyRow = ((CoyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        coy,
                        coyname,
                        coyaddr1,
                        coyaddr2,
                        coyaddr3,
                        coyaddr4,
                        coyemail,
                        coyurl,
                        coytel,
                        coyfax,
                        coyregnum,
                        coygstnum,
                        cpfregnum,
                        apnum,
                        arnum,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        coyimage,
                        whnum,
                        ccnum,
                        createdby};
                rowCoyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCoyRow);
                return rowCoyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CoyRow FindByID(long ID) {
                return ((CoyRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CoyDataTable cln = ((CoyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CoyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columncoy = base.Columns["coy"];
                this.columncoyname = base.Columns["coyname"];
                this.columncoyaddr1 = base.Columns["coyaddr1"];
                this.columncoyaddr2 = base.Columns["coyaddr2"];
                this.columncoyaddr3 = base.Columns["coyaddr3"];
                this.columncoyaddr4 = base.Columns["coyaddr4"];
                this.columncoyemail = base.Columns["coyemail"];
                this.columncoyurl = base.Columns["coyurl"];
                this.columncoytel = base.Columns["coytel"];
                this.columncoyfax = base.Columns["coyfax"];
                this.columncoyregnum = base.Columns["coyregnum"];
                this.columncoygstnum = base.Columns["coygstnum"];
                this.columncpfregnum = base.Columns["cpfregnum"];
                this.columnapnum = base.Columns["apnum"];
                this.columnarnum = base.Columns["arnum"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoyimage = base.Columns["coyimage"];
                this.columnwhnum = base.Columns["whnum"];
                this.columnccnum = base.Columns["ccnum"];
                this.columncreatedby = base.Columns["createdby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columncoyname = new global::System.Data.DataColumn("coyname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyname);
                this.columncoyaddr1 = new global::System.Data.DataColumn("coyaddr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr1);
                this.columncoyaddr2 = new global::System.Data.DataColumn("coyaddr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr2);
                this.columncoyaddr3 = new global::System.Data.DataColumn("coyaddr3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr3);
                this.columncoyaddr4 = new global::System.Data.DataColumn("coyaddr4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr4);
                this.columncoyemail = new global::System.Data.DataColumn("coyemail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyemail);
                this.columncoyurl = new global::System.Data.DataColumn("coyurl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyurl);
                this.columncoytel = new global::System.Data.DataColumn("coytel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoytel);
                this.columncoyfax = new global::System.Data.DataColumn("coyfax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyfax);
                this.columncoyregnum = new global::System.Data.DataColumn("coyregnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyregnum);
                this.columncoygstnum = new global::System.Data.DataColumn("coygstnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoygstnum);
                this.columncpfregnum = new global::System.Data.DataColumn("cpfregnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpfregnum);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columnarnum = new global::System.Data.DataColumn("arnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarnum);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoyimage = new global::System.Data.DataColumn("coyimage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyimage);
                this.columnwhnum = new global::System.Data.DataColumn("whnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwhnum);
                this.columnccnum = new global::System.Data.DataColumn("ccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnccnum);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columncoy.MaxLength = 10;
                this.columncoyname.MaxLength = 50;
                this.columncoyaddr1.MaxLength = 50;
                this.columncoyaddr2.MaxLength = 50;
                this.columncoyaddr3.MaxLength = 50;
                this.columncoyaddr4.MaxLength = 50;
                this.columncoyemail.MaxLength = 50;
                this.columncoyurl.MaxLength = 50;
                this.columncoytel.MaxLength = 20;
                this.columncoyfax.MaxLength = 20;
                this.columncoyregnum.MaxLength = 20;
                this.columncoygstnum.MaxLength = 20;
                this.columncpfregnum.MaxLength = 20;
                this.columnapnum.MaxLength = 12;
                this.columnarnum.MaxLength = 12;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnwhnum.MaxLength = 12;
                this.columnccnum.MaxLength = 12;
                this.columncreatedby.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CoyRow NewCoyRow() {
                return ((CoyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CoyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CoyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CoyRowChanged != null)) {
                    this.CoyRowChanged(this, new CoyRowChangeEvent(((CoyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CoyRowChanging != null)) {
                    this.CoyRowChanging(this, new CoyRowChangeEvent(((CoyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CoyRowDeleted != null)) {
                    this.CoyRowDeleted(this, new CoyRowChangeEvent(((CoyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CoyRowDeleting != null)) {
                    this.CoyRowDeleting(this, new CoyRowChangeEvent(((CoyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCoyRow(CoyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CoyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SigTBDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnsignaturepicloc;
            
            private global::System.Data.DataColumn columngirosigLoc;
            
            private global::System.Data.DataColumn columnphoto1;
            
            private global::System.Data.DataColumn columnphoto2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTBDataTable() {
                this.TableName = "SigTB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SigTBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SigTBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn signaturepiclocColumn {
                get {
                    return this.columnsignaturepicloc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn girosigLocColumn {
                get {
                    return this.columngirosigLoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photo1Column {
                get {
                    return this.columnphoto1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photo2Column {
                get {
                    return this.columnphoto2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTBRow this[int index] {
                get {
                    return ((SigTBRow)(this.Rows[index]));
                }
            }
            
            public event SigTBRowChangeEventHandler SigTBRowChanging;
            
            public event SigTBRowChangeEventHandler SigTBRowChanged;
            
            public event SigTBRowChangeEventHandler SigTBRowDeleting;
            
            public event SigTBRowChangeEventHandler SigTBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSigTBRow(SigTBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTBRow AddSigTBRow(string empnum, string signaturepicloc, string girosigLoc, byte[] photo1, byte[] photo2) {
                SigTBRow rowSigTBRow = ((SigTBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        empnum,
                        signaturepicloc,
                        girosigLoc,
                        photo1,
                        photo2};
                rowSigTBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSigTBRow);
                return rowSigTBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SigTBDataTable cln = ((SigTBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SigTBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempnum = base.Columns["empnum"];
                this.columnsignaturepicloc = base.Columns["signaturepicloc"];
                this.columngirosigLoc = base.Columns["girosigLoc"];
                this.columnphoto1 = base.Columns["photo1"];
                this.columnphoto2 = base.Columns["photo2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnsignaturepicloc = new global::System.Data.DataColumn("signaturepicloc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsignaturepicloc);
                this.columngirosigLoc = new global::System.Data.DataColumn("girosigLoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngirosigLoc);
                this.columnphoto1 = new global::System.Data.DataColumn("photo1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto1);
                this.columnphoto2 = new global::System.Data.DataColumn("photo2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTBRow NewSigTBRow() {
                return ((SigTBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SigTBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SigTBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SigTBRowChanged != null)) {
                    this.SigTBRowChanged(this, new SigTBRowChangeEvent(((SigTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SigTBRowChanging != null)) {
                    this.SigTBRowChanging(this, new SigTBRowChangeEvent(((SigTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SigTBRowDeleted != null)) {
                    this.SigTBRowDeleted(this, new SigTBRowChangeEvent(((SigTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SigTBRowDeleting != null)) {
                    this.SigTBRowDeleting(this, new SigTBRowChangeEvent(((SigTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSigTBRow(SigTBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SigTBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PhotoTBDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnphotourl;
            
            private global::System.Data.DataColumn columnphoto1;
            
            private global::System.Data.DataColumn columnorderno;
            
            private global::System.Data.DataColumn columnposition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PhotoTBDataTable() {
                this.TableName = "PhotoTB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PhotoTBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PhotoTBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photourlColumn {
                get {
                    return this.columnphotourl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photo1Column {
                get {
                    return this.columnphoto1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ordernoColumn {
                get {
                    return this.columnorderno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PhotoTBRow this[int index] {
                get {
                    return ((PhotoTBRow)(this.Rows[index]));
                }
            }
            
            public event PhotoTBRowChangeEventHandler PhotoTBRowChanging;
            
            public event PhotoTBRowChangeEventHandler PhotoTBRowChanged;
            
            public event PhotoTBRowChangeEventHandler PhotoTBRowDeleting;
            
            public event PhotoTBRowChangeEventHandler PhotoTBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPhotoTBRow(PhotoTBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PhotoTBRow AddPhotoTBRow(string empnum, string photourl, byte[] photo1, int orderno, int position) {
                PhotoTBRow rowPhotoTBRow = ((PhotoTBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        empnum,
                        photourl,
                        photo1,
                        orderno,
                        position};
                rowPhotoTBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPhotoTBRow);
                return rowPhotoTBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PhotoTBDataTable cln = ((PhotoTBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PhotoTBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempnum = base.Columns["empnum"];
                this.columnphotourl = base.Columns["photourl"];
                this.columnphoto1 = base.Columns["photo1"];
                this.columnorderno = base.Columns["orderno"];
                this.columnposition = base.Columns["position"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnphotourl = new global::System.Data.DataColumn("photourl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphotourl);
                this.columnphoto1 = new global::System.Data.DataColumn("photo1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto1);
                this.columnorderno = new global::System.Data.DataColumn("orderno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderno);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnphotourl.Caption = "signaturepicloc";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PhotoTBRow NewPhotoTBRow() {
                return ((PhotoTBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PhotoTBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PhotoTBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PhotoTBRowChanged != null)) {
                    this.PhotoTBRowChanged(this, new PhotoTBRowChangeEvent(((PhotoTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PhotoTBRowChanging != null)) {
                    this.PhotoTBRowChanging(this, new PhotoTBRowChangeEvent(((PhotoTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PhotoTBRowDeleted != null)) {
                    this.PhotoTBRowDeleted(this, new PhotoTBRowChangeEvent(((PhotoTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PhotoTBRowDeleting != null)) {
                    this.PhotoTBRowDeleting(this, new PhotoTBRowChangeEvent(((PhotoTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePhotoTBRow(PhotoTBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PhotoTBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HRAMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnhramnum;
            
            private global::System.Data.DataColumn columnhramdesc;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnyear;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columncreatedby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRAMDataTable() {
                this.TableName = "HRAM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HRAMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HRAMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramnumColumn {
                get {
                    return this.columnhramnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramdescColumn {
                get {
                    return this.columnhramdesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearColumn {
                get {
                    return this.columnyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRAMRow this[int index] {
                get {
                    return ((HRAMRow)(this.Rows[index]));
                }
            }
            
            public event HRAMRowChangeEventHandler HRAMRowChanging;
            
            public event HRAMRowChangeEventHandler HRAMRowChanged;
            
            public event HRAMRowChangeEventHandler HRAMRowDeleting;
            
            public event HRAMRowChangeEventHandler HRAMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHRAMRow(HRAMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRAMRow AddHRAMRow(long ID, string hramnum, string hramdesc, string remark, System.DateTime created, System.DateTime modified, int year, string status, int period, string flag, string user, string createdby) {
                HRAMRow rowHRAMRow = ((HRAMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        hramnum,
                        hramdesc,
                        remark,
                        created,
                        modified,
                        year,
                        status,
                        period,
                        flag,
                        user,
                        createdby};
                rowHRAMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHRAMRow);
                return rowHRAMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HRAMDataTable cln = ((HRAMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HRAMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnhramnum = base.Columns["hramnum"];
                this.columnhramdesc = base.Columns["hramdesc"];
                this.columnremark = base.Columns["remark"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnyear = base.Columns["year"];
                this.columnstatus = base.Columns["status"];
                this.columnperiod = base.Columns["period"];
                this.columnflag = base.Columns["flag"];
                this.columnuser = base.Columns["user"];
                this.columncreatedby = base.Columns["createdby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnhramnum = new global::System.Data.DataColumn("hramnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramnum);
                this.columnhramdesc = new global::System.Data.DataColumn("hramdesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramdesc);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnyear = new global::System.Data.DataColumn("year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnID.AllowDBNull = false;
                this.columnhramnum.MaxLength = 20;
                this.columnhramdesc.MaxLength = 50;
                this.columnremark.MaxLength = 100;
                this.columnstatus.MaxLength = 1;
                this.columnflag.MaxLength = 5;
                this.columnuser.MaxLength = 10;
                this.columncreatedby.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRAMRow NewHRAMRow() {
                return ((HRAMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HRAMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HRAMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HRAMRowChanged != null)) {
                    this.HRAMRowChanged(this, new HRAMRowChangeEvent(((HRAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HRAMRowChanging != null)) {
                    this.HRAMRowChanging(this, new HRAMRowChangeEvent(((HRAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HRAMRowDeleted != null)) {
                    this.HRAMRowDeleted(this, new HRAMRowChangeEvent(((HRAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HRAMRowDeleting != null)) {
                    this.HRAMRowDeleting(this, new HRAMRowChangeEvent(((HRAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHRAMRow(HRAMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HRAMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HRRMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnreligion;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnline;
            
            private global::System.Data.DataColumn columncreatedby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRRMDataTable() {
                this.TableName = "HRRM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HRRMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HRRMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn religionColumn {
                get {
                    return this.columnreligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineColumn {
                get {
                    return this.columnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRRMRow this[int index] {
                get {
                    return ((HRRMRow)(this.Rows[index]));
                }
            }
            
            public event HRRMRowChangeEventHandler HRRMRowChanging;
            
            public event HRRMRowChangeEventHandler HRRMRowChanged;
            
            public event HRRMRowChangeEventHandler HRRMRowDeleting;
            
            public event HRRMRowChangeEventHandler HRRMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHRRMRow(HRRMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRRMRow AddHRRMRow(long ID, string religion, string remark, string user, string flag, string status, System.DateTime created, System.DateTime modified, decimal line, string createdby) {
                HRRMRow rowHRRMRow = ((HRRMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        religion,
                        remark,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        line,
                        createdby};
                rowHRRMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHRRMRow);
                return rowHRRMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRRMRow FindByID(long ID) {
                return ((HRRMRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HRRMDataTable cln = ((HRRMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HRRMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnreligion = base.Columns["religion"];
                this.columnremark = base.Columns["remark"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnline = base.Columns["line"];
                this.columncreatedby = base.Columns["createdby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnreligion = new global::System.Data.DataColumn("religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreligion);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnline = new global::System.Data.DataColumn("line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnreligion.MaxLength = 20;
                this.columnremark.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncreatedby.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRRMRow NewHRRMRow() {
                return ((HRRMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HRRMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HRRMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HRRMRowChanged != null)) {
                    this.HRRMRowChanged(this, new HRRMRowChangeEvent(((HRRMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HRRMRowChanging != null)) {
                    this.HRRMRowChanging(this, new HRRMRowChangeEvent(((HRRMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HRRMRowDeleted != null)) {
                    this.HRRMRowDeleted(this, new HRRMRowChangeEvent(((HRRMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HRRMRowDeleting != null)) {
                    this.HRRMRowDeleting(this, new HRRMRowChangeEvent(((HRRMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHRRMRow(HRRMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationDS1 ds = new ApplicationDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HRRMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HEMPHRow : global::System.Data.DataRow {
            
            private HEMPHDataTable tableHEMPH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HEMPHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHEMPH = ((HEMPHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableHEMPH.IDColumn]));
                }
                set {
                    this[this.tableHEMPH.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.empname1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.empname1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nationality {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.nationalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nationality\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.nationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maritalstatus {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.maritalstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maritalstatus\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.maritalstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ethnicity {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.ethnicityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ethnicity\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.ethnicityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dob {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dob\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bloodtype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.bloodtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bloodtype\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.bloodtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string etype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.etypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'etype\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.etypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statusid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.statusidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statusid\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.statusidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateconfirmed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dateconfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateconfirmed\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dateconfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateresigned {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dateresignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateresigned\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dateresignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankacc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.bankaccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankacc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.bankaccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal basicsal {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.basicsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'basicsal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.basicsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime nextapprdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.nextapprdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nextapprdate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.nextapprdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.empnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.empnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cardid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cardidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cardid\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cardidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recrempnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.recrempnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recrempnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.recrempnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hsgcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.hsgcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hsgcode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.hsgcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo {
                get {
                    try {
                        return ((byte[])(this[this.tableHEMPH.photoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.photoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string religion {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.religionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'religion\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.religionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string force {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.forceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'force\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.forceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rank {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.rankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rank\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.rankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vocation {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.vocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vocation\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.vocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearserved {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.yearservedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearserved\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.yearservedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.padd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.padd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd2 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.padd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd2\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.padd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd3 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.padd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd3\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.padd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ppostal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.ppostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppostal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.ppostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cadd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cadd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd2 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cadd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd2\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cadd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd3 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cadd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd3\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cadd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cpostal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cpostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cpostal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cpostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isNSmandatory {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isNSmandatoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isNSmandatory\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isNSmandatoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statuscode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.statuscodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statuscode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.statuscodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datejoined {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.datejoinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datejoined\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.datejoinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.hramnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.hramnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.regnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.regnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isHQstaff {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isHQstaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isHQstaff\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isHQstaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirmationdate {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.confirmationdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmationdate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.confirmationdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isretired {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isretiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isretired\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isretiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contractend {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contractendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractend\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitnumi {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.sitnumiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitnumi\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.sitnumiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paytypecode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.paytypecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paytypecode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.paytypecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal daysperweek {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.daysperweekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'daysperweek\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.daysperweekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramdesc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.hramdescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramdesc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.hramdescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isblacklisted {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isblacklistedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isblacklisted\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isblacklistedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BldgBlock {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.BldgBlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BldgBlock\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.BldgBlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LevelNo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.LevelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LevelNo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.LevelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitNo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.UnitNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.UnitNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetName {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.StreetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetName\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.StreetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryAddress {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.CountryAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryAddress\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.CountryAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankCode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.BankCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.BankCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchCode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.BranchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchCode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.BranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForeignAddress {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.ForeignAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForeignAddress\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.ForeignAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.banknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.banknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTRY {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.COUNTRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTRY\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.COUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agencyfund {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.agencyfundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agencyfund\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.agencyfundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string datePR {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.datePRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datePR\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.datePRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string postal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.postalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.postalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pcountry {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.pcountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pcountry\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.pcountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pmcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.pmcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pmcode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.pmcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emptype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.emptypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emptype\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.emptypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string photourl {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.photourlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photourl\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.photourlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitenum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.sitenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitenum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.sitenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] contractdoc {
                get {
                    try {
                        return ((byte[])(this[this.tableHEMPH.contractdocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractdoc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractdocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contractloc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contractlocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractloc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractlocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool contractsigned {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.contractsignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractsigned\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractsignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string signaturepicloc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.signaturepiclocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'signaturepicloc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.signaturepiclocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string interviewedby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.interviewedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'interviewedby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.interviewedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isWebAdd {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isWebAddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isWebAdd\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isWebAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string webguid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.webguidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'webguid\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.webguidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string modifiedby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.modifiedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modifiedby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.modifiedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactno {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contactnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactno\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isApproved {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isApproved\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime approvedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.approvedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvedate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approveby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.approvebyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approveby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvebyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvename {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.approvenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvename\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvestatus {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.approvestatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvestatus\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvestatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateapplied {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dateappliedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateapplied\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dateappliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int englishWritten {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.englishWrittenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'englishWritten\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.englishWrittenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int englishSpoken {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.englishSpokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'englishSpoken\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.englishSpokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int chineseWritten {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.chineseWrittenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chineseWritten\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.chineseWrittenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int chineseSpoken {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.chineseSpokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chineseSpoken\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.chineseSpokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string otherLanguage {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.otherLanguageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherLanguage\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.otherLanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int otherLanguageWritten {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.otherLanguageWrittenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherLanguageWritten\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.otherLanguageWrittenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int otherLanguageSpoken {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.otherLanguageSpokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherLanguageSpoken\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.otherLanguageSpokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driverlicence {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.driverlicenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driverlicence\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.driverlicenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration1 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration2 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration2\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration3 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration3\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration4 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration4\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration5 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration5\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration6 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration6\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string declaration6remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.declaration6remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration6remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration6remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string giroReason {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.giroReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'giroReason\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.giroReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appliFormSigLoc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.appliFormSigLocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appliFormSigLoc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.appliFormSigLocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactHouse {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contactHouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactHouse\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contactHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime commencedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.commencedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commencedate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.commencedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string homecontactno {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.homecontactnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'homecontactno\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.homecontactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.MonToFriTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.MonToFriTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriLunchHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.MonToFriLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTeaBrkHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.MonToFriTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SatTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SatTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatLunchHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SatLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatTeaBrkHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SatTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SunTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SunTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunLunchHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SunLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTeaBrkHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SunTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegularOffDay {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.RegularOffDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegularOffDay\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.RegularOffDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.PHTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.PHTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHLunchHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.PHLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHTeaBrkHr {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.PHTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jobgroup {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.jobgroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jobgroup\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.jobgroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecommSigLoc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.RecommSigLocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecommSigLoc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.RecommSigLocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string referby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.referbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'referby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.referbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string giroSigLoc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.giroSigLocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'giroSigLoc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.giroSigLocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supv {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.supvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'supv\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.supvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rejDesc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.rejDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rejDesc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.rejDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emgName {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.emgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emgName\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.emgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emgContact {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.emgContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emgContact\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.emgContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emgRelationship {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.emgRelationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emgRelationship\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.emgRelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salaryRemark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.salaryRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salaryRemark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.salaryRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime resigndate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.resigndateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'resigndate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.resigndateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration7 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration7\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string declaration1Remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.declaration1RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration1Remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration1RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string declaration2Remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.declaration2RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration2Remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration2RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string declaration3Remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.declaration3RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration3Remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration3RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string declaration4Remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.declaration4RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration4Remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration4RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string declaration5Remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.declaration5RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration5Remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration5RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accountHolderName {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.accountHolderNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accountHolderName\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.accountHolderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableHEMPH.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableHEMPH.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableHEMPH.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableHEMPH.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableHEMPH.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableHEMPH.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isempname1Null() {
                return this.IsNull(this.tableHEMPH.empname1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setempname1Null() {
                this[this.tableHEMPH.empname1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableHEMPH.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableHEMPH.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnationalityNull() {
                return this.IsNull(this.tableHEMPH.nationalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnationalityNull() {
                this[this.tableHEMPH.nationalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaritalstatusNull() {
                return this.IsNull(this.tableHEMPH.maritalstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaritalstatusNull() {
                this[this.tableHEMPH.maritalstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsethnicityNull() {
                return this.IsNull(this.tableHEMPH.ethnicityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetethnicityNull() {
                this[this.tableHEMPH.ethnicityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdobNull() {
                return this.IsNull(this.tableHEMPH.dobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdobNull() {
                this[this.tableHEMPH.dobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbloodtypeNull() {
                return this.IsNull(this.tableHEMPH.bloodtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbloodtypeNull() {
                this[this.tableHEMPH.bloodtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsetypeNull() {
                return this.IsNull(this.tableHEMPH.etypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetetypeNull() {
                this[this.tableHEMPH.etypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusidNull() {
                return this.IsNull(this.tableHEMPH.statusidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusidNull() {
                this[this.tableHEMPH.statusidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tableHEMPH.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tableHEMPH.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateconfirmedNull() {
                return this.IsNull(this.tableHEMPH.dateconfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateconfirmedNull() {
                this[this.tableHEMPH.dateconfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateresignedNull() {
                return this.IsNull(this.tableHEMPH.dateresignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateresignedNull() {
                this[this.tableHEMPH.dateresignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankaccNull() {
                return this.IsNull(this.tableHEMPH.bankaccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankaccNull() {
                this[this.tableHEMPH.bankaccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbasicsalNull() {
                return this.IsNull(this.tableHEMPH.basicsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbasicsalNull() {
                this[this.tableHEMPH.basicsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableHEMPH.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableHEMPH.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableHEMPH.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableHEMPH.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableHEMPH.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableHEMPH.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableHEMPH.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableHEMPH.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableHEMPH.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableHEMPH.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableHEMPH.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableHEMPH.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnextapprdateNull() {
                return this.IsNull(this.tableHEMPH.nextapprdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnextapprdateNull() {
                this[this.tableHEMPH.nextapprdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableHEMPH.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableHEMPH.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableHEMPH.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableHEMPH.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnameNull() {
                return this.IsNull(this.tableHEMPH.empnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnameNull() {
                this[this.tableHEMPH.empnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tableHEMPH.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tableHEMPH.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscardidNull() {
                return this.IsNull(this.tableHEMPH.cardidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcardidNull() {
                this[this.tableHEMPH.cardidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrecrempnumNull() {
                return this.IsNull(this.tableHEMPH.recrempnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrecrempnumNull() {
                this[this.tableHEMPH.recrempnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshsgcodeNull() {
                return this.IsNull(this.tableHEMPH.hsgcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethsgcodeNull() {
                this[this.tableHEMPH.hsgcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphotoNull() {
                return this.IsNull(this.tableHEMPH.photoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphotoNull() {
                this[this.tableHEMPH.photoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreligionNull() {
                return this.IsNull(this.tableHEMPH.religionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreligionNull() {
                this[this.tableHEMPH.religionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforceNull() {
                return this.IsNull(this.tableHEMPH.forceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforceNull() {
                this[this.tableHEMPH.forceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrankNull() {
                return this.IsNull(this.tableHEMPH.rankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrankNull() {
                this[this.tableHEMPH.rankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvocationNull() {
                return this.IsNull(this.tableHEMPH.vocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvocationNull() {
                this[this.tableHEMPH.vocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearservedNull() {
                return this.IsNull(this.tableHEMPH.yearservedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearservedNull() {
                this[this.tableHEMPH.yearservedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd1Null() {
                return this.IsNull(this.tableHEMPH.padd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd1Null() {
                this[this.tableHEMPH.padd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd2Null() {
                return this.IsNull(this.tableHEMPH.padd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd2Null() {
                this[this.tableHEMPH.padd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd3Null() {
                return this.IsNull(this.tableHEMPH.padd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd3Null() {
                this[this.tableHEMPH.padd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppostalNull() {
                return this.IsNull(this.tableHEMPH.ppostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppostalNull() {
                this[this.tableHEMPH.ppostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd1Null() {
                return this.IsNull(this.tableHEMPH.cadd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd1Null() {
                this[this.tableHEMPH.cadd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd2Null() {
                return this.IsNull(this.tableHEMPH.cadd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd2Null() {
                this[this.tableHEMPH.cadd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd3Null() {
                return this.IsNull(this.tableHEMPH.cadd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd3Null() {
                this[this.tableHEMPH.cadd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscpostalNull() {
                return this.IsNull(this.tableHEMPH.cpostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcpostalNull() {
                this[this.tableHEMPH.cpostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisNSmandatoryNull() {
                return this.IsNull(this.tableHEMPH.isNSmandatoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisNSmandatoryNull() {
                this[this.tableHEMPH.isNSmandatoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatuscodeNull() {
                return this.IsNull(this.tableHEMPH.statuscodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatuscodeNull() {
                this[this.tableHEMPH.statuscodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatejoinedNull() {
                return this.IsNull(this.tableHEMPH.datejoinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatejoinedNull() {
                this[this.tableHEMPH.datejoinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramnumNull() {
                return this.IsNull(this.tableHEMPH.hramnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramnumNull() {
                this[this.tableHEMPH.hramnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregnameNull() {
                return this.IsNull(this.tableHEMPH.regnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregnameNull() {
                this[this.tableHEMPH.regnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisHQstaffNull() {
                return this.IsNull(this.tableHEMPH.isHQstaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisHQstaffNull() {
                this[this.tableHEMPH.isHQstaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmationdateNull() {
                return this.IsNull(this.tableHEMPH.confirmationdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmationdateNull() {
                this[this.tableHEMPH.confirmationdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisretiredNull() {
                return this.IsNull(this.tableHEMPH.isretiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisretiredNull() {
                this[this.tableHEMPH.isretiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractendNull() {
                return this.IsNull(this.tableHEMPH.contractendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractendNull() {
                this[this.tableHEMPH.contractendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitnumiNull() {
                return this.IsNull(this.tableHEMPH.sitnumiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitnumiNull() {
                this[this.tableHEMPH.sitnumiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaytypecodeNull() {
                return this.IsNull(this.tableHEMPH.paytypecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaytypecodeNull() {
                this[this.tableHEMPH.paytypecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tableHEMPH.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tableHEMPH.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tableHEMPH.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tableHEMPH.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysperweekNull() {
                return this.IsNull(this.tableHEMPH.daysperweekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysperweekNull() {
                this[this.tableHEMPH.daysperweekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramdescNull() {
                return this.IsNull(this.tableHEMPH.hramdescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramdescNull() {
                this[this.tableHEMPH.hramdescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisblacklistedNull() {
                return this.IsNull(this.tableHEMPH.isblacklistedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisblacklistedNull() {
                this[this.tableHEMPH.isblacklistedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBldgBlockNull() {
                return this.IsNull(this.tableHEMPH.BldgBlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBldgBlockNull() {
                this[this.tableHEMPH.BldgBlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLevelNoNull() {
                return this.IsNull(this.tableHEMPH.LevelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLevelNoNull() {
                this[this.tableHEMPH.LevelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNoNull() {
                return this.IsNull(this.tableHEMPH.UnitNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNoNull() {
                this[this.tableHEMPH.UnitNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNameNull() {
                return this.IsNull(this.tableHEMPH.StreetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNameNull() {
                this[this.tableHEMPH.StreetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryAddressNull() {
                return this.IsNull(this.tableHEMPH.CountryAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryAddressNull() {
                this[this.tableHEMPH.CountryAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankCodeNull() {
                return this.IsNull(this.tableHEMPH.BankCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankCodeNull() {
                this[this.tableHEMPH.BankCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchCodeNull() {
                return this.IsNull(this.tableHEMPH.BranchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchCodeNull() {
                this[this.tableHEMPH.BranchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForeignAddressNull() {
                return this.IsNull(this.tableHEMPH.ForeignAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForeignAddressNull() {
                this[this.tableHEMPH.ForeignAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanknameNull() {
                return this.IsNull(this.tableHEMPH.banknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanknameNull() {
                this[this.tableHEMPH.banknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTRYNull() {
                return this.IsNull(this.tableHEMPH.COUNTRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTRYNull() {
                this[this.tableHEMPH.COUNTRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagencyfundNull() {
                return this.IsNull(this.tableHEMPH.agencyfundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagencyfundNull() {
                this[this.tableHEMPH.agencyfundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatePRNull() {
                return this.IsNull(this.tableHEMPH.datePRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatePRNull() {
                this[this.tableHEMPH.datePRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspostalNull() {
                return this.IsNull(this.tableHEMPH.postalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpostalNull() {
                this[this.tableHEMPH.postalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcountryNull() {
                return this.IsNull(this.tableHEMPH.pcountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcountryNull() {
                this[this.tableHEMPH.pcountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspmcodeNull() {
                return this.IsNull(this.tableHEMPH.pmcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpmcodeNull() {
                this[this.tableHEMPH.pmcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemptypeNull() {
                return this.IsNull(this.tableHEMPH.emptypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemptypeNull() {
                this[this.tableHEMPH.emptypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphotourlNull() {
                return this.IsNull(this.tableHEMPH.photourlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphotourlNull() {
                this[this.tableHEMPH.photourlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenumNull() {
                return this.IsNull(this.tableHEMPH.sitenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenumNull() {
                this[this.tableHEMPH.sitenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractdocNull() {
                return this.IsNull(this.tableHEMPH.contractdocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractdocNull() {
                this[this.tableHEMPH.contractdocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractlocNull() {
                return this.IsNull(this.tableHEMPH.contractlocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractlocNull() {
                this[this.tableHEMPH.contractlocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractsignedNull() {
                return this.IsNull(this.tableHEMPH.contractsignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractsignedNull() {
                this[this.tableHEMPH.contractsignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssignaturepiclocNull() {
                return this.IsNull(this.tableHEMPH.signaturepiclocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsignaturepiclocNull() {
                this[this.tableHEMPH.signaturepiclocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinterviewedbyNull() {
                return this.IsNull(this.tableHEMPH.interviewedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinterviewedbyNull() {
                this[this.tableHEMPH.interviewedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisWebAddNull() {
                return this.IsNull(this.tableHEMPH.isWebAddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisWebAddNull() {
                this[this.tableHEMPH.isWebAddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswebguidNull() {
                return this.IsNull(this.tableHEMPH.webguidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwebguidNull() {
                this[this.tableHEMPH.webguidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedbyNull() {
                return this.IsNull(this.tableHEMPH.modifiedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedbyNull() {
                this[this.tableHEMPH.modifiedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactnoNull() {
                return this.IsNull(this.tableHEMPH.contactnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactnoNull() {
                this[this.tableHEMPH.contactnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisApprovedNull() {
                return this.IsNull(this.tableHEMPH.isApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisApprovedNull() {
                this[this.tableHEMPH.isApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovedateNull() {
                return this.IsNull(this.tableHEMPH.approvedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovedateNull() {
                this[this.tableHEMPH.approvedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovebyNull() {
                return this.IsNull(this.tableHEMPH.approvebyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovebyNull() {
                this[this.tableHEMPH.approvebyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovenameNull() {
                return this.IsNull(this.tableHEMPH.approvenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovenameNull() {
                this[this.tableHEMPH.approvenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovestatusNull() {
                return this.IsNull(this.tableHEMPH.approvestatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovestatusNull() {
                this[this.tableHEMPH.approvestatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateappliedNull() {
                return this.IsNull(this.tableHEMPH.dateappliedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateappliedNull() {
                this[this.tableHEMPH.dateappliedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenglishWrittenNull() {
                return this.IsNull(this.tableHEMPH.englishWrittenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenglishWrittenNull() {
                this[this.tableHEMPH.englishWrittenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenglishSpokenNull() {
                return this.IsNull(this.tableHEMPH.englishSpokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenglishSpokenNull() {
                this[this.tableHEMPH.englishSpokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschineseWrittenNull() {
                return this.IsNull(this.tableHEMPH.chineseWrittenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchineseWrittenNull() {
                this[this.tableHEMPH.chineseWrittenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschineseSpokenNull() {
                return this.IsNull(this.tableHEMPH.chineseSpokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchineseSpokenNull() {
                this[this.tableHEMPH.chineseSpokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherLanguageNull() {
                return this.IsNull(this.tableHEMPH.otherLanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherLanguageNull() {
                this[this.tableHEMPH.otherLanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherLanguageWrittenNull() {
                return this.IsNull(this.tableHEMPH.otherLanguageWrittenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherLanguageWrittenNull() {
                this[this.tableHEMPH.otherLanguageWrittenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherLanguageSpokenNull() {
                return this.IsNull(this.tableHEMPH.otherLanguageSpokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherLanguageSpokenNull() {
                this[this.tableHEMPH.otherLanguageSpokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdriverlicenceNull() {
                return this.IsNull(this.tableHEMPH.driverlicenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdriverlicenceNull() {
                this[this.tableHEMPH.driverlicenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration1Null() {
                return this.IsNull(this.tableHEMPH.declaration1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration1Null() {
                this[this.tableHEMPH.declaration1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration2Null() {
                return this.IsNull(this.tableHEMPH.declaration2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration2Null() {
                this[this.tableHEMPH.declaration2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration3Null() {
                return this.IsNull(this.tableHEMPH.declaration3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration3Null() {
                this[this.tableHEMPH.declaration3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration4Null() {
                return this.IsNull(this.tableHEMPH.declaration4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration4Null() {
                this[this.tableHEMPH.declaration4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration5Null() {
                return this.IsNull(this.tableHEMPH.declaration5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration5Null() {
                this[this.tableHEMPH.declaration5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration6Null() {
                return this.IsNull(this.tableHEMPH.declaration6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration6Null() {
                this[this.tableHEMPH.declaration6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration6remarkNull() {
                return this.IsNull(this.tableHEMPH.declaration6remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration6remarkNull() {
                this[this.tableHEMPH.declaration6remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgiroReasonNull() {
                return this.IsNull(this.tableHEMPH.giroReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgiroReasonNull() {
                this[this.tableHEMPH.giroReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsappliFormSigLocNull() {
                return this.IsNull(this.tableHEMPH.appliFormSigLocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetappliFormSigLocNull() {
                this[this.tableHEMPH.appliFormSigLocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactHouseNull() {
                return this.IsNull(this.tableHEMPH.contactHouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactHouseNull() {
                this[this.tableHEMPH.contactHouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommencedateNull() {
                return this.IsNull(this.tableHEMPH.commencedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommencedateNull() {
                this[this.tableHEMPH.commencedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshomecontactnoNull() {
                return this.IsNull(this.tableHEMPH.homecontactnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethomecontactnoNull() {
                this[this.tableHEMPH.homecontactnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTimeFromNull() {
                return this.IsNull(this.tableHEMPH.MonToFriTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTimeFromNull() {
                this[this.tableHEMPH.MonToFriTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTimeToNull() {
                return this.IsNull(this.tableHEMPH.MonToFriTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTimeToNull() {
                this[this.tableHEMPH.MonToFriTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriLunchHrNull() {
                return this.IsNull(this.tableHEMPH.MonToFriLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriLunchHrNull() {
                this[this.tableHEMPH.MonToFriLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.MonToFriTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTeaBrkHrNull() {
                this[this.tableHEMPH.MonToFriTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTimeFromNull() {
                return this.IsNull(this.tableHEMPH.SatTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTimeFromNull() {
                this[this.tableHEMPH.SatTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTimeToNull() {
                return this.IsNull(this.tableHEMPH.SatTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTimeToNull() {
                this[this.tableHEMPH.SatTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatLunchHrNull() {
                return this.IsNull(this.tableHEMPH.SatLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatLunchHrNull() {
                this[this.tableHEMPH.SatLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.SatTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTeaBrkHrNull() {
                this[this.tableHEMPH.SatTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTimeFromNull() {
                return this.IsNull(this.tableHEMPH.SunTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTimeFromNull() {
                this[this.tableHEMPH.SunTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTimeToNull() {
                return this.IsNull(this.tableHEMPH.SunTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTimeToNull() {
                this[this.tableHEMPH.SunTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunLunchHrNull() {
                return this.IsNull(this.tableHEMPH.SunLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunLunchHrNull() {
                this[this.tableHEMPH.SunLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.SunTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTeaBrkHrNull() {
                this[this.tableHEMPH.SunTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegularOffDayNull() {
                return this.IsNull(this.tableHEMPH.RegularOffDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegularOffDayNull() {
                this[this.tableHEMPH.RegularOffDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTimeFromNull() {
                return this.IsNull(this.tableHEMPH.PHTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTimeFromNull() {
                this[this.tableHEMPH.PHTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTimeToNull() {
                return this.IsNull(this.tableHEMPH.PHTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTimeToNull() {
                this[this.tableHEMPH.PHTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHLunchHrNull() {
                return this.IsNull(this.tableHEMPH.PHLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHLunchHrNull() {
                this[this.tableHEMPH.PHLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.PHTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTeaBrkHrNull() {
                this[this.tableHEMPH.PHTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjobgroupNull() {
                return this.IsNull(this.tableHEMPH.jobgroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjobgroupNull() {
                this[this.tableHEMPH.jobgroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecommSigLocNull() {
                return this.IsNull(this.tableHEMPH.RecommSigLocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecommSigLocNull() {
                this[this.tableHEMPH.RecommSigLocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableHEMPH.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableHEMPH.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreferbyNull() {
                return this.IsNull(this.tableHEMPH.referbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreferbyNull() {
                this[this.tableHEMPH.referbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgiroSigLocNull() {
                return this.IsNull(this.tableHEMPH.giroSigLocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgiroSigLocNull() {
                this[this.tableHEMPH.giroSigLocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupvNull() {
                return this.IsNull(this.tableHEMPH.supvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupvNull() {
                this[this.tableHEMPH.supvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrejDescNull() {
                return this.IsNull(this.tableHEMPH.rejDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrejDescNull() {
                this[this.tableHEMPH.rejDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemgNameNull() {
                return this.IsNull(this.tableHEMPH.emgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemgNameNull() {
                this[this.tableHEMPH.emgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemgContactNull() {
                return this.IsNull(this.tableHEMPH.emgContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemgContactNull() {
                this[this.tableHEMPH.emgContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemgRelationshipNull() {
                return this.IsNull(this.tableHEMPH.emgRelationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemgRelationshipNull() {
                this[this.tableHEMPH.emgRelationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalaryRemarkNull() {
                return this.IsNull(this.tableHEMPH.salaryRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalaryRemarkNull() {
                this[this.tableHEMPH.salaryRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsresigndateNull() {
                return this.IsNull(this.tableHEMPH.resigndateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetresigndateNull() {
                this[this.tableHEMPH.resigndateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration7Null() {
                return this.IsNull(this.tableHEMPH.declaration7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration7Null() {
                this[this.tableHEMPH.declaration7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration1RemarkNull() {
                return this.IsNull(this.tableHEMPH.declaration1RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration1RemarkNull() {
                this[this.tableHEMPH.declaration1RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration2RemarkNull() {
                return this.IsNull(this.tableHEMPH.declaration2RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration2RemarkNull() {
                this[this.tableHEMPH.declaration2RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration3RemarkNull() {
                return this.IsNull(this.tableHEMPH.declaration3RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration3RemarkNull() {
                this[this.tableHEMPH.declaration3RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration4RemarkNull() {
                return this.IsNull(this.tableHEMPH.declaration4RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration4RemarkNull() {
                this[this.tableHEMPH.declaration4RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration5RemarkNull() {
                return this.IsNull(this.tableHEMPH.declaration5RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration5RemarkNull() {
                this[this.tableHEMPH.declaration5RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccountHolderNameNull() {
                return this.IsNull(this.tableHEMPH.accountHolderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccountHolderNameNull() {
                this[this.tableHEMPH.accountHolderNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FAMRRow : global::System.Data.DataRow {
            
            private FAMRDataTable tableFAMR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAMRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFAMR = ((FAMRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableFAMR.IDColumn]));
                }
                set {
                    this[this.tableFAMR.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string relationship {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.relationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'relationship\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.relationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMR.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMR.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fnric {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.fnricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fnric\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.fnricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbirthcertificate {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.fbirthcertificateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbirthcertificate\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.fbirthcertificateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int age {
                get {
                    try {
                        return ((int)(this[this.tableFAMR.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'age\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.occupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'occupation\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.occupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.companyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.companyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableFAMR.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableFAMR.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableFAMR.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableFAMR.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableFAMR.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableFAMR.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableFAMR.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableFAMR.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrelationshipNull() {
                return this.IsNull(this.tableFAMR.relationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrelationshipNull() {
                this[this.tableFAMR.relationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableFAMR.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableFAMR.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableFAMR.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableFAMR.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableFAMR.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableFAMR.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableFAMR.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableFAMR.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableFAMR.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableFAMR.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableFAMR.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableFAMR.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableFAMR.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableFAMR.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tableFAMR.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tableFAMR.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableFAMR.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableFAMR.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableFAMR.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableFAMR.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfnricNull() {
                return this.IsNull(this.tableFAMR.fnricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfnricNull() {
                this[this.tableFAMR.fnricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfbirthcertificateNull() {
                return this.IsNull(this.tableFAMR.fbirthcertificateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfbirthcertificateNull() {
                this[this.tableFAMR.fbirthcertificateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsageNull() {
                return this.IsNull(this.tableFAMR.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetageNull() {
                this[this.tableFAMR.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoccupationNull() {
                return this.IsNull(this.tableFAMR.occupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoccupationNull() {
                this[this.tableFAMR.occupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNull() {
                return this.IsNull(this.tableFAMR.companyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNull() {
                this[this.tableFAMR.companyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PFMEDURow : global::System.Data.DataRow {
            
            private PFMEDUDataTable tablePFMEDU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMEDURow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePFMEDU = ((PFMEDUDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePFMEDU.IDColumn]));
                }
                set {
                    this[this.tablePFMEDU.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coursedesc {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.coursedescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coursedesc\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.coursedescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Institution {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.InstitutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Institution\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.InstitutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datefinished {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU.datefinishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datefinished\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.datefinishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string docfile {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.docfileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docfile\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.docfileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string certification {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.certificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certification\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.certificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearfinished {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.yearfinishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearfinished\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.yearfinishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isHighest {
                get {
                    try {
                        return ((bool)(this[this.tablePFMEDU.isHighestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isHighest\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.isHighestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool issecurityrelated {
                get {
                    try {
                        return ((bool)(this[this.tablePFMEDU.issecurityrelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issecurityrelated\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.issecurityrelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isCourse {
                get {
                    try {
                        return ((bool)(this[this.tablePFMEDU.isCourseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isCourse\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.isCourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coursecode {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.coursecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coursecode\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.coursecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coursename {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.coursenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coursename\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.coursenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU.trStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trStartDate\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.trStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU.trEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trEndDate\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.trEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grade {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU.gradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grade\' in table \'PFMEDU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU.gradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePFMEDU.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePFMEDU.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePFMEDU.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePFMEDU.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePFMEDU.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePFMEDU.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoursedescNull() {
                return this.IsNull(this.tablePFMEDU.coursedescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoursedescNull() {
                this[this.tablePFMEDU.coursedescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstitutionNull() {
                return this.IsNull(this.tablePFMEDU.InstitutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstitutionNull() {
                this[this.tablePFMEDU.InstitutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatefinishedNull() {
                return this.IsNull(this.tablePFMEDU.datefinishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatefinishedNull() {
                this[this.tablePFMEDU.datefinishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tablePFMEDU.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tablePFMEDU.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocfileNull() {
                return this.IsNull(this.tablePFMEDU.docfileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocfileNull() {
                this[this.tablePFMEDU.docfileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePFMEDU.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePFMEDU.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePFMEDU.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePFMEDU.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePFMEDU.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePFMEDU.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePFMEDU.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePFMEDU.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePFMEDU.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePFMEDU.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tablePFMEDU.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tablePFMEDU.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePFMEDU.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePFMEDU.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscertificationNull() {
                return this.IsNull(this.tablePFMEDU.certificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcertificationNull() {
                this[this.tablePFMEDU.certificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearfinishedNull() {
                return this.IsNull(this.tablePFMEDU.yearfinishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearfinishedNull() {
                this[this.tablePFMEDU.yearfinishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisHighestNull() {
                return this.IsNull(this.tablePFMEDU.isHighestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisHighestNull() {
                this[this.tablePFMEDU.isHighestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsissecurityrelatedNull() {
                return this.IsNull(this.tablePFMEDU.issecurityrelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetissecurityrelatedNull() {
                this[this.tablePFMEDU.issecurityrelatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tablePFMEDU.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tablePFMEDU.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisCourseNull() {
                return this.IsNull(this.tablePFMEDU.isCourseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisCourseNull() {
                this[this.tablePFMEDU.isCourseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoursecodeNull() {
                return this.IsNull(this.tablePFMEDU.coursecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoursecodeNull() {
                this[this.tablePFMEDU.coursecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoursenameNull() {
                return this.IsNull(this.tablePFMEDU.coursenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoursenameNull() {
                this[this.tablePFMEDU.coursenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tablePFMEDU.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tablePFMEDU.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrStartDateNull() {
                return this.IsNull(this.tablePFMEDU.trStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrStartDateNull() {
                this[this.tablePFMEDU.trStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrEndDateNull() {
                return this.IsNull(this.tablePFMEDU.trEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrEndDateNull() {
                this[this.tablePFMEDU.trEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgradeNull() {
                return this.IsNull(this.tablePFMEDU.gradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgradeNull() {
                this[this.tablePFMEDU.gradeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PFMWERow : global::System.Data.DataRow {
            
            private PFMWEDataTable tablePFMWE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMWERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePFMWE = ((PFMWEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePFMWE.IDColumn]));
                }
                set {
                    this[this.tablePFMWE.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyname {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.coynameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyname\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.coynameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearfrom {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.yearfromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearfrom\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.yearfromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearto {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.yeartoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearto\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.yeartoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool issecurityrelated {
                get {
                    try {
                        return ((bool)(this[this.tablePFMWE.issecurityrelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issecurityrelated\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.issecurityrelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMWE.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMWE.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'PFMWE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePFMWE.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePFMWE.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePFMWE.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePFMWE.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePFMWE.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePFMWE.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablePFMWE.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablePFMWE.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoynameNull() {
                return this.IsNull(this.tablePFMWE.coynameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoynameNull() {
                this[this.tablePFMWE.coynameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearfromNull() {
                return this.IsNull(this.tablePFMWE.yearfromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearfromNull() {
                this[this.tablePFMWE.yearfromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyeartoNull() {
                return this.IsNull(this.tablePFMWE.yeartoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyeartoNull() {
                this[this.tablePFMWE.yeartoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsissecurityrelatedNull() {
                return this.IsNull(this.tablePFMWE.issecurityrelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetissecurityrelatedNull() {
                this[this.tablePFMWE.issecurityrelatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePFMWE.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePFMWE.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePFMWE.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePFMWE.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePFMWE.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePFMWE.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePFMWE.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePFMWE.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePFMWE.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePFMWE.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tablePFMWE.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tablePFMWE.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePFMWE.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePFMWE.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tablePFMWE.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tablePFMWE.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tablePFMWE.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tablePFMWE.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tablePFMWE.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tablePFMWE.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tablePFMWE.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tablePFMWE.remarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LetterAppointmentRow : global::System.Data.DataRow {
            
            private LetterAppointmentDataTable tableLetterAppointment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LetterAppointmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLetterAppointment = ((LetterAppointmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.empnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.empnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string position {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.positionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitename {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.sitenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitename\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.sitenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datejoined {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLetterAppointment.datejoinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datejoined\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.datejoinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankacc {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.bankaccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankacc\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.bankaccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime commencedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLetterAppointment.commencedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commencedate\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.commencedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string daysperweek {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.daysperweekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'daysperweek\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.daysperweekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string homeaddress {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.homeaddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'homeaddress\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.homeaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegularOffDay {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.RegularOffDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegularOffDay\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.RegularOffDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalaryDeductionPerDay {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.SalaryDeductionPerDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryDeductionPerDay\' in table \'LetterAppointment\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SalaryDeductionPerDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherDudction {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.OtherDudctionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDudction\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.OtherDudctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BasicSal {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.BasicSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasicSal\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.BasicSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ATTNALLW {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.ATTNALLWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTNALLW\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.ATTNALLWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ACCOMALLW {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.ACCOMALLWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOMALLW\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.ACCOMALLWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DRIVTRANSALLW {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.DRIVTRANSALLWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRIVTRANSALLW\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.DRIVTRANSALLWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherAllowance {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.OtherAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAllowance\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.OtherAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextOfKeen {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.NextOfKeenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextOfKeen\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.NextOfKeenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyContact {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.FamilyContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyContact\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.FamilyContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string homecontactno {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.homecontactnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'homecontactno\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.homecontactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OTALLW {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.OTALLWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTALLW\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.OTALLWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paytypecode {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.paytypecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paytypecode\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.paytypecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.MonToFriTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTimeFrom\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.MonToFriTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.MonToFriTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTimeTo\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.MonToFriTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriLunchHr {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.MonToFriLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriLunchHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.MonToFriLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTeaBrkHr {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.MonToFriTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTeaBrkHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.MonToFriTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.SatTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTimeFrom\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SatTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.SatTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTimeTo\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SatTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatLunchHr {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.SatLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatLunchHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SatLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SatTeaBrkHr {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.SatTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTeaBrkHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SatTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.SunTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTimeFrom\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SunTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.SunTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTimeTo\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SunTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunLunchHr {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.SunLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunLunchHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SunLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTeaBrkHr {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.SunTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTeaBrkHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.SunTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.PHTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTimeFrom\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.PHTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.PHTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTimeTo\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.PHTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PHLunchHr {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.PHLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHLunchHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.PHLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PHTeaBrkHr {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.PHTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTeaBrkHr\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.PHTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalSalary {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.TotalSalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSalary\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.TotalSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankname {
                get {
                    try {
                        return ((string)(this[this.tableLetterAppointment.banknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankname\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.banknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OTHERALLW {
                get {
                    try {
                        return ((decimal)(this[this.tableLetterAppointment.OTHERALLWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHERALLW\' in table \'LetterAppointment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLetterAppointment.OTHERALLWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnameNull() {
                return this.IsNull(this.tableLetterAppointment.empnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnameNull() {
                this[this.tableLetterAppointment.empnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableLetterAppointment.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableLetterAppointment.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspositionNull() {
                return this.IsNull(this.tableLetterAppointment.positionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpositionNull() {
                this[this.tableLetterAppointment.positionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenameNull() {
                return this.IsNull(this.tableLetterAppointment.sitenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenameNull() {
                this[this.tableLetterAppointment.sitenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatejoinedNull() {
                return this.IsNull(this.tableLetterAppointment.datejoinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatejoinedNull() {
                this[this.tableLetterAppointment.datejoinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankaccNull() {
                return this.IsNull(this.tableLetterAppointment.bankaccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankaccNull() {
                this[this.tableLetterAppointment.bankaccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommencedateNull() {
                return this.IsNull(this.tableLetterAppointment.commencedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommencedateNull() {
                this[this.tableLetterAppointment.commencedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableLetterAppointment.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableLetterAppointment.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysperweekNull() {
                return this.IsNull(this.tableLetterAppointment.daysperweekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysperweekNull() {
                this[this.tableLetterAppointment.daysperweekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshomeaddressNull() {
                return this.IsNull(this.tableLetterAppointment.homeaddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethomeaddressNull() {
                this[this.tableLetterAppointment.homeaddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegularOffDayNull() {
                return this.IsNull(this.tableLetterAppointment.RegularOffDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegularOffDayNull() {
                this[this.tableLetterAppointment.RegularOffDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalaryDeductionPerDayNull() {
                return this.IsNull(this.tableLetterAppointment.SalaryDeductionPerDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalaryDeductionPerDayNull() {
                this[this.tableLetterAppointment.SalaryDeductionPerDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherDudctionNull() {
                return this.IsNull(this.tableLetterAppointment.OtherDudctionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherDudctionNull() {
                this[this.tableLetterAppointment.OtherDudctionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBasicSalNull() {
                return this.IsNull(this.tableLetterAppointment.BasicSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBasicSalNull() {
                this[this.tableLetterAppointment.BasicSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTNALLWNull() {
                return this.IsNull(this.tableLetterAppointment.ATTNALLWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTNALLWNull() {
                this[this.tableLetterAppointment.ATTNALLWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOMALLWNull() {
                return this.IsNull(this.tableLetterAppointment.ACCOMALLWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOMALLWNull() {
                this[this.tableLetterAppointment.ACCOMALLWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRIVTRANSALLWNull() {
                return this.IsNull(this.tableLetterAppointment.DRIVTRANSALLWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRIVTRANSALLWNull() {
                this[this.tableLetterAppointment.DRIVTRANSALLWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAllowanceNull() {
                return this.IsNull(this.tableLetterAppointment.OtherAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAllowanceNull() {
                this[this.tableLetterAppointment.OtherAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableLetterAppointment.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableLetterAppointment.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextOfKeenNull() {
                return this.IsNull(this.tableLetterAppointment.NextOfKeenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextOfKeenNull() {
                this[this.tableLetterAppointment.NextOfKeenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyContactNull() {
                return this.IsNull(this.tableLetterAppointment.FamilyContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyContactNull() {
                this[this.tableLetterAppointment.FamilyContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshomecontactnoNull() {
                return this.IsNull(this.tableLetterAppointment.homecontactnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethomecontactnoNull() {
                this[this.tableLetterAppointment.homecontactnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOTALLWNull() {
                return this.IsNull(this.tableLetterAppointment.OTALLWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOTALLWNull() {
                this[this.tableLetterAppointment.OTALLWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaytypecodeNull() {
                return this.IsNull(this.tableLetterAppointment.paytypecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaytypecodeNull() {
                this[this.tableLetterAppointment.paytypecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTimeFromNull() {
                return this.IsNull(this.tableLetterAppointment.MonToFriTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTimeFromNull() {
                this[this.tableLetterAppointment.MonToFriTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTimeToNull() {
                return this.IsNull(this.tableLetterAppointment.MonToFriTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTimeToNull() {
                this[this.tableLetterAppointment.MonToFriTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriLunchHrNull() {
                return this.IsNull(this.tableLetterAppointment.MonToFriLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriLunchHrNull() {
                this[this.tableLetterAppointment.MonToFriLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTeaBrkHrNull() {
                return this.IsNull(this.tableLetterAppointment.MonToFriTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTeaBrkHrNull() {
                this[this.tableLetterAppointment.MonToFriTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTimeFromNull() {
                return this.IsNull(this.tableLetterAppointment.SatTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTimeFromNull() {
                this[this.tableLetterAppointment.SatTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTimeToNull() {
                return this.IsNull(this.tableLetterAppointment.SatTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTimeToNull() {
                this[this.tableLetterAppointment.SatTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatLunchHrNull() {
                return this.IsNull(this.tableLetterAppointment.SatLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatLunchHrNull() {
                this[this.tableLetterAppointment.SatLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTeaBrkHrNull() {
                return this.IsNull(this.tableLetterAppointment.SatTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTeaBrkHrNull() {
                this[this.tableLetterAppointment.SatTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTimeFromNull() {
                return this.IsNull(this.tableLetterAppointment.SunTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTimeFromNull() {
                this[this.tableLetterAppointment.SunTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTimeToNull() {
                return this.IsNull(this.tableLetterAppointment.SunTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTimeToNull() {
                this[this.tableLetterAppointment.SunTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunLunchHrNull() {
                return this.IsNull(this.tableLetterAppointment.SunLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunLunchHrNull() {
                this[this.tableLetterAppointment.SunLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTeaBrkHrNull() {
                return this.IsNull(this.tableLetterAppointment.SunTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTeaBrkHrNull() {
                this[this.tableLetterAppointment.SunTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTimeFromNull() {
                return this.IsNull(this.tableLetterAppointment.PHTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTimeFromNull() {
                this[this.tableLetterAppointment.PHTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTimeToNull() {
                return this.IsNull(this.tableLetterAppointment.PHTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTimeToNull() {
                this[this.tableLetterAppointment.PHTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHLunchHrNull() {
                return this.IsNull(this.tableLetterAppointment.PHLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHLunchHrNull() {
                this[this.tableLetterAppointment.PHLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTeaBrkHrNull() {
                return this.IsNull(this.tableLetterAppointment.PHTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTeaBrkHrNull() {
                this[this.tableLetterAppointment.PHTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalSalaryNull() {
                return this.IsNull(this.tableLetterAppointment.TotalSalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalSalaryNull() {
                this[this.tableLetterAppointment.TotalSalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanknameNull() {
                return this.IsNull(this.tableLetterAppointment.banknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanknameNull() {
                this[this.tableLetterAppointment.banknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOTHERALLWNull() {
                return this.IsNull(this.tableLetterAppointment.OTHERALLWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOTHERALLWNull() {
                this[this.tableLetterAppointment.OTHERALLWColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CoyRow : global::System.Data.DataRow {
            
            private CoyDataTable tableCoy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CoyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCoy = ((CoyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableCoy.IDColumn]));
                }
                set {
                    this[this.tableCoy.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyname {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coynameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyname\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coynameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr1 {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyaddr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr1\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyaddr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr2 {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyaddr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr2\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyaddr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr3 {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyaddr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr3\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyaddr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr4 {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyaddr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr4\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyaddr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyemail {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyemailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyemail\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyemailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyurl {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyurlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyurl\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyurlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coytel {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coytelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coytel\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coytelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyfax {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyfaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyfax\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyfaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyregnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coyregnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyregnum\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyregnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coygstnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy.coygstnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coygstnum\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coygstnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cpfregnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy.cpfregnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cpfregnum\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.cpfregnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string arnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy.arnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arnum\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.arnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableCoy.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableCoy.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableCoy.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCoy.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCoy.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] coyimage {
                get {
                    try {
                        return ((byte[])(this[this.tableCoy.coyimageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyimage\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.coyimageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string whnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy.whnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'whnum\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.whnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ccnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy.ccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ccnum\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.ccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableCoy.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'Coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tableCoy.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tableCoy.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoynameNull() {
                return this.IsNull(this.tableCoy.coynameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoynameNull() {
                this[this.tableCoy.coynameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr1Null() {
                return this.IsNull(this.tableCoy.coyaddr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr1Null() {
                this[this.tableCoy.coyaddr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr2Null() {
                return this.IsNull(this.tableCoy.coyaddr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr2Null() {
                this[this.tableCoy.coyaddr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr3Null() {
                return this.IsNull(this.tableCoy.coyaddr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr3Null() {
                this[this.tableCoy.coyaddr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr4Null() {
                return this.IsNull(this.tableCoy.coyaddr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr4Null() {
                this[this.tableCoy.coyaddr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyemailNull() {
                return this.IsNull(this.tableCoy.coyemailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyemailNull() {
                this[this.tableCoy.coyemailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyurlNull() {
                return this.IsNull(this.tableCoy.coyurlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyurlNull() {
                this[this.tableCoy.coyurlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoytelNull() {
                return this.IsNull(this.tableCoy.coytelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoytelNull() {
                this[this.tableCoy.coytelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyfaxNull() {
                return this.IsNull(this.tableCoy.coyfaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyfaxNull() {
                this[this.tableCoy.coyfaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyregnumNull() {
                return this.IsNull(this.tableCoy.coyregnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyregnumNull() {
                this[this.tableCoy.coyregnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoygstnumNull() {
                return this.IsNull(this.tableCoy.coygstnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoygstnumNull() {
                this[this.tableCoy.coygstnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscpfregnumNull() {
                return this.IsNull(this.tableCoy.cpfregnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcpfregnumNull() {
                this[this.tableCoy.cpfregnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tableCoy.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tableCoy.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsarnumNull() {
                return this.IsNull(this.tableCoy.arnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetarnumNull() {
                this[this.tableCoy.arnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableCoy.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableCoy.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableCoy.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableCoy.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableCoy.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableCoy.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableCoy.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableCoy.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableCoy.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableCoy.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyimageNull() {
                return this.IsNull(this.tableCoy.coyimageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyimageNull() {
                this[this.tableCoy.coyimageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswhnumNull() {
                return this.IsNull(this.tableCoy.whnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwhnumNull() {
                this[this.tableCoy.whnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccnumNull() {
                return this.IsNull(this.tableCoy.ccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccnumNull() {
                this[this.tableCoy.ccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableCoy.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableCoy.createdbyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SigTBRow : global::System.Data.DataRow {
            
            private SigTBDataTable tableSigTB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SigTBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSigTB = ((SigTBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableSigTB.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'SigTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string signaturepicloc {
                get {
                    try {
                        return ((string)(this[this.tableSigTB.signaturepiclocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'signaturepicloc\' in table \'SigTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB.signaturepiclocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string girosigLoc {
                get {
                    try {
                        return ((string)(this[this.tableSigTB.girosigLocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'girosigLoc\' in table \'SigTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB.girosigLocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo1 {
                get {
                    try {
                        return ((byte[])(this[this.tableSigTB.photo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo1\' in table \'SigTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB.photo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo2 {
                get {
                    try {
                        return ((byte[])(this[this.tableSigTB.photo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo2\' in table \'SigTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB.photo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableSigTB.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableSigTB.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssignaturepiclocNull() {
                return this.IsNull(this.tableSigTB.signaturepiclocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsignaturepiclocNull() {
                this[this.tableSigTB.signaturepiclocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgirosigLocNull() {
                return this.IsNull(this.tableSigTB.girosigLocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgirosigLocNull() {
                this[this.tableSigTB.girosigLocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphoto1Null() {
                return this.IsNull(this.tableSigTB.photo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphoto1Null() {
                this[this.tableSigTB.photo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphoto2Null() {
                return this.IsNull(this.tableSigTB.photo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphoto2Null() {
                this[this.tableSigTB.photo2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PhotoTBRow : global::System.Data.DataRow {
            
            private PhotoTBDataTable tablePhotoTB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PhotoTBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePhotoTB = ((PhotoTBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePhotoTB.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PhotoTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePhotoTB.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string photourl {
                get {
                    try {
                        return ((string)(this[this.tablePhotoTB.photourlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photourl\' in table \'PhotoTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePhotoTB.photourlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo1 {
                get {
                    try {
                        return ((byte[])(this[this.tablePhotoTB.photo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo1\' in table \'PhotoTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePhotoTB.photo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderno {
                get {
                    try {
                        return ((int)(this[this.tablePhotoTB.ordernoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderno\' in table \'PhotoTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePhotoTB.ordernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int position {
                get {
                    try {
                        return ((int)(this[this.tablePhotoTB.positionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position\' in table \'PhotoTB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePhotoTB.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePhotoTB.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePhotoTB.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphotourlNull() {
                return this.IsNull(this.tablePhotoTB.photourlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphotourlNull() {
                this[this.tablePhotoTB.photourlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphoto1Null() {
                return this.IsNull(this.tablePhotoTB.photo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphoto1Null() {
                this[this.tablePhotoTB.photo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsordernoNull() {
                return this.IsNull(this.tablePhotoTB.ordernoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetordernoNull() {
                this[this.tablePhotoTB.ordernoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspositionNull() {
                return this.IsNull(this.tablePhotoTB.positionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpositionNull() {
                this[this.tablePhotoTB.positionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HRAMRow : global::System.Data.DataRow {
            
            private HRAMDataTable tableHRAM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HRAMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHRAM = ((HRAMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableHRAM.IDColumn]));
                }
                set {
                    this[this.tableHRAM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramnum {
                get {
                    try {
                        return ((string)(this[this.tableHRAM.hramnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramnum\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.hramnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramdesc {
                get {
                    try {
                        return ((string)(this[this.tableHRAM.hramdescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramdesc\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.hramdescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableHRAM.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHRAM.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHRAM.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year {
                get {
                    try {
                        return ((int)(this[this.tableHRAM.yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'year\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableHRAM.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tableHRAM.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableHRAM.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableHRAM.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableHRAM.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'HRAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRAM.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramnumNull() {
                return this.IsNull(this.tableHRAM.hramnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramnumNull() {
                this[this.tableHRAM.hramnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramdescNull() {
                return this.IsNull(this.tableHRAM.hramdescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramdescNull() {
                this[this.tableHRAM.hramdescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableHRAM.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableHRAM.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableHRAM.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableHRAM.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableHRAM.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableHRAM.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearNull() {
                return this.IsNull(this.tableHRAM.yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearNull() {
                this[this.tableHRAM.yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableHRAM.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableHRAM.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tableHRAM.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tableHRAM.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableHRAM.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableHRAM.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableHRAM.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableHRAM.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableHRAM.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableHRAM.createdbyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HRRMRow : global::System.Data.DataRow {
            
            private HRRMDataTable tableHRRM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HRRMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHRRM = ((HRRMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableHRRM.IDColumn]));
                }
                set {
                    this[this.tableHRRM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string religion {
                get {
                    try {
                        return ((string)(this[this.tableHRRM.religionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'religion\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.religionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableHRRM.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableHRRM.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableHRRM.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableHRRM.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHRRM.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHRRM.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal line {
                get {
                    try {
                        return ((decimal)(this[this.tableHRRM.lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'line\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableHRRM.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'HRRM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRRM.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreligionNull() {
                return this.IsNull(this.tableHRRM.religionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreligionNull() {
                this[this.tableHRRM.religionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableHRRM.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableHRRM.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableHRRM.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableHRRM.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableHRRM.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableHRRM.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableHRRM.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableHRRM.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableHRRM.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableHRRM.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableHRRM.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableHRRM.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNull() {
                return this.IsNull(this.tableHRRM.lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNull() {
                this[this.tableHRRM.lineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableHRRM.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableHRRM.createdbyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HEMPHRowChangeEvent : global::System.EventArgs {
            
            private HEMPHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRowChangeEvent(HEMPHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FAMRRowChangeEvent : global::System.EventArgs {
            
            private FAMRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRowChangeEvent(FAMRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PFMEDURowChangeEvent : global::System.EventArgs {
            
            private PFMEDURow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDURowChangeEvent(PFMEDURow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PFMWERowChangeEvent : global::System.EventArgs {
            
            private PFMWERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWERowChangeEvent(PFMWERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LetterAppointmentRowChangeEvent : global::System.EventArgs {
            
            private LetterAppointmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LetterAppointmentRowChangeEvent(LetterAppointmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LetterAppointmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CoyRowChangeEvent : global::System.EventArgs {
            
            private CoyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CoyRowChangeEvent(CoyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CoyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SigTBRowChangeEvent : global::System.EventArgs {
            
            private SigTBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTBRowChangeEvent(SigTBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PhotoTBRowChangeEvent : global::System.EventArgs {
            
            private PhotoTBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PhotoTBRowChangeEvent(PhotoTBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PhotoTBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HRAMRowChangeEvent : global::System.EventArgs {
            
            private HRAMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRAMRowChangeEvent(HRAMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRAMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HRRMRowChangeEvent : global::System.EventArgs {
            
            private HRRMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRRMRowChangeEvent(HRRMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRRMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591