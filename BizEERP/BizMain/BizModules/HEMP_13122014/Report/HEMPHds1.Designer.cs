//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.HEMP.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("HEMPHds1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class HEMPHds1 : global::System.Data.DataSet {
        
        private HEMPHDataTable tableHEMPH;
        
        private FAMRDataTable tableFAMR;
        
        private FAMR1DataTable tableFAMR1;
        
        private HCNR1DataTable tableHCNR1;
        
        private PFMEDU1DataTable tablePFMEDU1;
        
        private PFMWE1DataTable tablePFMWE1;
        
        private PLR1DataTable tablePLR1;
        
        private RECR1DataTable tableRECR1;
        
        private WPR1DataTable tableWPR1;
        
        private HEMPH1DataTable tableHEMPH1;
        
        private MATM1DataTable tableMATM1;
        
        private PFMEDU2DataTable tablePFMEDU2;
        
        private CIDC1DataTable tableCIDC1;
        
        private PFMWE2DataTable tablePFMWE2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HEMPHds1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected HEMPHds1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HEMPH"] != null)) {
                    base.Tables.Add(new HEMPHDataTable(ds.Tables["HEMPH"]));
                }
                if ((ds.Tables["FAMR"] != null)) {
                    base.Tables.Add(new FAMRDataTable(ds.Tables["FAMR"]));
                }
                if ((ds.Tables["FAMR1"] != null)) {
                    base.Tables.Add(new FAMR1DataTable(ds.Tables["FAMR1"]));
                }
                if ((ds.Tables["HCNR1"] != null)) {
                    base.Tables.Add(new HCNR1DataTable(ds.Tables["HCNR1"]));
                }
                if ((ds.Tables["PFMEDU1"] != null)) {
                    base.Tables.Add(new PFMEDU1DataTable(ds.Tables["PFMEDU1"]));
                }
                if ((ds.Tables["PFMWE1"] != null)) {
                    base.Tables.Add(new PFMWE1DataTable(ds.Tables["PFMWE1"]));
                }
                if ((ds.Tables["PLR1"] != null)) {
                    base.Tables.Add(new PLR1DataTable(ds.Tables["PLR1"]));
                }
                if ((ds.Tables["RECR1"] != null)) {
                    base.Tables.Add(new RECR1DataTable(ds.Tables["RECR1"]));
                }
                if ((ds.Tables["WPR1"] != null)) {
                    base.Tables.Add(new WPR1DataTable(ds.Tables["WPR1"]));
                }
                if ((ds.Tables["HEMPH1"] != null)) {
                    base.Tables.Add(new HEMPH1DataTable(ds.Tables["HEMPH1"]));
                }
                if ((ds.Tables["MATM1"] != null)) {
                    base.Tables.Add(new MATM1DataTable(ds.Tables["MATM1"]));
                }
                if ((ds.Tables["PFMEDU2"] != null)) {
                    base.Tables.Add(new PFMEDU2DataTable(ds.Tables["PFMEDU2"]));
                }
                if ((ds.Tables["CIDC1"] != null)) {
                    base.Tables.Add(new CIDC1DataTable(ds.Tables["CIDC1"]));
                }
                if ((ds.Tables["PFMWE2"] != null)) {
                    base.Tables.Add(new PFMWE2DataTable(ds.Tables["PFMWE2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HEMPHDataTable HEMPH {
            get {
                return this.tableHEMPH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FAMRDataTable FAMR {
            get {
                return this.tableFAMR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FAMR1DataTable FAMR1 {
            get {
                return this.tableFAMR1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HCNR1DataTable HCNR1 {
            get {
                return this.tableHCNR1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PFMEDU1DataTable PFMEDU1 {
            get {
                return this.tablePFMEDU1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PFMWE1DataTable PFMWE1 {
            get {
                return this.tablePFMWE1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLR1DataTable PLR1 {
            get {
                return this.tablePLR1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RECR1DataTable RECR1 {
            get {
                return this.tableRECR1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WPR1DataTable WPR1 {
            get {
                return this.tableWPR1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HEMPH1DataTable HEMPH1 {
            get {
                return this.tableHEMPH1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATM1DataTable MATM1 {
            get {
                return this.tableMATM1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PFMEDU2DataTable PFMEDU2 {
            get {
                return this.tablePFMEDU2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CIDC1DataTable CIDC1 {
            get {
                return this.tableCIDC1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PFMWE2DataTable PFMWE2 {
            get {
                return this.tablePFMWE2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            HEMPHds1 cln = ((HEMPHds1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HEMPH"] != null)) {
                    base.Tables.Add(new HEMPHDataTable(ds.Tables["HEMPH"]));
                }
                if ((ds.Tables["FAMR"] != null)) {
                    base.Tables.Add(new FAMRDataTable(ds.Tables["FAMR"]));
                }
                if ((ds.Tables["FAMR1"] != null)) {
                    base.Tables.Add(new FAMR1DataTable(ds.Tables["FAMR1"]));
                }
                if ((ds.Tables["HCNR1"] != null)) {
                    base.Tables.Add(new HCNR1DataTable(ds.Tables["HCNR1"]));
                }
                if ((ds.Tables["PFMEDU1"] != null)) {
                    base.Tables.Add(new PFMEDU1DataTable(ds.Tables["PFMEDU1"]));
                }
                if ((ds.Tables["PFMWE1"] != null)) {
                    base.Tables.Add(new PFMWE1DataTable(ds.Tables["PFMWE1"]));
                }
                if ((ds.Tables["PLR1"] != null)) {
                    base.Tables.Add(new PLR1DataTable(ds.Tables["PLR1"]));
                }
                if ((ds.Tables["RECR1"] != null)) {
                    base.Tables.Add(new RECR1DataTable(ds.Tables["RECR1"]));
                }
                if ((ds.Tables["WPR1"] != null)) {
                    base.Tables.Add(new WPR1DataTable(ds.Tables["WPR1"]));
                }
                if ((ds.Tables["HEMPH1"] != null)) {
                    base.Tables.Add(new HEMPH1DataTable(ds.Tables["HEMPH1"]));
                }
                if ((ds.Tables["MATM1"] != null)) {
                    base.Tables.Add(new MATM1DataTable(ds.Tables["MATM1"]));
                }
                if ((ds.Tables["PFMEDU2"] != null)) {
                    base.Tables.Add(new PFMEDU2DataTable(ds.Tables["PFMEDU2"]));
                }
                if ((ds.Tables["CIDC1"] != null)) {
                    base.Tables.Add(new CIDC1DataTable(ds.Tables["CIDC1"]));
                }
                if ((ds.Tables["PFMWE2"] != null)) {
                    base.Tables.Add(new PFMWE2DataTable(ds.Tables["PFMWE2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHEMPH = ((HEMPHDataTable)(base.Tables["HEMPH"]));
            if ((initTable == true)) {
                if ((this.tableHEMPH != null)) {
                    this.tableHEMPH.InitVars();
                }
            }
            this.tableFAMR = ((FAMRDataTable)(base.Tables["FAMR"]));
            if ((initTable == true)) {
                if ((this.tableFAMR != null)) {
                    this.tableFAMR.InitVars();
                }
            }
            this.tableFAMR1 = ((FAMR1DataTable)(base.Tables["FAMR1"]));
            if ((initTable == true)) {
                if ((this.tableFAMR1 != null)) {
                    this.tableFAMR1.InitVars();
                }
            }
            this.tableHCNR1 = ((HCNR1DataTable)(base.Tables["HCNR1"]));
            if ((initTable == true)) {
                if ((this.tableHCNR1 != null)) {
                    this.tableHCNR1.InitVars();
                }
            }
            this.tablePFMEDU1 = ((PFMEDU1DataTable)(base.Tables["PFMEDU1"]));
            if ((initTable == true)) {
                if ((this.tablePFMEDU1 != null)) {
                    this.tablePFMEDU1.InitVars();
                }
            }
            this.tablePFMWE1 = ((PFMWE1DataTable)(base.Tables["PFMWE1"]));
            if ((initTable == true)) {
                if ((this.tablePFMWE1 != null)) {
                    this.tablePFMWE1.InitVars();
                }
            }
            this.tablePLR1 = ((PLR1DataTable)(base.Tables["PLR1"]));
            if ((initTable == true)) {
                if ((this.tablePLR1 != null)) {
                    this.tablePLR1.InitVars();
                }
            }
            this.tableRECR1 = ((RECR1DataTable)(base.Tables["RECR1"]));
            if ((initTable == true)) {
                if ((this.tableRECR1 != null)) {
                    this.tableRECR1.InitVars();
                }
            }
            this.tableWPR1 = ((WPR1DataTable)(base.Tables["WPR1"]));
            if ((initTable == true)) {
                if ((this.tableWPR1 != null)) {
                    this.tableWPR1.InitVars();
                }
            }
            this.tableHEMPH1 = ((HEMPH1DataTable)(base.Tables["HEMPH1"]));
            if ((initTable == true)) {
                if ((this.tableHEMPH1 != null)) {
                    this.tableHEMPH1.InitVars();
                }
            }
            this.tableMATM1 = ((MATM1DataTable)(base.Tables["MATM1"]));
            if ((initTable == true)) {
                if ((this.tableMATM1 != null)) {
                    this.tableMATM1.InitVars();
                }
            }
            this.tablePFMEDU2 = ((PFMEDU2DataTable)(base.Tables["PFMEDU2"]));
            if ((initTable == true)) {
                if ((this.tablePFMEDU2 != null)) {
                    this.tablePFMEDU2.InitVars();
                }
            }
            this.tableCIDC1 = ((CIDC1DataTable)(base.Tables["CIDC1"]));
            if ((initTable == true)) {
                if ((this.tableCIDC1 != null)) {
                    this.tableCIDC1.InitVars();
                }
            }
            this.tablePFMWE2 = ((PFMWE2DataTable)(base.Tables["PFMWE2"]));
            if ((initTable == true)) {
                if ((this.tablePFMWE2 != null)) {
                    this.tablePFMWE2.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "HEMPHds1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/HEMPHds1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHEMPH = new HEMPHDataTable();
            base.Tables.Add(this.tableHEMPH);
            this.tableFAMR = new FAMRDataTable();
            base.Tables.Add(this.tableFAMR);
            this.tableFAMR1 = new FAMR1DataTable();
            base.Tables.Add(this.tableFAMR1);
            this.tableHCNR1 = new HCNR1DataTable();
            base.Tables.Add(this.tableHCNR1);
            this.tablePFMEDU1 = new PFMEDU1DataTable();
            base.Tables.Add(this.tablePFMEDU1);
            this.tablePFMWE1 = new PFMWE1DataTable();
            base.Tables.Add(this.tablePFMWE1);
            this.tablePLR1 = new PLR1DataTable();
            base.Tables.Add(this.tablePLR1);
            this.tableRECR1 = new RECR1DataTable();
            base.Tables.Add(this.tableRECR1);
            this.tableWPR1 = new WPR1DataTable();
            base.Tables.Add(this.tableWPR1);
            this.tableHEMPH1 = new HEMPH1DataTable();
            base.Tables.Add(this.tableHEMPH1);
            this.tableMATM1 = new MATM1DataTable();
            base.Tables.Add(this.tableMATM1);
            this.tablePFMEDU2 = new PFMEDU2DataTable();
            base.Tables.Add(this.tablePFMEDU2);
            this.tableCIDC1 = new CIDC1DataTable();
            base.Tables.Add(this.tableCIDC1);
            this.tablePFMWE2 = new PFMWE2DataTable();
            base.Tables.Add(this.tablePFMWE2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHEMPH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFAMR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFAMR1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHCNR1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePFMEDU1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePFMWE1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePLR1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRECR1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWPR1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHEMPH1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATM1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePFMEDU2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCIDC1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePFMWE2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            HEMPHds1 ds = new HEMPHds1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HEMPHRowChangeEventHandler(object sender, HEMPHRowChangeEvent e);
        
        public delegate void FAMRRowChangeEventHandler(object sender, FAMRRowChangeEvent e);
        
        public delegate void FAMR1RowChangeEventHandler(object sender, FAMR1RowChangeEvent e);
        
        public delegate void HCNR1RowChangeEventHandler(object sender, HCNR1RowChangeEvent e);
        
        public delegate void PFMEDU1RowChangeEventHandler(object sender, PFMEDU1RowChangeEvent e);
        
        public delegate void PFMWE1RowChangeEventHandler(object sender, PFMWE1RowChangeEvent e);
        
        public delegate void PLR1RowChangeEventHandler(object sender, PLR1RowChangeEvent e);
        
        public delegate void RECR1RowChangeEventHandler(object sender, RECR1RowChangeEvent e);
        
        public delegate void WPR1RowChangeEventHandler(object sender, WPR1RowChangeEvent e);
        
        public delegate void HEMPH1RowChangeEventHandler(object sender, HEMPH1RowChangeEvent e);
        
        public delegate void MATM1RowChangeEventHandler(object sender, MATM1RowChangeEvent e);
        
        public delegate void PFMEDU2RowChangeEventHandler(object sender, PFMEDU2RowChangeEvent e);
        
        public delegate void CIDC1RowChangeEventHandler(object sender, CIDC1RowChangeEvent e);
        
        public delegate void PFMWE2RowChangeEventHandler(object sender, PFMWE2RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HEMPHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnempname1;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnnationality;
            
            private global::System.Data.DataColumn columnmaritalstatus;
            
            private global::System.Data.DataColumn columnethnicity;
            
            private global::System.Data.DataColumn columndob;
            
            private global::System.Data.DataColumn columnbloodtype;
            
            private global::System.Data.DataColumn columnetype;
            
            private global::System.Data.DataColumn columnstatusid;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columndateconfirmed;
            
            private global::System.Data.DataColumn columndateresigned;
            
            private global::System.Data.DataColumn columnbankacc;
            
            private global::System.Data.DataColumn columnbasicsal;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnnextapprdate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnempname;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columncardid;
            
            private global::System.Data.DataColumn columnrecrempnum;
            
            private global::System.Data.DataColumn columnhsgcode;
            
            private global::System.Data.DataColumn columnphoto;
            
            private global::System.Data.DataColumn columnreligion;
            
            private global::System.Data.DataColumn columnforce;
            
            private global::System.Data.DataColumn columnrank;
            
            private global::System.Data.DataColumn columnvocation;
            
            private global::System.Data.DataColumn columnyearserved;
            
            private global::System.Data.DataColumn columnpadd1;
            
            private global::System.Data.DataColumn columnpadd2;
            
            private global::System.Data.DataColumn columnpadd3;
            
            private global::System.Data.DataColumn columnppostal;
            
            private global::System.Data.DataColumn columncadd1;
            
            private global::System.Data.DataColumn columncadd2;
            
            private global::System.Data.DataColumn columncadd3;
            
            private global::System.Data.DataColumn columncpostal;
            
            private global::System.Data.DataColumn columnisNSmandatory;
            
            private global::System.Data.DataColumn columnstatuscode;
            
            private global::System.Data.DataColumn columndatejoined;
            
            private global::System.Data.DataColumn columnhramnum;
            
            private global::System.Data.DataColumn columnregname;
            
            private global::System.Data.DataColumn columnisHQstaff;
            
            private global::System.Data.DataColumn columnconfirmationdate;
            
            private global::System.Data.DataColumn columnisretired;
            
            private global::System.Data.DataColumn columncontractend;
            
            private global::System.Data.DataColumn columnsitnumi;
            
            private global::System.Data.DataColumn columnpaytypecode;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columndaysperweek;
            
            private global::System.Data.DataColumn columnhramdesc;
            
            private global::System.Data.DataColumn columnisblacklisted;
            
            private global::System.Data.DataColumn columnBldgBlock;
            
            private global::System.Data.DataColumn columnLevelNo;
            
            private global::System.Data.DataColumn columnUnitNo;
            
            private global::System.Data.DataColumn columnStreetName;
            
            private global::System.Data.DataColumn columnCountryAddress;
            
            private global::System.Data.DataColumn columnBankCode;
            
            private global::System.Data.DataColumn columnBranchCode;
            
            private global::System.Data.DataColumn columnForeignAddress;
            
            private global::System.Data.DataColumn columnbankname;
            
            private global::System.Data.DataColumn columnCOUNTRY;
            
            private global::System.Data.DataColumn columnagencyfund;
            
            private global::System.Data.DataColumn columndatePR;
            
            private global::System.Data.DataColumn columnpostal;
            
            private global::System.Data.DataColumn columnpcountry;
            
            private global::System.Data.DataColumn columnpmcode;
            
            private global::System.Data.DataColumn columnemptype;
            
            private global::System.Data.DataColumn columnphotourl;
            
            private global::System.Data.DataColumn columnsitenum;
            
            private global::System.Data.DataColumn columncontractdoc;
            
            private global::System.Data.DataColumn columncontractloc;
            
            private global::System.Data.DataColumn columncontractsigned;
            
            private global::System.Data.DataColumn columnsignaturepicloc;
            
            private global::System.Data.DataColumn columninterviewedby;
            
            private global::System.Data.DataColumn columnisWebAdd;
            
            private global::System.Data.DataColumn columnwebguid;
            
            private global::System.Data.DataColumn columnmodifiedby;
            
            private global::System.Data.DataColumn columncontactno;
            
            private global::System.Data.DataColumn columnisApproved;
            
            private global::System.Data.DataColumn columnapprovedate;
            
            private global::System.Data.DataColumn columnapproveby;
            
            private global::System.Data.DataColumn columnapprovename;
            
            private global::System.Data.DataColumn columnapprovestatus;
            
            private global::System.Data.DataColumn columndateapplied;
            
            private global::System.Data.DataColumn columnenglishWritten;
            
            private global::System.Data.DataColumn columnenglishSpoken;
            
            private global::System.Data.DataColumn columnchineseWritten;
            
            private global::System.Data.DataColumn columnchineseSpoken;
            
            private global::System.Data.DataColumn columnotherLanguage;
            
            private global::System.Data.DataColumn columnotherLanguageWritten;
            
            private global::System.Data.DataColumn columnotherLanguageSpoken;
            
            private global::System.Data.DataColumn columndriverlicence;
            
            private global::System.Data.DataColumn columndeclaration1;
            
            private global::System.Data.DataColumn columndeclaration2;
            
            private global::System.Data.DataColumn columndeclaration3;
            
            private global::System.Data.DataColumn columndeclaration4;
            
            private global::System.Data.DataColumn columndeclaration5;
            
            private global::System.Data.DataColumn columndeclaration6;
            
            private global::System.Data.DataColumn columndeclaration6remark;
            
            private global::System.Data.DataColumn columngiroReason;
            
            private global::System.Data.DataColumn columnappliFormSigLoc;
            
            private global::System.Data.DataColumn columncontactHouse;
            
            private global::System.Data.DataColumn columncommencedate;
            
            private global::System.Data.DataColumn columnhomecontactno;
            
            private global::System.Data.DataColumn columnMonToFriTimeFrom;
            
            private global::System.Data.DataColumn columnMonToFriTimeTo;
            
            private global::System.Data.DataColumn columnMonToFriLunchHr;
            
            private global::System.Data.DataColumn columnMonToFriTeaBrkHr;
            
            private global::System.Data.DataColumn columnSatTimeFrom;
            
            private global::System.Data.DataColumn columnSatTimeTo;
            
            private global::System.Data.DataColumn columnSatLunchHr;
            
            private global::System.Data.DataColumn columnSatTeaBrkHr;
            
            private global::System.Data.DataColumn columnSunTimeFrom;
            
            private global::System.Data.DataColumn columnSunTimeTo;
            
            private global::System.Data.DataColumn columnSunLunchHr;
            
            private global::System.Data.DataColumn columnSunTeaBrkHr;
            
            private global::System.Data.DataColumn columnRegularOffDay;
            
            private global::System.Data.DataColumn columnPHTimeFrom;
            
            private global::System.Data.DataColumn columnPHTimeTo;
            
            private global::System.Data.DataColumn columnPHLunchHr;
            
            private global::System.Data.DataColumn columnPHTeaBrkHr;
            
            private global::System.Data.DataColumn columnjobgroup;
            
            private global::System.Data.DataColumn columnRecommSigLoc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHDataTable() {
                this.TableName = "HEMPH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HEMPHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HEMPHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empname1Column {
                get {
                    return this.columnempname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nationalityColumn {
                get {
                    return this.columnnationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maritalstatusColumn {
                get {
                    return this.columnmaritalstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ethnicityColumn {
                get {
                    return this.columnethnicity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dobColumn {
                get {
                    return this.columndob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bloodtypeColumn {
                get {
                    return this.columnbloodtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn etypeColumn {
                get {
                    return this.columnetype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusidColumn {
                get {
                    return this.columnstatusid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateconfirmedColumn {
                get {
                    return this.columndateconfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateresignedColumn {
                get {
                    return this.columndateresigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankaccColumn {
                get {
                    return this.columnbankacc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basicsalColumn {
                get {
                    return this.columnbasicsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nextapprdateColumn {
                get {
                    return this.columnnextapprdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnameColumn {
                get {
                    return this.columnempname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cardidColumn {
                get {
                    return this.columncardid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recrempnumColumn {
                get {
                    return this.columnrecrempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hsgcodeColumn {
                get {
                    return this.columnhsgcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photoColumn {
                get {
                    return this.columnphoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn religionColumn {
                get {
                    return this.columnreligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn forceColumn {
                get {
                    return this.columnforce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rankColumn {
                get {
                    return this.columnrank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vocationColumn {
                get {
                    return this.columnvocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearservedColumn {
                get {
                    return this.columnyearserved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd1Column {
                get {
                    return this.columnpadd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd2Column {
                get {
                    return this.columnpadd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd3Column {
                get {
                    return this.columnpadd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ppostalColumn {
                get {
                    return this.columnppostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd1Column {
                get {
                    return this.columncadd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd2Column {
                get {
                    return this.columncadd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd3Column {
                get {
                    return this.columncadd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cpostalColumn {
                get {
                    return this.columncpostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isNSmandatoryColumn {
                get {
                    return this.columnisNSmandatory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statuscodeColumn {
                get {
                    return this.columnstatuscode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datejoinedColumn {
                get {
                    return this.columndatejoined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramnumColumn {
                get {
                    return this.columnhramnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn regnameColumn {
                get {
                    return this.columnregname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isHQstaffColumn {
                get {
                    return this.columnisHQstaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmationdateColumn {
                get {
                    return this.columnconfirmationdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isretiredColumn {
                get {
                    return this.columnisretired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractendColumn {
                get {
                    return this.columncontractend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitnumiColumn {
                get {
                    return this.columnsitnumi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paytypecodeColumn {
                get {
                    return this.columnpaytypecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daysperweekColumn {
                get {
                    return this.columndaysperweek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramdescColumn {
                get {
                    return this.columnhramdesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isblacklistedColumn {
                get {
                    return this.columnisblacklisted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BldgBlockColumn {
                get {
                    return this.columnBldgBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LevelNoColumn {
                get {
                    return this.columnLevelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNoColumn {
                get {
                    return this.columnUnitNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetNameColumn {
                get {
                    return this.columnStreetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryAddressColumn {
                get {
                    return this.columnCountryAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankCodeColumn {
                get {
                    return this.columnBankCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchCodeColumn {
                get {
                    return this.columnBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForeignAddressColumn {
                get {
                    return this.columnForeignAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn banknameColumn {
                get {
                    return this.columnbankname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTRYColumn {
                get {
                    return this.columnCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agencyfundColumn {
                get {
                    return this.columnagencyfund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datePRColumn {
                get {
                    return this.columndatePR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn postalColumn {
                get {
                    return this.columnpostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcountryColumn {
                get {
                    return this.columnpcountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pmcodeColumn {
                get {
                    return this.columnpmcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emptypeColumn {
                get {
                    return this.columnemptype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photourlColumn {
                get {
                    return this.columnphotourl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenumColumn {
                get {
                    return this.columnsitenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractdocColumn {
                get {
                    return this.columncontractdoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractlocColumn {
                get {
                    return this.columncontractloc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractsignedColumn {
                get {
                    return this.columncontractsigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn signaturepiclocColumn {
                get {
                    return this.columnsignaturepicloc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn interviewedbyColumn {
                get {
                    return this.columninterviewedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isWebAddColumn {
                get {
                    return this.columnisWebAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn webguidColumn {
                get {
                    return this.columnwebguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedbyColumn {
                get {
                    return this.columnmodifiedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactnoColumn {
                get {
                    return this.columncontactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isApprovedColumn {
                get {
                    return this.columnisApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvedateColumn {
                get {
                    return this.columnapprovedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvebyColumn {
                get {
                    return this.columnapproveby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvenameColumn {
                get {
                    return this.columnapprovename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvestatusColumn {
                get {
                    return this.columnapprovestatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateappliedColumn {
                get {
                    return this.columndateapplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn englishWrittenColumn {
                get {
                    return this.columnenglishWritten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn englishSpokenColumn {
                get {
                    return this.columnenglishSpoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chineseWrittenColumn {
                get {
                    return this.columnchineseWritten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chineseSpokenColumn {
                get {
                    return this.columnchineseSpoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherLanguageColumn {
                get {
                    return this.columnotherLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherLanguageWrittenColumn {
                get {
                    return this.columnotherLanguageWritten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherLanguageSpokenColumn {
                get {
                    return this.columnotherLanguageSpoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driverlicenceColumn {
                get {
                    return this.columndriverlicence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration1Column {
                get {
                    return this.columndeclaration1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration2Column {
                get {
                    return this.columndeclaration2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration3Column {
                get {
                    return this.columndeclaration3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration4Column {
                get {
                    return this.columndeclaration4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration5Column {
                get {
                    return this.columndeclaration5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration6Column {
                get {
                    return this.columndeclaration6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn declaration6remarkColumn {
                get {
                    return this.columndeclaration6remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn giroReasonColumn {
                get {
                    return this.columngiroReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appliFormSigLocColumn {
                get {
                    return this.columnappliFormSigLoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactHouseColumn {
                get {
                    return this.columncontactHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commencedateColumn {
                get {
                    return this.columncommencedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn homecontactnoColumn {
                get {
                    return this.columnhomecontactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTimeFromColumn {
                get {
                    return this.columnMonToFriTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTimeToColumn {
                get {
                    return this.columnMonToFriTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriLunchHrColumn {
                get {
                    return this.columnMonToFriLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonToFriTeaBrkHrColumn {
                get {
                    return this.columnMonToFriTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTimeFromColumn {
                get {
                    return this.columnSatTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTimeToColumn {
                get {
                    return this.columnSatTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatLunchHrColumn {
                get {
                    return this.columnSatLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatTeaBrkHrColumn {
                get {
                    return this.columnSatTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTimeFromColumn {
                get {
                    return this.columnSunTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTimeToColumn {
                get {
                    return this.columnSunTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunLunchHrColumn {
                get {
                    return this.columnSunLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SunTeaBrkHrColumn {
                get {
                    return this.columnSunTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegularOffDayColumn {
                get {
                    return this.columnRegularOffDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTimeFromColumn {
                get {
                    return this.columnPHTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTimeToColumn {
                get {
                    return this.columnPHTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHLunchHrColumn {
                get {
                    return this.columnPHLunchHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHTeaBrkHrColumn {
                get {
                    return this.columnPHTeaBrkHr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jobgroupColumn {
                get {
                    return this.columnjobgroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecommSigLocColumn {
                get {
                    return this.columnRecommSigLoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow this[int index] {
                get {
                    return ((HEMPHRow)(this.Rows[index]));
                }
            }
            
            public event HEMPHRowChangeEventHandler HEMPHRowChanging;
            
            public event HEMPHRowChangeEventHandler HEMPHRowChanged;
            
            public event HEMPHRowChangeEventHandler HEMPHRowDeleting;
            
            public event HEMPHRowChangeEventHandler HEMPHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHEMPHRow(HEMPHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow AddHEMPHRow(
                        long ID, 
                        string refnum, 
                        string empnum, 
                        string nric, 
                        string empname1, 
                        string gender, 
                        string nationality, 
                        string maritalstatus, 
                        string ethnicity, 
                        System.DateTime dob, 
                        string bloodtype, 
                        string etype, 
                        string statusid, 
                        string sectorcode, 
                        System.DateTime dateconfirmed, 
                        System.DateTime dateresigned, 
                        string bankacc, 
                        decimal basicsal, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string createdby, 
                        System.DateTime nextapprdate, 
                        string remark, 
                        string contact, 
                        string empname, 
                        string designation, 
                        string cardid, 
                        string recrempnum, 
                        string hsgcode, 
                        byte[] photo, 
                        string religion, 
                        string force, 
                        string rank, 
                        string vocation, 
                        string yearserved, 
                        string padd1, 
                        string padd2, 
                        string padd3, 
                        string ppostal, 
                        string cadd1, 
                        string cadd2, 
                        string cadd3, 
                        string cpostal, 
                        bool isNSmandatory, 
                        string statuscode, 
                        System.DateTime datejoined, 
                        string hramnum, 
                        string regname, 
                        bool isHQstaff, 
                        System.DateTime confirmationdate, 
                        bool isretired, 
                        System.DateTime contractend, 
                        string sitnumi, 
                        string paytypecode, 
                        string matnum, 
                        string matname, 
                        decimal daysperweek, 
                        string hramdesc, 
                        bool isblacklisted, 
                        string BldgBlock, 
                        string LevelNo, 
                        string UnitNo, 
                        string StreetName, 
                        string CountryAddress, 
                        string BankCode, 
                        string BranchCode, 
                        string ForeignAddress, 
                        string bankname, 
                        string COUNTRY, 
                        string agencyfund, 
                        System.DateTime datePR, 
                        string postal, 
                        string pcountry, 
                        string pmcode, 
                        string emptype, 
                        string photourl, 
                        string sitenum, 
                        byte[] contractdoc, 
                        string contractloc, 
                        bool contractsigned, 
                        string signaturepicloc, 
                        string interviewedby, 
                        bool isWebAdd, 
                        string webguid, 
                        string modifiedby, 
                        string contactno, 
                        bool isApproved, 
                        System.DateTime approvedate, 
                        string approveby, 
                        string approvename, 
                        string approvestatus, 
                        System.DateTime dateapplied, 
                        bool englishWritten, 
                        int englishSpoken, 
                        int chineseWritten, 
                        int chineseSpoken, 
                        string otherLanguage, 
                        int otherLanguageWritten, 
                        int otherLanguageSpoken, 
                        string driverlicence, 
                        bool declaration1, 
                        bool declaration2, 
                        bool declaration3, 
                        bool declaration4, 
                        bool declaration5, 
                        bool declaration6, 
                        string declaration6remark, 
                        string giroReason, 
                        string appliFormSigLoc, 
                        string contactHouse, 
                        System.DateTime commencedate, 
                        string homecontactno, 
                        string MonToFriTimeFrom, 
                        string MonToFriTimeTo, 
                        decimal MonToFriLunchHr, 
                        decimal MonToFriTeaBrkHr, 
                        string SatTimeFrom, 
                        string SatTimeTo, 
                        decimal SatLunchHr, 
                        decimal SatTeaBrkHr, 
                        string SunTimeFrom, 
                        string SunTimeTo, 
                        decimal SunLunchHr, 
                        decimal SunTeaBrkHr, 
                        string RegularOffDay, 
                        string PHTimeFrom, 
                        string PHTimeTo, 
                        decimal PHLunchHr, 
                        decimal PHTeaBrkHr, 
                        string jobgroup, 
                        string RecommSigLoc) {
                HEMPHRow rowHEMPHRow = ((HEMPHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        empnum,
                        nric,
                        empname1,
                        gender,
                        nationality,
                        maritalstatus,
                        ethnicity,
                        dob,
                        bloodtype,
                        etype,
                        statusid,
                        sectorcode,
                        dateconfirmed,
                        dateresigned,
                        bankacc,
                        basicsal,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        createdby,
                        nextapprdate,
                        remark,
                        contact,
                        empname,
                        designation,
                        cardid,
                        recrempnum,
                        hsgcode,
                        photo,
                        religion,
                        force,
                        rank,
                        vocation,
                        yearserved,
                        padd1,
                        padd2,
                        padd3,
                        ppostal,
                        cadd1,
                        cadd2,
                        cadd3,
                        cpostal,
                        isNSmandatory,
                        statuscode,
                        datejoined,
                        hramnum,
                        regname,
                        isHQstaff,
                        confirmationdate,
                        isretired,
                        contractend,
                        sitnumi,
                        paytypecode,
                        matnum,
                        matname,
                        daysperweek,
                        hramdesc,
                        isblacklisted,
                        BldgBlock,
                        LevelNo,
                        UnitNo,
                        StreetName,
                        CountryAddress,
                        BankCode,
                        BranchCode,
                        ForeignAddress,
                        bankname,
                        COUNTRY,
                        agencyfund,
                        datePR,
                        postal,
                        pcountry,
                        pmcode,
                        emptype,
                        photourl,
                        sitenum,
                        contractdoc,
                        contractloc,
                        contractsigned,
                        signaturepicloc,
                        interviewedby,
                        isWebAdd,
                        webguid,
                        modifiedby,
                        contactno,
                        isApproved,
                        approvedate,
                        approveby,
                        approvename,
                        approvestatus,
                        dateapplied,
                        englishWritten,
                        englishSpoken,
                        chineseWritten,
                        chineseSpoken,
                        otherLanguage,
                        otherLanguageWritten,
                        otherLanguageSpoken,
                        driverlicence,
                        declaration1,
                        declaration2,
                        declaration3,
                        declaration4,
                        declaration5,
                        declaration6,
                        declaration6remark,
                        giroReason,
                        appliFormSigLoc,
                        contactHouse,
                        commencedate,
                        homecontactno,
                        MonToFriTimeFrom,
                        MonToFriTimeTo,
                        MonToFriLunchHr,
                        MonToFriTeaBrkHr,
                        SatTimeFrom,
                        SatTimeTo,
                        SatLunchHr,
                        SatTeaBrkHr,
                        SunTimeFrom,
                        SunTimeTo,
                        SunLunchHr,
                        SunTeaBrkHr,
                        RegularOffDay,
                        PHTimeFrom,
                        PHTimeTo,
                        PHLunchHr,
                        PHTeaBrkHr,
                        jobgroup,
                        RecommSigLoc};
                rowHEMPHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHEMPHRow);
                return rowHEMPHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HEMPHDataTable cln = ((HEMPHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HEMPHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnnric = base.Columns["nric"];
                this.columnempname1 = base.Columns["empname1"];
                this.columngender = base.Columns["gender"];
                this.columnnationality = base.Columns["nationality"];
                this.columnmaritalstatus = base.Columns["maritalstatus"];
                this.columnethnicity = base.Columns["ethnicity"];
                this.columndob = base.Columns["dob"];
                this.columnbloodtype = base.Columns["bloodtype"];
                this.columnetype = base.Columns["etype"];
                this.columnstatusid = base.Columns["statusid"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columndateconfirmed = base.Columns["dateconfirmed"];
                this.columndateresigned = base.Columns["dateresigned"];
                this.columnbankacc = base.Columns["bankacc"];
                this.columnbasicsal = base.Columns["basicsal"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnnextapprdate = base.Columns["nextapprdate"];
                this.columnremark = base.Columns["remark"];
                this.columncontact = base.Columns["contact"];
                this.columnempname = base.Columns["empname"];
                this.columndesignation = base.Columns["designation"];
                this.columncardid = base.Columns["cardid"];
                this.columnrecrempnum = base.Columns["recrempnum"];
                this.columnhsgcode = base.Columns["hsgcode"];
                this.columnphoto = base.Columns["photo"];
                this.columnreligion = base.Columns["religion"];
                this.columnforce = base.Columns["force"];
                this.columnrank = base.Columns["rank"];
                this.columnvocation = base.Columns["vocation"];
                this.columnyearserved = base.Columns["yearserved"];
                this.columnpadd1 = base.Columns["padd1"];
                this.columnpadd2 = base.Columns["padd2"];
                this.columnpadd3 = base.Columns["padd3"];
                this.columnppostal = base.Columns["ppostal"];
                this.columncadd1 = base.Columns["cadd1"];
                this.columncadd2 = base.Columns["cadd2"];
                this.columncadd3 = base.Columns["cadd3"];
                this.columncpostal = base.Columns["cpostal"];
                this.columnisNSmandatory = base.Columns["isNSmandatory"];
                this.columnstatuscode = base.Columns["statuscode"];
                this.columndatejoined = base.Columns["datejoined"];
                this.columnhramnum = base.Columns["hramnum"];
                this.columnregname = base.Columns["regname"];
                this.columnisHQstaff = base.Columns["isHQstaff"];
                this.columnconfirmationdate = base.Columns["confirmationdate"];
                this.columnisretired = base.Columns["isretired"];
                this.columncontractend = base.Columns["contractend"];
                this.columnsitnumi = base.Columns["sitnumi"];
                this.columnpaytypecode = base.Columns["paytypecode"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columndaysperweek = base.Columns["daysperweek"];
                this.columnhramdesc = base.Columns["hramdesc"];
                this.columnisblacklisted = base.Columns["isblacklisted"];
                this.columnBldgBlock = base.Columns["BldgBlock"];
                this.columnLevelNo = base.Columns["LevelNo"];
                this.columnUnitNo = base.Columns["UnitNo"];
                this.columnStreetName = base.Columns["StreetName"];
                this.columnCountryAddress = base.Columns["CountryAddress"];
                this.columnBankCode = base.Columns["BankCode"];
                this.columnBranchCode = base.Columns["BranchCode"];
                this.columnForeignAddress = base.Columns["ForeignAddress"];
                this.columnbankname = base.Columns["bankname"];
                this.columnCOUNTRY = base.Columns["COUNTRY"];
                this.columnagencyfund = base.Columns["agencyfund"];
                this.columndatePR = base.Columns["datePR"];
                this.columnpostal = base.Columns["postal"];
                this.columnpcountry = base.Columns["pcountry"];
                this.columnpmcode = base.Columns["pmcode"];
                this.columnemptype = base.Columns["emptype"];
                this.columnphotourl = base.Columns["photourl"];
                this.columnsitenum = base.Columns["sitenum"];
                this.columncontractdoc = base.Columns["contractdoc"];
                this.columncontractloc = base.Columns["contractloc"];
                this.columncontractsigned = base.Columns["contractsigned"];
                this.columnsignaturepicloc = base.Columns["signaturepicloc"];
                this.columninterviewedby = base.Columns["interviewedby"];
                this.columnisWebAdd = base.Columns["isWebAdd"];
                this.columnwebguid = base.Columns["webguid"];
                this.columnmodifiedby = base.Columns["modifiedby"];
                this.columncontactno = base.Columns["contactno"];
                this.columnisApproved = base.Columns["isApproved"];
                this.columnapprovedate = base.Columns["approvedate"];
                this.columnapproveby = base.Columns["approveby"];
                this.columnapprovename = base.Columns["approvename"];
                this.columnapprovestatus = base.Columns["approvestatus"];
                this.columndateapplied = base.Columns["dateapplied"];
                this.columnenglishWritten = base.Columns["englishWritten"];
                this.columnenglishSpoken = base.Columns["englishSpoken"];
                this.columnchineseWritten = base.Columns["chineseWritten"];
                this.columnchineseSpoken = base.Columns["chineseSpoken"];
                this.columnotherLanguage = base.Columns["otherLanguage"];
                this.columnotherLanguageWritten = base.Columns["otherLanguageWritten"];
                this.columnotherLanguageSpoken = base.Columns["otherLanguageSpoken"];
                this.columndriverlicence = base.Columns["driverlicence"];
                this.columndeclaration1 = base.Columns["declaration1"];
                this.columndeclaration2 = base.Columns["declaration2"];
                this.columndeclaration3 = base.Columns["declaration3"];
                this.columndeclaration4 = base.Columns["declaration4"];
                this.columndeclaration5 = base.Columns["declaration5"];
                this.columndeclaration6 = base.Columns["declaration6"];
                this.columndeclaration6remark = base.Columns["declaration6remark"];
                this.columngiroReason = base.Columns["giroReason"];
                this.columnappliFormSigLoc = base.Columns["appliFormSigLoc"];
                this.columncontactHouse = base.Columns["contactHouse"];
                this.columncommencedate = base.Columns["commencedate"];
                this.columnhomecontactno = base.Columns["homecontactno"];
                this.columnMonToFriTimeFrom = base.Columns["MonToFriTimeFrom"];
                this.columnMonToFriTimeTo = base.Columns["MonToFriTimeTo"];
                this.columnMonToFriLunchHr = base.Columns["MonToFriLunchHr"];
                this.columnMonToFriTeaBrkHr = base.Columns["MonToFriTeaBrkHr"];
                this.columnSatTimeFrom = base.Columns["SatTimeFrom"];
                this.columnSatTimeTo = base.Columns["SatTimeTo"];
                this.columnSatLunchHr = base.Columns["SatLunchHr"];
                this.columnSatTeaBrkHr = base.Columns["SatTeaBrkHr"];
                this.columnSunTimeFrom = base.Columns["SunTimeFrom"];
                this.columnSunTimeTo = base.Columns["SunTimeTo"];
                this.columnSunLunchHr = base.Columns["SunLunchHr"];
                this.columnSunTeaBrkHr = base.Columns["SunTeaBrkHr"];
                this.columnRegularOffDay = base.Columns["RegularOffDay"];
                this.columnPHTimeFrom = base.Columns["PHTimeFrom"];
                this.columnPHTimeTo = base.Columns["PHTimeTo"];
                this.columnPHLunchHr = base.Columns["PHLunchHr"];
                this.columnPHTeaBrkHr = base.Columns["PHTeaBrkHr"];
                this.columnjobgroup = base.Columns["jobgroup"];
                this.columnRecommSigLoc = base.Columns["RecommSigLoc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnempname1 = new global::System.Data.DataColumn("empname1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname1);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnnationality = new global::System.Data.DataColumn("nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnationality);
                this.columnmaritalstatus = new global::System.Data.DataColumn("maritalstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalstatus);
                this.columnethnicity = new global::System.Data.DataColumn("ethnicity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnethnicity);
                this.columndob = new global::System.Data.DataColumn("dob", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndob);
                this.columnbloodtype = new global::System.Data.DataColumn("bloodtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloodtype);
                this.columnetype = new global::System.Data.DataColumn("etype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnetype);
                this.columnstatusid = new global::System.Data.DataColumn("statusid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatusid);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columndateconfirmed = new global::System.Data.DataColumn("dateconfirmed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateconfirmed);
                this.columndateresigned = new global::System.Data.DataColumn("dateresigned", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateresigned);
                this.columnbankacc = new global::System.Data.DataColumn("bankacc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankacc);
                this.columnbasicsal = new global::System.Data.DataColumn("basicsal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbasicsal);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnnextapprdate = new global::System.Data.DataColumn("nextapprdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnextapprdate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnempname = new global::System.Data.DataColumn("empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columncardid = new global::System.Data.DataColumn("cardid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncardid);
                this.columnrecrempnum = new global::System.Data.DataColumn("recrempnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecrempnum);
                this.columnhsgcode = new global::System.Data.DataColumn("hsgcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhsgcode);
                this.columnphoto = new global::System.Data.DataColumn("photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto);
                this.columnreligion = new global::System.Data.DataColumn("religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreligion);
                this.columnforce = new global::System.Data.DataColumn("force", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforce);
                this.columnrank = new global::System.Data.DataColumn("rank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrank);
                this.columnvocation = new global::System.Data.DataColumn("vocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvocation);
                this.columnyearserved = new global::System.Data.DataColumn("yearserved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearserved);
                this.columnpadd1 = new global::System.Data.DataColumn("padd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd1);
                this.columnpadd2 = new global::System.Data.DataColumn("padd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd2);
                this.columnpadd3 = new global::System.Data.DataColumn("padd3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd3);
                this.columnppostal = new global::System.Data.DataColumn("ppostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppostal);
                this.columncadd1 = new global::System.Data.DataColumn("cadd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd1);
                this.columncadd2 = new global::System.Data.DataColumn("cadd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd2);
                this.columncadd3 = new global::System.Data.DataColumn("cadd3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd3);
                this.columncpostal = new global::System.Data.DataColumn("cpostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpostal);
                this.columnisNSmandatory = new global::System.Data.DataColumn("isNSmandatory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisNSmandatory);
                this.columnstatuscode = new global::System.Data.DataColumn("statuscode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatuscode);
                this.columndatejoined = new global::System.Data.DataColumn("datejoined", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatejoined);
                this.columnhramnum = new global::System.Data.DataColumn("hramnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramnum);
                this.columnregname = new global::System.Data.DataColumn("regname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregname);
                this.columnisHQstaff = new global::System.Data.DataColumn("isHQstaff", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHQstaff);
                this.columnconfirmationdate = new global::System.Data.DataColumn("confirmationdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmationdate);
                this.columnisretired = new global::System.Data.DataColumn("isretired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisretired);
                this.columncontractend = new global::System.Data.DataColumn("contractend", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractend);
                this.columnsitnumi = new global::System.Data.DataColumn("sitnumi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitnumi);
                this.columnpaytypecode = new global::System.Data.DataColumn("paytypecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaytypecode);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columndaysperweek = new global::System.Data.DataColumn("daysperweek", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaysperweek);
                this.columnhramdesc = new global::System.Data.DataColumn("hramdesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramdesc);
                this.columnisblacklisted = new global::System.Data.DataColumn("isblacklisted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisblacklisted);
                this.columnBldgBlock = new global::System.Data.DataColumn("BldgBlock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBldgBlock);
                this.columnLevelNo = new global::System.Data.DataColumn("LevelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevelNo);
                this.columnUnitNo = new global::System.Data.DataColumn("UnitNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNo);
                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetName);
                this.columnCountryAddress = new global::System.Data.DataColumn("CountryAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryAddress);
                this.columnBankCode = new global::System.Data.DataColumn("BankCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCode);
                this.columnBranchCode = new global::System.Data.DataColumn("BranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCode);
                this.columnForeignAddress = new global::System.Data.DataColumn("ForeignAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignAddress);
                this.columnbankname = new global::System.Data.DataColumn("bankname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankname);
                this.columnCOUNTRY = new global::System.Data.DataColumn("COUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTRY);
                this.columnagencyfund = new global::System.Data.DataColumn("agencyfund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagencyfund);
                this.columndatePR = new global::System.Data.DataColumn("datePR", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatePR);
                this.columnpostal = new global::System.Data.DataColumn("postal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostal);
                this.columnpcountry = new global::System.Data.DataColumn("pcountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcountry);
                this.columnpmcode = new global::System.Data.DataColumn("pmcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpmcode);
                this.columnemptype = new global::System.Data.DataColumn("emptype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemptype);
                this.columnphotourl = new global::System.Data.DataColumn("photourl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphotourl);
                this.columnsitenum = new global::System.Data.DataColumn("sitenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitenum);
                this.columncontractdoc = new global::System.Data.DataColumn("contractdoc", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractdoc);
                this.columncontractloc = new global::System.Data.DataColumn("contractloc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractloc);
                this.columncontractsigned = new global::System.Data.DataColumn("contractsigned", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractsigned);
                this.columnsignaturepicloc = new global::System.Data.DataColumn("signaturepicloc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsignaturepicloc);
                this.columninterviewedby = new global::System.Data.DataColumn("interviewedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninterviewedby);
                this.columnisWebAdd = new global::System.Data.DataColumn("isWebAdd", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisWebAdd);
                this.columnwebguid = new global::System.Data.DataColumn("webguid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwebguid);
                this.columnmodifiedby = new global::System.Data.DataColumn("modifiedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedby);
                this.columncontactno = new global::System.Data.DataColumn("contactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactno);
                this.columnisApproved = new global::System.Data.DataColumn("isApproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisApproved);
                this.columnapprovedate = new global::System.Data.DataColumn("approvedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovedate);
                this.columnapproveby = new global::System.Data.DataColumn("approveby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapproveby);
                this.columnapprovename = new global::System.Data.DataColumn("approvename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovename);
                this.columnapprovestatus = new global::System.Data.DataColumn("approvestatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovestatus);
                this.columndateapplied = new global::System.Data.DataColumn("dateapplied", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateapplied);
                this.columnenglishWritten = new global::System.Data.DataColumn("englishWritten", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenglishWritten);
                this.columnenglishSpoken = new global::System.Data.DataColumn("englishSpoken", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenglishSpoken);
                this.columnchineseWritten = new global::System.Data.DataColumn("chineseWritten", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchineseWritten);
                this.columnchineseSpoken = new global::System.Data.DataColumn("chineseSpoken", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchineseSpoken);
                this.columnotherLanguage = new global::System.Data.DataColumn("otherLanguage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherLanguage);
                this.columnotherLanguageWritten = new global::System.Data.DataColumn("otherLanguageWritten", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherLanguageWritten);
                this.columnotherLanguageSpoken = new global::System.Data.DataColumn("otherLanguageSpoken", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherLanguageSpoken);
                this.columndriverlicence = new global::System.Data.DataColumn("driverlicence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriverlicence);
                this.columndeclaration1 = new global::System.Data.DataColumn("declaration1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration1);
                this.columndeclaration2 = new global::System.Data.DataColumn("declaration2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration2);
                this.columndeclaration3 = new global::System.Data.DataColumn("declaration3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration3);
                this.columndeclaration4 = new global::System.Data.DataColumn("declaration4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration4);
                this.columndeclaration5 = new global::System.Data.DataColumn("declaration5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration5);
                this.columndeclaration6 = new global::System.Data.DataColumn("declaration6", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration6);
                this.columndeclaration6remark = new global::System.Data.DataColumn("declaration6remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeclaration6remark);
                this.columngiroReason = new global::System.Data.DataColumn("giroReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngiroReason);
                this.columnappliFormSigLoc = new global::System.Data.DataColumn("appliFormSigLoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappliFormSigLoc);
                this.columncontactHouse = new global::System.Data.DataColumn("contactHouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactHouse);
                this.columncommencedate = new global::System.Data.DataColumn("commencedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommencedate);
                this.columnhomecontactno = new global::System.Data.DataColumn("homecontactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhomecontactno);
                this.columnMonToFriTimeFrom = new global::System.Data.DataColumn("MonToFriTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTimeFrom);
                this.columnMonToFriTimeTo = new global::System.Data.DataColumn("MonToFriTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTimeTo);
                this.columnMonToFriLunchHr = new global::System.Data.DataColumn("MonToFriLunchHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriLunchHr);
                this.columnMonToFriTeaBrkHr = new global::System.Data.DataColumn("MonToFriTeaBrkHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonToFriTeaBrkHr);
                this.columnSatTimeFrom = new global::System.Data.DataColumn("SatTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTimeFrom);
                this.columnSatTimeTo = new global::System.Data.DataColumn("SatTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTimeTo);
                this.columnSatLunchHr = new global::System.Data.DataColumn("SatLunchHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatLunchHr);
                this.columnSatTeaBrkHr = new global::System.Data.DataColumn("SatTeaBrkHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatTeaBrkHr);
                this.columnSunTimeFrom = new global::System.Data.DataColumn("SunTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTimeFrom);
                this.columnSunTimeTo = new global::System.Data.DataColumn("SunTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTimeTo);
                this.columnSunLunchHr = new global::System.Data.DataColumn("SunLunchHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunLunchHr);
                this.columnSunTeaBrkHr = new global::System.Data.DataColumn("SunTeaBrkHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunTeaBrkHr);
                this.columnRegularOffDay = new global::System.Data.DataColumn("RegularOffDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegularOffDay);
                this.columnPHTimeFrom = new global::System.Data.DataColumn("PHTimeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTimeFrom);
                this.columnPHTimeTo = new global::System.Data.DataColumn("PHTimeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTimeTo);
                this.columnPHLunchHr = new global::System.Data.DataColumn("PHLunchHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHLunchHr);
                this.columnPHTeaBrkHr = new global::System.Data.DataColumn("PHTeaBrkHr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHTeaBrkHr);
                this.columnjobgroup = new global::System.Data.DataColumn("jobgroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjobgroup);
                this.columnRecommSigLoc = new global::System.Data.DataColumn("RecommSigLoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommSigLoc);
                this.columnrefnum.MaxLength = 120;
                this.columnempnum.MaxLength = 120;
                this.columnnric.MaxLength = 120;
                this.columnempname1.MaxLength = 100;
                this.columngender.MaxLength = 10;
                this.columnnationality.MaxLength = 50;
                this.columnmaritalstatus.MaxLength = 50;
                this.columnethnicity.MaxLength = 50;
                this.columnbloodtype.MaxLength = 5;
                this.columnetype.MaxLength = 10;
                this.columnstatusid.MaxLength = 20;
                this.columnsectorcode.MaxLength = 30;
                this.columnbankacc.MaxLength = 30;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncreatedby.MaxLength = 50;
                this.columnremark.MaxLength = 1150;
                this.columncontact.MaxLength = 120;
                this.columnempname.MaxLength = 1100;
                this.columndesignation.MaxLength = 125;
                this.columncardid.MaxLength = 25;
                this.columnrecrempnum.MaxLength = 20;
                this.columnhsgcode.MaxLength = 20;
                this.columnreligion.MaxLength = 50;
                this.columnforce.MaxLength = 50;
                this.columnrank.MaxLength = 50;
                this.columnvocation.MaxLength = 50;
                this.columnyearserved.MaxLength = 10;
                this.columnpadd1.MaxLength = 100;
                this.columnpadd2.MaxLength = 100;
                this.columnpadd3.MaxLength = 100;
                this.columnppostal.MaxLength = 25;
                this.columncadd1.MaxLength = 100;
                this.columncadd2.MaxLength = 100;
                this.columncadd3.MaxLength = 100;
                this.columncpostal.MaxLength = 25;
                this.columnstatuscode.MaxLength = 30;
                this.columnhramnum.MaxLength = 30;
                this.columnregname.MaxLength = 30;
                this.columnsitnumi.MaxLength = 30;
                this.columnpaytypecode.MaxLength = 30;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
                this.columnhramdesc.MaxLength = 30;
                this.columnBldgBlock.MaxLength = 10;
                this.columnLevelNo.MaxLength = 10;
                this.columnUnitNo.MaxLength = 10;
                this.columnStreetName.MaxLength = 100;
                this.columnCountryAddress.MaxLength = 100;
                this.columnBankCode.MaxLength = 100;
                this.columnBranchCode.MaxLength = 100;
                this.columnForeignAddress.MaxLength = 100;
                this.columnbankname.MaxLength = 50;
                this.columnCOUNTRY.MaxLength = 50;
                this.columnagencyfund.MaxLength = 10;
                this.columnpostal.MaxLength = 20;
                this.columnpcountry.MaxLength = 30;
                this.columnpmcode.MaxLength = 20;
                this.columnemptype.MaxLength = 20;
                this.columnphotourl.MaxLength = 150;
                this.columnsitenum.MaxLength = 120;
                this.columncontractloc.MaxLength = 100;
                this.columnsignaturepicloc.MaxLength = 200;
                this.columninterviewedby.MaxLength = 100;
                this.columnwebguid.MaxLength = 32;
                this.columnmodifiedby.MaxLength = 50;
                this.columncontactno.MaxLength = 200;
                this.columnapproveby.MaxLength = 20;
                this.columnapprovename.MaxLength = 20;
                this.columnapprovestatus.MaxLength = 20;
                this.columnotherLanguage.MaxLength = 50;
                this.columndriverlicence.MaxLength = 20;
                this.columndeclaration6remark.MaxLength = 250;
                this.columngiroReason.MaxLength = 250;
                this.columnappliFormSigLoc.MaxLength = 500;
                this.columncontactHouse.MaxLength = 50;
                this.columnhomecontactno.MaxLength = 200;
                this.columnMonToFriTimeFrom.MaxLength = 4;
                this.columnMonToFriTimeTo.MaxLength = 4;
                this.columnSatTimeFrom.MaxLength = 4;
                this.columnSatTimeTo.MaxLength = 4;
                this.columnSunTimeFrom.MaxLength = 4;
                this.columnSunTimeTo.MaxLength = 4;
                this.columnRegularOffDay.MaxLength = 50;
                this.columnPHTimeFrom.MaxLength = 4;
                this.columnPHTimeTo.MaxLength = 4;
                this.columnjobgroup.MaxLength = 50;
                this.columnRecommSigLoc.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow NewHEMPHRow() {
                return ((HEMPHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HEMPHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HEMPHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HEMPHRowChanged != null)) {
                    this.HEMPHRowChanged(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HEMPHRowChanging != null)) {
                    this.HEMPHRowChanging(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HEMPHRowDeleted != null)) {
                    this.HEMPHRowDeleted(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HEMPHRowDeleting != null)) {
                    this.HEMPHRowDeleting(this, new HEMPHRowChangeEvent(((HEMPHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHEMPHRow(HEMPHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HEMPHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FAMRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnrelationship;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnfnric;
            
            private global::System.Data.DataColumn columnfbirthcertificate;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnoccupation;
            
            private global::System.Data.DataColumn columncompany;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRDataTable() {
                this.TableName = "FAMR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAMRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FAMRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn relationshipColumn {
                get {
                    return this.columnrelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fnricColumn {
                get {
                    return this.columnfnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbirthcertificateColumn {
                get {
                    return this.columnfbirthcertificate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn occupationColumn {
                get {
                    return this.columnoccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyColumn {
                get {
                    return this.columncompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow this[int index] {
                get {
                    return ((FAMRRow)(this.Rows[index]));
                }
            }
            
            public event FAMRRowChangeEventHandler FAMRRowChanging;
            
            public event FAMRRowChangeEventHandler FAMRRowChanged;
            
            public event FAMRRowChangeEventHandler FAMRRowDeleting;
            
            public event FAMRRowChangeEventHandler FAMRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFAMRRow(FAMRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow AddFAMRRow(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string name, 
                        string relationship, 
                        string gender, 
                        string remark, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string contact, 
                        string fnric, 
                        string fbirthcertificate, 
                        int age, 
                        string occupation, 
                        string company) {
                FAMRRow rowFAMRRow = ((FAMRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        name,
                        relationship,
                        gender,
                        remark,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        contact,
                        fnric,
                        fbirthcertificate,
                        age,
                        occupation,
                        company};
                rowFAMRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFAMRRow);
                return rowFAMRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow FindByID(long ID) {
                return ((FAMRRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FAMRDataTable cln = ((FAMRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FAMRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnname = base.Columns["name"];
                this.columnrelationship = base.Columns["relationship"];
                this.columngender = base.Columns["gender"];
                this.columnremark = base.Columns["remark"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncontact = base.Columns["contact"];
                this.columnfnric = base.Columns["fnric"];
                this.columnfbirthcertificate = base.Columns["fbirthcertificate"];
                this.columnage = base.Columns["age"];
                this.columnoccupation = base.Columns["occupation"];
                this.columncompany = base.Columns["company"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnrelationship = new global::System.Data.DataColumn("relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelationship);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnfnric = new global::System.Data.DataColumn("fnric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfnric);
                this.columnfbirthcertificate = new global::System.Data.DataColumn("fbirthcertificate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbirthcertificate);
                this.columnage = new global::System.Data.DataColumn("age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnoccupation = new global::System.Data.DataColumn("occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation);
                this.columncompany = new global::System.Data.DataColumn("company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnname.MaxLength = 50;
                this.columnrelationship.MaxLength = 20;
                this.columngender.MaxLength = 1;
                this.columnremark.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columncontact.MaxLength = 20;
                this.columnfnric.MaxLength = 50;
                this.columnfbirthcertificate.MaxLength = 50;
                this.columnoccupation.MaxLength = 50;
                this.columncompany.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow NewFAMRRow() {
                return ((FAMRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FAMRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FAMRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FAMRRowChanged != null)) {
                    this.FAMRRowChanged(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FAMRRowChanging != null)) {
                    this.FAMRRowChanging(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FAMRRowDeleted != null)) {
                    this.FAMRRowDeleted(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FAMRRowDeleting != null)) {
                    this.FAMRRowDeleting(this, new FAMRRowChangeEvent(((FAMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFAMRRow(FAMRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FAMRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FAMR1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnrelationship;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncontact;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMR1DataTable() {
                this.TableName = "FAMR1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAMR1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FAMR1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn relationshipColumn {
                get {
                    return this.columnrelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMR1Row this[int index] {
                get {
                    return ((FAMR1Row)(this.Rows[index]));
                }
            }
            
            public event FAMR1RowChangeEventHandler FAMR1RowChanging;
            
            public event FAMR1RowChangeEventHandler FAMR1RowChanged;
            
            public event FAMR1RowChangeEventHandler FAMR1RowDeleting;
            
            public event FAMR1RowChangeEventHandler FAMR1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFAMR1Row(FAMR1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMR1Row AddFAMR1Row(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string name, 
                        string relationship, 
                        string gender, 
                        string remark, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string contact) {
                FAMR1Row rowFAMR1Row = ((FAMR1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        name,
                        relationship,
                        gender,
                        remark,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        contact};
                rowFAMR1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowFAMR1Row);
                return rowFAMR1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMR1Row FindByID(long ID) {
                return ((FAMR1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FAMR1DataTable cln = ((FAMR1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FAMR1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnname = base.Columns["name"];
                this.columnrelationship = base.Columns["relationship"];
                this.columngender = base.Columns["gender"];
                this.columnremark = base.Columns["remark"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncontact = base.Columns["contact"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnrelationship = new global::System.Data.DataColumn("relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelationship);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnname.MaxLength = 50;
                this.columnrelationship.MaxLength = 20;
                this.columngender.MaxLength = 1;
                this.columnremark.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columncontact.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMR1Row NewFAMR1Row() {
                return ((FAMR1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FAMR1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FAMR1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FAMR1RowChanged != null)) {
                    this.FAMR1RowChanged(this, new FAMR1RowChangeEvent(((FAMR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FAMR1RowChanging != null)) {
                    this.FAMR1RowChanging(this, new FAMR1RowChangeEvent(((FAMR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FAMR1RowDeleted != null)) {
                    this.FAMR1RowDeleted(this, new FAMR1RowChangeEvent(((FAMR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FAMR1RowDeleting != null)) {
                    this.FAMR1RowDeleting(this, new FAMR1RowChangeEvent(((FAMR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFAMR1Row(FAMR1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FAMR1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HCNR1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columncontactno;
            
            private global::System.Data.DataColumn columncontype;
            
            private global::System.Data.DataColumn columnisactive;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HCNR1DataTable() {
                this.TableName = "HCNR1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HCNR1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HCNR1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactnoColumn {
                get {
                    return this.columncontactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contypeColumn {
                get {
                    return this.columncontype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isactiveColumn {
                get {
                    return this.columnisactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HCNR1Row this[int index] {
                get {
                    return ((HCNR1Row)(this.Rows[index]));
                }
            }
            
            public event HCNR1RowChangeEventHandler HCNR1RowChanging;
            
            public event HCNR1RowChangeEventHandler HCNR1RowChanged;
            
            public event HCNR1RowChangeEventHandler HCNR1RowDeleting;
            
            public event HCNR1RowChangeEventHandler HCNR1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHCNR1Row(HCNR1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HCNR1Row AddHCNR1Row(long ID, string nric, string refnum, string empnum, string contactno, string contype, bool isactive, string user, string flag, string status, System.DateTime created, System.DateTime modified, string guid, string createdby) {
                HCNR1Row rowHCNR1Row = ((HCNR1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        contactno,
                        contype,
                        isactive,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby};
                rowHCNR1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowHCNR1Row);
                return rowHCNR1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HCNR1DataTable cln = ((HCNR1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HCNR1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columncontactno = base.Columns["contactno"];
                this.columncontype = base.Columns["contype"];
                this.columnisactive = base.Columns["isactive"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columncontactno = new global::System.Data.DataColumn("contactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactno);
                this.columncontype = new global::System.Data.DataColumn("contype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontype);
                this.columnisactive = new global::System.Data.DataColumn("isactive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisactive);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnID.AllowDBNull = false;
                this.columnnric.AllowDBNull = false;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columncontactno.MaxLength = 20;
                this.columncontype.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HCNR1Row NewHCNR1Row() {
                return ((HCNR1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HCNR1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HCNR1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HCNR1RowChanged != null)) {
                    this.HCNR1RowChanged(this, new HCNR1RowChangeEvent(((HCNR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HCNR1RowChanging != null)) {
                    this.HCNR1RowChanging(this, new HCNR1RowChangeEvent(((HCNR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HCNR1RowDeleted != null)) {
                    this.HCNR1RowDeleted(this, new HCNR1RowChangeEvent(((HCNR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HCNR1RowDeleting != null)) {
                    this.HCNR1RowDeleting(this, new HCNR1RowChangeEvent(((HCNR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHCNR1Row(HCNR1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HCNR1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PFMEDU1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columncoursedesc;
            
            private global::System.Data.DataColumn columnInstitution;
            
            private global::System.Data.DataColumn columndatefinished;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columndocfile;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncertification;
            
            private global::System.Data.DataColumn columnyearfinished;
            
            private global::System.Data.DataColumn columnisHighest;
            
            private global::System.Data.DataColumn columnissecurityrelated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU1DataTable() {
                this.TableName = "PFMEDU1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMEDU1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PFMEDU1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coursedescColumn {
                get {
                    return this.columncoursedesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstitutionColumn {
                get {
                    return this.columnInstitution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datefinishedColumn {
                get {
                    return this.columndatefinished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn docfileColumn {
                get {
                    return this.columndocfile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn certificationColumn {
                get {
                    return this.columncertification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearfinishedColumn {
                get {
                    return this.columnyearfinished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isHighestColumn {
                get {
                    return this.columnisHighest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issecurityrelatedColumn {
                get {
                    return this.columnissecurityrelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU1Row this[int index] {
                get {
                    return ((PFMEDU1Row)(this.Rows[index]));
                }
            }
            
            public event PFMEDU1RowChangeEventHandler PFMEDU1RowChanging;
            
            public event PFMEDU1RowChangeEventHandler PFMEDU1RowChanged;
            
            public event PFMEDU1RowChangeEventHandler PFMEDU1RowDeleting;
            
            public event PFMEDU1RowChangeEventHandler PFMEDU1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPFMEDU1Row(PFMEDU1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU1Row AddPFMEDU1Row(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string coursedesc, 
                        string Institution, 
                        System.DateTime datefinished, 
                        string sectorcode, 
                        string docfile, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string certification, 
                        string yearfinished, 
                        bool isHighest, 
                        bool issecurityrelated) {
                PFMEDU1Row rowPFMEDU1Row = ((PFMEDU1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        coursedesc,
                        Institution,
                        datefinished,
                        sectorcode,
                        docfile,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        certification,
                        yearfinished,
                        isHighest,
                        issecurityrelated};
                rowPFMEDU1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowPFMEDU1Row);
                return rowPFMEDU1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PFMEDU1DataTable cln = ((PFMEDU1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PFMEDU1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columncoursedesc = base.Columns["coursedesc"];
                this.columnInstitution = base.Columns["Institution"];
                this.columndatefinished = base.Columns["datefinished"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columndocfile = base.Columns["docfile"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncertification = base.Columns["certification"];
                this.columnyearfinished = base.Columns["yearfinished"];
                this.columnisHighest = base.Columns["isHighest"];
                this.columnissecurityrelated = base.Columns["issecurityrelated"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columncoursedesc = new global::System.Data.DataColumn("coursedesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoursedesc);
                this.columnInstitution = new global::System.Data.DataColumn("Institution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstitution);
                this.columndatefinished = new global::System.Data.DataColumn("datefinished", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatefinished);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columndocfile = new global::System.Data.DataColumn("docfile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocfile);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncertification = new global::System.Data.DataColumn("certification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertification);
                this.columnyearfinished = new global::System.Data.DataColumn("yearfinished", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearfinished);
                this.columnisHighest = new global::System.Data.DataColumn("isHighest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHighest);
                this.columnissecurityrelated = new global::System.Data.DataColumn("issecurityrelated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissecurityrelated);
                this.columnID.AllowDBNull = false;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columncoursedesc.MaxLength = 50;
                this.columnInstitution.MaxLength = 50;
                this.columnsectorcode.MaxLength = 20;
                this.columndocfile.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columncertification.MaxLength = 50;
                this.columnyearfinished.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU1Row NewPFMEDU1Row() {
                return ((PFMEDU1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PFMEDU1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PFMEDU1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PFMEDU1RowChanged != null)) {
                    this.PFMEDU1RowChanged(this, new PFMEDU1RowChangeEvent(((PFMEDU1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PFMEDU1RowChanging != null)) {
                    this.PFMEDU1RowChanging(this, new PFMEDU1RowChangeEvent(((PFMEDU1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PFMEDU1RowDeleted != null)) {
                    this.PFMEDU1RowDeleted(this, new PFMEDU1RowChangeEvent(((PFMEDU1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PFMEDU1RowDeleting != null)) {
                    this.PFMEDU1RowDeleting(this, new PFMEDU1RowChangeEvent(((PFMEDU1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePFMEDU1Row(PFMEDU1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PFMEDU1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PFMWE1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columncoyname;
            
            private global::System.Data.DataColumn columnyearfrom;
            
            private global::System.Data.DataColumn columnyearto;
            
            private global::System.Data.DataColumn columnissecurityrelated;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columnperiod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE1DataTable() {
                this.TableName = "PFMWE1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMWE1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PFMWE1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coynameColumn {
                get {
                    return this.columncoyname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearfromColumn {
                get {
                    return this.columnyearfrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yeartoColumn {
                get {
                    return this.columnyearto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issecurityrelatedColumn {
                get {
                    return this.columnissecurityrelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE1Row this[int index] {
                get {
                    return ((PFMWE1Row)(this.Rows[index]));
                }
            }
            
            public event PFMWE1RowChangeEventHandler PFMWE1RowChanging;
            
            public event PFMWE1RowChangeEventHandler PFMWE1RowChanged;
            
            public event PFMWE1RowChangeEventHandler PFMWE1RowDeleting;
            
            public event PFMWE1RowChangeEventHandler PFMWE1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPFMWE1Row(PFMWE1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE1Row AddPFMWE1Row(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string coy, 
                        string coyname, 
                        string yearfrom, 
                        string yearto, 
                        bool issecurityrelated, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string designation, 
                        string matnum, 
                        string matname, 
                        string period) {
                PFMWE1Row rowPFMWE1Row = ((PFMWE1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        coy,
                        coyname,
                        yearfrom,
                        yearto,
                        issecurityrelated,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        designation,
                        matnum,
                        matname,
                        period};
                rowPFMWE1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowPFMWE1Row);
                return rowPFMWE1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE1Row FindByID(long ID) {
                return ((PFMWE1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PFMWE1DataTable cln = ((PFMWE1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PFMWE1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columncoy = base.Columns["coy"];
                this.columncoyname = base.Columns["coyname"];
                this.columnyearfrom = base.Columns["yearfrom"];
                this.columnyearto = base.Columns["yearto"];
                this.columnissecurityrelated = base.Columns["issecurityrelated"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columndesignation = base.Columns["designation"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columnperiod = base.Columns["period"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columncoyname = new global::System.Data.DataColumn("coyname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyname);
                this.columnyearfrom = new global::System.Data.DataColumn("yearfrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearfrom);
                this.columnyearto = new global::System.Data.DataColumn("yearto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearto);
                this.columnissecurityrelated = new global::System.Data.DataColumn("issecurityrelated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissecurityrelated);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columncoy.MaxLength = 20;
                this.columncoyname.MaxLength = 30;
                this.columnyearfrom.MaxLength = 4;
                this.columnyearto.MaxLength = 4;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columndesignation.MaxLength = 25;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE1Row NewPFMWE1Row() {
                return ((PFMWE1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PFMWE1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PFMWE1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PFMWE1RowChanged != null)) {
                    this.PFMWE1RowChanged(this, new PFMWE1RowChangeEvent(((PFMWE1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PFMWE1RowChanging != null)) {
                    this.PFMWE1RowChanging(this, new PFMWE1RowChangeEvent(((PFMWE1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PFMWE1RowDeleted != null)) {
                    this.PFMWE1RowDeleted(this, new PFMWE1RowChangeEvent(((PFMWE1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PFMWE1RowDeleting != null)) {
                    this.PFMWE1RowDeleting(this, new PFMWE1RowChangeEvent(((PFMWE1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePFMWE1Row(PFMWE1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PFMWE1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLR1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnpldesc;
            
            private global::System.Data.DataColumn columnpermitno;
            
            private global::System.Data.DataColumn columnapplydate;
            
            private global::System.Data.DataColumn columnexpirydate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncancelddate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLR1DataTable() {
                this.TableName = "PLR1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLR1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PLR1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pldescColumn {
                get {
                    return this.columnpldesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn permitnoColumn {
                get {
                    return this.columnpermitno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn applydateColumn {
                get {
                    return this.columnapplydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expirydateColumn {
                get {
                    return this.columnexpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cancelddateColumn {
                get {
                    return this.columncancelddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLR1Row this[int index] {
                get {
                    return ((PLR1Row)(this.Rows[index]));
                }
            }
            
            public event PLR1RowChangeEventHandler PLR1RowChanging;
            
            public event PLR1RowChangeEventHandler PLR1RowChanged;
            
            public event PLR1RowChangeEventHandler PLR1RowDeleting;
            
            public event PLR1RowChangeEventHandler PLR1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPLR1Row(PLR1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLR1Row AddPLR1Row(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string pldesc, 
                        string permitno, 
                        System.DateTime applydate, 
                        System.DateTime expirydate, 
                        string remark, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        System.DateTime cancelddate) {
                PLR1Row rowPLR1Row = ((PLR1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        pldesc,
                        permitno,
                        applydate,
                        expirydate,
                        remark,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        cancelddate};
                rowPLR1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLR1Row);
                return rowPLR1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLR1Row FindByID(long ID) {
                return ((PLR1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PLR1DataTable cln = ((PLR1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLR1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnpldesc = base.Columns["pldesc"];
                this.columnpermitno = base.Columns["permitno"];
                this.columnapplydate = base.Columns["applydate"];
                this.columnexpirydate = base.Columns["expirydate"];
                this.columnremark = base.Columns["remark"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncancelddate = base.Columns["cancelddate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnpldesc = new global::System.Data.DataColumn("pldesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpldesc);
                this.columnpermitno = new global::System.Data.DataColumn("permitno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpermitno);
                this.columnapplydate = new global::System.Data.DataColumn("applydate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplydate);
                this.columnexpirydate = new global::System.Data.DataColumn("expirydate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpirydate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncancelddate = new global::System.Data.DataColumn("cancelddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncancelddate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnpldesc.MaxLength = 50;
                this.columnpermitno.MaxLength = 20;
                this.columnremark.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLR1Row NewPLR1Row() {
                return ((PLR1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLR1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PLR1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLR1RowChanged != null)) {
                    this.PLR1RowChanged(this, new PLR1RowChangeEvent(((PLR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLR1RowChanging != null)) {
                    this.PLR1RowChanging(this, new PLR1RowChangeEvent(((PLR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLR1RowDeleted != null)) {
                    this.PLR1RowDeleted(this, new PLR1RowChangeEvent(((PLR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLR1RowDeleting != null)) {
                    this.PLR1RowDeleting(this, new PLR1RowChangeEvent(((PLR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePLR1Row(PLR1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLR1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RECR1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnincentivedsc;
            
            private global::System.Data.DataColumn columnincentivecr;
            
            private global::System.Data.DataColumn columnincentivedate;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnnricrecomm;
            
            private global::System.Data.DataColumn columnrecempnum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECR1DataTable() {
                this.TableName = "RECR1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECR1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RECR1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn incentivedscColumn {
                get {
                    return this.columnincentivedsc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn incentivecrColumn {
                get {
                    return this.columnincentivecr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn incentivedateColumn {
                get {
                    return this.columnincentivedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricrecommColumn {
                get {
                    return this.columnnricrecomm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recempnumColumn {
                get {
                    return this.columnrecempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECR1Row this[int index] {
                get {
                    return ((RECR1Row)(this.Rows[index]));
                }
            }
            
            public event RECR1RowChangeEventHandler RECR1RowChanging;
            
            public event RECR1RowChangeEventHandler RECR1RowChanged;
            
            public event RECR1RowChangeEventHandler RECR1RowDeleting;
            
            public event RECR1RowChangeEventHandler RECR1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRECR1Row(RECR1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECR1Row AddRECR1Row(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string incentivedsc, 
                        decimal incentivecr, 
                        System.DateTime incentivedate, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string nricrecomm, 
                        string recempnum) {
                RECR1Row rowRECR1Row = ((RECR1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        incentivedsc,
                        incentivecr,
                        incentivedate,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        nricrecomm,
                        recempnum};
                rowRECR1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowRECR1Row);
                return rowRECR1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECR1Row FindByID(long ID) {
                return ((RECR1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RECR1DataTable cln = ((RECR1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RECR1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnincentivedsc = base.Columns["incentivedsc"];
                this.columnincentivecr = base.Columns["incentivecr"];
                this.columnincentivedate = base.Columns["incentivedate"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnnricrecomm = base.Columns["nricrecomm"];
                this.columnrecempnum = base.Columns["recempnum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnincentivedsc = new global::System.Data.DataColumn("incentivedsc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincentivedsc);
                this.columnincentivecr = new global::System.Data.DataColumn("incentivecr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincentivecr);
                this.columnincentivedate = new global::System.Data.DataColumn("incentivedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincentivedate);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnnricrecomm = new global::System.Data.DataColumn("nricrecomm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnricrecomm);
                this.columnrecempnum = new global::System.Data.DataColumn("recempnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecempnum);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnincentivedsc.MaxLength = 20;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columnnricrecomm.MaxLength = 20;
                this.columnrecempnum.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECR1Row NewRECR1Row() {
                return ((RECR1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RECR1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RECR1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RECR1RowChanged != null)) {
                    this.RECR1RowChanged(this, new RECR1RowChangeEvent(((RECR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RECR1RowChanging != null)) {
                    this.RECR1RowChanging(this, new RECR1RowChangeEvent(((RECR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RECR1RowDeleted != null)) {
                    this.RECR1RowDeleted(this, new RECR1RowChangeEvent(((RECR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RECR1RowDeleting != null)) {
                    this.RECR1RowDeleting(this, new RECR1RowChangeEvent(((RECR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRECR1Row(RECR1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RECR1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WPR1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnwpnum;
            
            private global::System.Data.DataColumn columnwpissuedate;
            
            private global::System.Data.DataColumn columnwpexpiry;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnwprenewal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WPR1DataTable() {
                this.TableName = "WPR1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WPR1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WPR1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wpnumColumn {
                get {
                    return this.columnwpnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wpissuedateColumn {
                get {
                    return this.columnwpissuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wpexpiryColumn {
                get {
                    return this.columnwpexpiry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wprenewalColumn {
                get {
                    return this.columnwprenewal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WPR1Row this[int index] {
                get {
                    return ((WPR1Row)(this.Rows[index]));
                }
            }
            
            public event WPR1RowChangeEventHandler WPR1RowChanging;
            
            public event WPR1RowChangeEventHandler WPR1RowChanged;
            
            public event WPR1RowChangeEventHandler WPR1RowDeleting;
            
            public event WPR1RowChangeEventHandler WPR1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWPR1Row(WPR1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WPR1Row AddWPR1Row(long ID, string nric, string refnum, string empnum, string wpnum, System.DateTime wpissuedate, System.DateTime wpexpiry, string user, string flag, string status, System.DateTime created, System.DateTime modified, string guid, string createdby, System.DateTime wprenewal) {
                WPR1Row rowWPR1Row = ((WPR1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        wpnum,
                        wpissuedate,
                        wpexpiry,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        wprenewal};
                rowWPR1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowWPR1Row);
                return rowWPR1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WPR1Row FindByID(long ID) {
                return ((WPR1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WPR1DataTable cln = ((WPR1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WPR1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnwpnum = base.Columns["wpnum"];
                this.columnwpissuedate = base.Columns["wpissuedate"];
                this.columnwpexpiry = base.Columns["wpexpiry"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnwprenewal = base.Columns["wprenewal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnwpnum = new global::System.Data.DataColumn("wpnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwpnum);
                this.columnwpissuedate = new global::System.Data.DataColumn("wpissuedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwpissuedate);
                this.columnwpexpiry = new global::System.Data.DataColumn("wpexpiry", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwpexpiry);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnwprenewal = new global::System.Data.DataColumn("wprenewal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwprenewal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnwpnum.MaxLength = 20;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WPR1Row NewWPR1Row() {
                return ((WPR1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WPR1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WPR1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WPR1RowChanged != null)) {
                    this.WPR1RowChanged(this, new WPR1RowChangeEvent(((WPR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WPR1RowChanging != null)) {
                    this.WPR1RowChanging(this, new WPR1RowChangeEvent(((WPR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WPR1RowDeleted != null)) {
                    this.WPR1RowDeleted(this, new WPR1RowChangeEvent(((WPR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WPR1RowDeleting != null)) {
                    this.WPR1RowDeleting(this, new WPR1RowChangeEvent(((WPR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWPR1Row(WPR1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WPR1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HEMPH1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnempname1;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnnationality;
            
            private global::System.Data.DataColumn columnmaritalstatus;
            
            private global::System.Data.DataColumn columnethnicity;
            
            private global::System.Data.DataColumn columndob;
            
            private global::System.Data.DataColumn columnbloodtype;
            
            private global::System.Data.DataColumn columnetype;
            
            private global::System.Data.DataColumn columnstatusid;
            
            private global::System.Data.DataColumn columnsitenum;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columndateconfirmed;
            
            private global::System.Data.DataColumn columndateresigned;
            
            private global::System.Data.DataColumn columnbankacc;
            
            private global::System.Data.DataColumn columnbasicsal;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnnextapprdate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnempname;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columncardid;
            
            private global::System.Data.DataColumn columnrecrempnum;
            
            private global::System.Data.DataColumn columnhsgcode;
            
            private global::System.Data.DataColumn columnphoto;
            
            private global::System.Data.DataColumn columnreligion;
            
            private global::System.Data.DataColumn columnforce;
            
            private global::System.Data.DataColumn columnrank;
            
            private global::System.Data.DataColumn columnvocation;
            
            private global::System.Data.DataColumn columnyearserved;
            
            private global::System.Data.DataColumn columnpadd1;
            
            private global::System.Data.DataColumn columnpadd2;
            
            private global::System.Data.DataColumn columnpadd3;
            
            private global::System.Data.DataColumn columnppostal;
            
            private global::System.Data.DataColumn columncadd1;
            
            private global::System.Data.DataColumn columncadd2;
            
            private global::System.Data.DataColumn columncadd3;
            
            private global::System.Data.DataColumn columncpostal;
            
            private global::System.Data.DataColumn columnisNSmandatory;
            
            private global::System.Data.DataColumn columnstatuscode;
            
            private global::System.Data.DataColumn columndatejoined;
            
            private global::System.Data.DataColumn columnhramnum;
            
            private global::System.Data.DataColumn columnregname;
            
            private global::System.Data.DataColumn columnisHQstaff;
            
            private global::System.Data.DataColumn columnconfirmationdate;
            
            private global::System.Data.DataColumn columnisretired;
            
            private global::System.Data.DataColumn columncontractend;
            
            private global::System.Data.DataColumn columnsitnumi;
            
            private global::System.Data.DataColumn columnpaytypecode;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columndaysperweek;
            
            private global::System.Data.DataColumn columnhramdesc;
            
            private global::System.Data.DataColumn columnisblacklisted;
            
            private global::System.Data.DataColumn columnBldgBlock;
            
            private global::System.Data.DataColumn columnLevelNo;
            
            private global::System.Data.DataColumn columnUnitNo;
            
            private global::System.Data.DataColumn columnStreetName;
            
            private global::System.Data.DataColumn columnBankCode;
            
            private global::System.Data.DataColumn columnBranchCode;
            
            private global::System.Data.DataColumn columnbankname;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnagencyfund;
            
            private global::System.Data.DataColumn columndatePR;
            
            private global::System.Data.DataColumn columnpcountry;
            
            private global::System.Data.DataColumn columnpostal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPH1DataTable() {
                this.TableName = "HEMPH1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HEMPH1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HEMPH1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empname1Column {
                get {
                    return this.columnempname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nationalityColumn {
                get {
                    return this.columnnationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maritalstatusColumn {
                get {
                    return this.columnmaritalstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ethnicityColumn {
                get {
                    return this.columnethnicity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dobColumn {
                get {
                    return this.columndob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bloodtypeColumn {
                get {
                    return this.columnbloodtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn etypeColumn {
                get {
                    return this.columnetype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusidColumn {
                get {
                    return this.columnstatusid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenumColumn {
                get {
                    return this.columnsitenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateconfirmedColumn {
                get {
                    return this.columndateconfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateresignedColumn {
                get {
                    return this.columndateresigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankaccColumn {
                get {
                    return this.columnbankacc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basicsalColumn {
                get {
                    return this.columnbasicsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nextapprdateColumn {
                get {
                    return this.columnnextapprdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnameColumn {
                get {
                    return this.columnempname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cardidColumn {
                get {
                    return this.columncardid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recrempnumColumn {
                get {
                    return this.columnrecrempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hsgcodeColumn {
                get {
                    return this.columnhsgcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photoColumn {
                get {
                    return this.columnphoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn religionColumn {
                get {
                    return this.columnreligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn forceColumn {
                get {
                    return this.columnforce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rankColumn {
                get {
                    return this.columnrank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vocationColumn {
                get {
                    return this.columnvocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearservedColumn {
                get {
                    return this.columnyearserved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd1Column {
                get {
                    return this.columnpadd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd2Column {
                get {
                    return this.columnpadd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn padd3Column {
                get {
                    return this.columnpadd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ppostalColumn {
                get {
                    return this.columnppostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd1Column {
                get {
                    return this.columncadd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd2Column {
                get {
                    return this.columncadd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cadd3Column {
                get {
                    return this.columncadd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cpostalColumn {
                get {
                    return this.columncpostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isNSmandatoryColumn {
                get {
                    return this.columnisNSmandatory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statuscodeColumn {
                get {
                    return this.columnstatuscode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datejoinedColumn {
                get {
                    return this.columndatejoined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramnumColumn {
                get {
                    return this.columnhramnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn regnameColumn {
                get {
                    return this.columnregname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isHQstaffColumn {
                get {
                    return this.columnisHQstaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmationdateColumn {
                get {
                    return this.columnconfirmationdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isretiredColumn {
                get {
                    return this.columnisretired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contractendColumn {
                get {
                    return this.columncontractend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitnumiColumn {
                get {
                    return this.columnsitnumi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paytypecodeColumn {
                get {
                    return this.columnpaytypecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daysperweekColumn {
                get {
                    return this.columndaysperweek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hramdescColumn {
                get {
                    return this.columnhramdesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isblacklistedColumn {
                get {
                    return this.columnisblacklisted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BldgBlockColumn {
                get {
                    return this.columnBldgBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LevelNoColumn {
                get {
                    return this.columnLevelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNoColumn {
                get {
                    return this.columnUnitNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetNameColumn {
                get {
                    return this.columnStreetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankCodeColumn {
                get {
                    return this.columnBankCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchCodeColumn {
                get {
                    return this.columnBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn banknameColumn {
                get {
                    return this.columnbankname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agencyfundColumn {
                get {
                    return this.columnagencyfund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datePRColumn {
                get {
                    return this.columndatePR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcountryColumn {
                get {
                    return this.columnpcountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn postalColumn {
                get {
                    return this.columnpostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPH1Row this[int index] {
                get {
                    return ((HEMPH1Row)(this.Rows[index]));
                }
            }
            
            public event HEMPH1RowChangeEventHandler HEMPH1RowChanging;
            
            public event HEMPH1RowChangeEventHandler HEMPH1RowChanged;
            
            public event HEMPH1RowChangeEventHandler HEMPH1RowDeleting;
            
            public event HEMPH1RowChangeEventHandler HEMPH1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHEMPH1Row(HEMPH1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPH1Row AddHEMPH1Row(
                        long ID, 
                        string refnum, 
                        string empnum, 
                        string nric, 
                        string empname1, 
                        string gender, 
                        string nationality, 
                        string maritalstatus, 
                        string ethnicity, 
                        System.DateTime dob, 
                        string bloodtype, 
                        string etype, 
                        string statusid, 
                        string sitenum, 
                        string sectorcode, 
                        System.DateTime dateconfirmed, 
                        System.DateTime dateresigned, 
                        string bankacc, 
                        decimal basicsal, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string createdby, 
                        System.DateTime nextapprdate, 
                        string remark, 
                        string contact, 
                        string empname, 
                        string designation, 
                        string cardid, 
                        string recrempnum, 
                        string hsgcode, 
                        byte[] photo, 
                        string religion, 
                        string force, 
                        string rank, 
                        string vocation, 
                        string yearserved, 
                        string padd1, 
                        string padd2, 
                        string padd3, 
                        string ppostal, 
                        string cadd1, 
                        string cadd2, 
                        string cadd3, 
                        string cpostal, 
                        bool isNSmandatory, 
                        string statuscode, 
                        System.DateTime datejoined, 
                        string hramnum, 
                        string regname, 
                        bool isHQstaff, 
                        System.DateTime confirmationdate, 
                        bool isretired, 
                        System.DateTime contractend, 
                        string sitnumi, 
                        string paytypecode, 
                        string matnum, 
                        string matname, 
                        decimal daysperweek, 
                        string hramdesc, 
                        string isblacklisted, 
                        string BldgBlock, 
                        string LevelNo, 
                        string UnitNo, 
                        string StreetName, 
                        string BankCode, 
                        string BranchCode, 
                        string bankname, 
                        string Country, 
                        string agencyfund, 
                        string datePR, 
                        string pcountry, 
                        string postal) {
                HEMPH1Row rowHEMPH1Row = ((HEMPH1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        empnum,
                        nric,
                        empname1,
                        gender,
                        nationality,
                        maritalstatus,
                        ethnicity,
                        dob,
                        bloodtype,
                        etype,
                        statusid,
                        sitenum,
                        sectorcode,
                        dateconfirmed,
                        dateresigned,
                        bankacc,
                        basicsal,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        createdby,
                        nextapprdate,
                        remark,
                        contact,
                        empname,
                        designation,
                        cardid,
                        recrempnum,
                        hsgcode,
                        photo,
                        religion,
                        force,
                        rank,
                        vocation,
                        yearserved,
                        padd1,
                        padd2,
                        padd3,
                        ppostal,
                        cadd1,
                        cadd2,
                        cadd3,
                        cpostal,
                        isNSmandatory,
                        statuscode,
                        datejoined,
                        hramnum,
                        regname,
                        isHQstaff,
                        confirmationdate,
                        isretired,
                        contractend,
                        sitnumi,
                        paytypecode,
                        matnum,
                        matname,
                        daysperweek,
                        hramdesc,
                        isblacklisted,
                        BldgBlock,
                        LevelNo,
                        UnitNo,
                        StreetName,
                        BankCode,
                        BranchCode,
                        bankname,
                        Country,
                        agencyfund,
                        datePR,
                        pcountry,
                        postal};
                rowHEMPH1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowHEMPH1Row);
                return rowHEMPH1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HEMPH1DataTable cln = ((HEMPH1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HEMPH1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnnric = base.Columns["nric"];
                this.columnempname1 = base.Columns["empname1"];
                this.columngender = base.Columns["gender"];
                this.columnnationality = base.Columns["nationality"];
                this.columnmaritalstatus = base.Columns["maritalstatus"];
                this.columnethnicity = base.Columns["ethnicity"];
                this.columndob = base.Columns["dob"];
                this.columnbloodtype = base.Columns["bloodtype"];
                this.columnetype = base.Columns["etype"];
                this.columnstatusid = base.Columns["statusid"];
                this.columnsitenum = base.Columns["sitenum"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columndateconfirmed = base.Columns["dateconfirmed"];
                this.columndateresigned = base.Columns["dateresigned"];
                this.columnbankacc = base.Columns["bankacc"];
                this.columnbasicsal = base.Columns["basicsal"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnnextapprdate = base.Columns["nextapprdate"];
                this.columnremark = base.Columns["remark"];
                this.columncontact = base.Columns["contact"];
                this.columnempname = base.Columns["empname"];
                this.columndesignation = base.Columns["designation"];
                this.columncardid = base.Columns["cardid"];
                this.columnrecrempnum = base.Columns["recrempnum"];
                this.columnhsgcode = base.Columns["hsgcode"];
                this.columnphoto = base.Columns["photo"];
                this.columnreligion = base.Columns["religion"];
                this.columnforce = base.Columns["force"];
                this.columnrank = base.Columns["rank"];
                this.columnvocation = base.Columns["vocation"];
                this.columnyearserved = base.Columns["yearserved"];
                this.columnpadd1 = base.Columns["padd1"];
                this.columnpadd2 = base.Columns["padd2"];
                this.columnpadd3 = base.Columns["padd3"];
                this.columnppostal = base.Columns["ppostal"];
                this.columncadd1 = base.Columns["cadd1"];
                this.columncadd2 = base.Columns["cadd2"];
                this.columncadd3 = base.Columns["cadd3"];
                this.columncpostal = base.Columns["cpostal"];
                this.columnisNSmandatory = base.Columns["isNSmandatory"];
                this.columnstatuscode = base.Columns["statuscode"];
                this.columndatejoined = base.Columns["datejoined"];
                this.columnhramnum = base.Columns["hramnum"];
                this.columnregname = base.Columns["regname"];
                this.columnisHQstaff = base.Columns["isHQstaff"];
                this.columnconfirmationdate = base.Columns["confirmationdate"];
                this.columnisretired = base.Columns["isretired"];
                this.columncontractend = base.Columns["contractend"];
                this.columnsitnumi = base.Columns["sitnumi"];
                this.columnpaytypecode = base.Columns["paytypecode"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columndaysperweek = base.Columns["daysperweek"];
                this.columnhramdesc = base.Columns["hramdesc"];
                this.columnisblacklisted = base.Columns["isblacklisted"];
                this.columnBldgBlock = base.Columns["BldgBlock"];
                this.columnLevelNo = base.Columns["LevelNo"];
                this.columnUnitNo = base.Columns["UnitNo"];
                this.columnStreetName = base.Columns["StreetName"];
                this.columnBankCode = base.Columns["BankCode"];
                this.columnBranchCode = base.Columns["BranchCode"];
                this.columnbankname = base.Columns["bankname"];
                this.columnCountry = base.Columns["Country"];
                this.columnagencyfund = base.Columns["agencyfund"];
                this.columndatePR = base.Columns["datePR"];
                this.columnpcountry = base.Columns["pcountry"];
                this.columnpostal = base.Columns["postal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnempname1 = new global::System.Data.DataColumn("empname1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname1);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnnationality = new global::System.Data.DataColumn("nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnationality);
                this.columnmaritalstatus = new global::System.Data.DataColumn("maritalstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalstatus);
                this.columnethnicity = new global::System.Data.DataColumn("ethnicity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnethnicity);
                this.columndob = new global::System.Data.DataColumn("dob", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndob);
                this.columnbloodtype = new global::System.Data.DataColumn("bloodtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloodtype);
                this.columnetype = new global::System.Data.DataColumn("etype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnetype);
                this.columnstatusid = new global::System.Data.DataColumn("statusid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatusid);
                this.columnsitenum = new global::System.Data.DataColumn("sitenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitenum);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columndateconfirmed = new global::System.Data.DataColumn("dateconfirmed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateconfirmed);
                this.columndateresigned = new global::System.Data.DataColumn("dateresigned", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateresigned);
                this.columnbankacc = new global::System.Data.DataColumn("bankacc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankacc);
                this.columnbasicsal = new global::System.Data.DataColumn("basicsal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbasicsal);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnnextapprdate = new global::System.Data.DataColumn("nextapprdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnextapprdate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnempname = new global::System.Data.DataColumn("empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columncardid = new global::System.Data.DataColumn("cardid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncardid);
                this.columnrecrempnum = new global::System.Data.DataColumn("recrempnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecrempnum);
                this.columnhsgcode = new global::System.Data.DataColumn("hsgcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhsgcode);
                this.columnphoto = new global::System.Data.DataColumn("photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto);
                this.columnreligion = new global::System.Data.DataColumn("religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreligion);
                this.columnforce = new global::System.Data.DataColumn("force", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforce);
                this.columnrank = new global::System.Data.DataColumn("rank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrank);
                this.columnvocation = new global::System.Data.DataColumn("vocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvocation);
                this.columnyearserved = new global::System.Data.DataColumn("yearserved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearserved);
                this.columnpadd1 = new global::System.Data.DataColumn("padd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd1);
                this.columnpadd2 = new global::System.Data.DataColumn("padd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd2);
                this.columnpadd3 = new global::System.Data.DataColumn("padd3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpadd3);
                this.columnppostal = new global::System.Data.DataColumn("ppostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppostal);
                this.columncadd1 = new global::System.Data.DataColumn("cadd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd1);
                this.columncadd2 = new global::System.Data.DataColumn("cadd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd2);
                this.columncadd3 = new global::System.Data.DataColumn("cadd3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncadd3);
                this.columncpostal = new global::System.Data.DataColumn("cpostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpostal);
                this.columnisNSmandatory = new global::System.Data.DataColumn("isNSmandatory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisNSmandatory);
                this.columnstatuscode = new global::System.Data.DataColumn("statuscode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatuscode);
                this.columndatejoined = new global::System.Data.DataColumn("datejoined", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatejoined);
                this.columnhramnum = new global::System.Data.DataColumn("hramnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramnum);
                this.columnregname = new global::System.Data.DataColumn("regname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregname);
                this.columnisHQstaff = new global::System.Data.DataColumn("isHQstaff", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHQstaff);
                this.columnconfirmationdate = new global::System.Data.DataColumn("confirmationdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmationdate);
                this.columnisretired = new global::System.Data.DataColumn("isretired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisretired);
                this.columncontractend = new global::System.Data.DataColumn("contractend", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontractend);
                this.columnsitnumi = new global::System.Data.DataColumn("sitnumi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitnumi);
                this.columnpaytypecode = new global::System.Data.DataColumn("paytypecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaytypecode);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columndaysperweek = new global::System.Data.DataColumn("daysperweek", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaysperweek);
                this.columnhramdesc = new global::System.Data.DataColumn("hramdesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhramdesc);
                this.columnisblacklisted = new global::System.Data.DataColumn("isblacklisted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisblacklisted);
                this.columnBldgBlock = new global::System.Data.DataColumn("BldgBlock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBldgBlock);
                this.columnLevelNo = new global::System.Data.DataColumn("LevelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevelNo);
                this.columnUnitNo = new global::System.Data.DataColumn("UnitNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNo);
                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetName);
                this.columnBankCode = new global::System.Data.DataColumn("BankCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCode);
                this.columnBranchCode = new global::System.Data.DataColumn("BranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCode);
                this.columnbankname = new global::System.Data.DataColumn("bankname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankname);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnagencyfund = new global::System.Data.DataColumn("agencyfund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagencyfund);
                this.columndatePR = new global::System.Data.DataColumn("datePR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatePR);
                this.columnpcountry = new global::System.Data.DataColumn("pcountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcountry);
                this.columnpostal = new global::System.Data.DataColumn("postal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostal);
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnnric.MaxLength = 20;
                this.columnempname1.MaxLength = 20;
                this.columngender.MaxLength = 1;
                this.columnnationality.MaxLength = 20;
                this.columnmaritalstatus.MaxLength = 10;
                this.columnethnicity.MaxLength = 20;
                this.columnbloodtype.MaxLength = 5;
                this.columnetype.MaxLength = 10;
                this.columnstatusid.MaxLength = 20;
                this.columnsitenum.MaxLength = 20;
                this.columnsectorcode.MaxLength = 30;
                this.columnbankacc.MaxLength = 30;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncreatedby.MaxLength = 50;
                this.columnremark.MaxLength = 50;
                this.columncontact.MaxLength = 20;
                this.columnempname.MaxLength = 50;
                this.columndesignation.MaxLength = 25;
                this.columncardid.MaxLength = 25;
                this.columnrecrempnum.MaxLength = 20;
                this.columnhsgcode.MaxLength = 20;
                this.columnreligion.MaxLength = 50;
                this.columnforce.MaxLength = 50;
                this.columnrank.MaxLength = 50;
                this.columnvocation.MaxLength = 50;
                this.columnpadd1.MaxLength = 100;
                this.columnpadd2.MaxLength = 100;
                this.columnpadd3.MaxLength = 100;
                this.columnppostal.MaxLength = 25;
                this.columncadd1.MaxLength = 100;
                this.columncadd2.MaxLength = 100;
                this.columncadd3.MaxLength = 100;
                this.columncpostal.MaxLength = 25;
                this.columnstatuscode.MaxLength = 30;
                this.columnhramnum.MaxLength = 30;
                this.columnregname.MaxLength = 30;
                this.columnsitnumi.MaxLength = 30;
                this.columnpaytypecode.MaxLength = 30;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
                this.columnhramdesc.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPH1Row NewHEMPH1Row() {
                return ((HEMPH1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HEMPH1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HEMPH1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HEMPH1RowChanged != null)) {
                    this.HEMPH1RowChanged(this, new HEMPH1RowChangeEvent(((HEMPH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HEMPH1RowChanging != null)) {
                    this.HEMPH1RowChanging(this, new HEMPH1RowChangeEvent(((HEMPH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HEMPH1RowDeleted != null)) {
                    this.HEMPH1RowDeleted(this, new HEMPH1RowChangeEvent(((HEMPH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HEMPH1RowDeleting != null)) {
                    this.HEMPH1RowDeleting(this, new HEMPH1RowChangeEvent(((HEMPH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHEMPH1Row(HEMPH1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HEMPH1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATM1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnexpire;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnisHQstaff;
            
            private global::System.Data.DataColumn columnoricountry;
            
            private global::System.Data.DataColumn columnpcatcode;
            
            private global::System.Data.DataColumn columnuomcode;
            
            private global::System.Data.DataColumn columnsaleAcc;
            
            private global::System.Data.DataColumn columncreatedby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATM1DataTable() {
                this.TableName = "MATM1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATM1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATM1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expireColumn {
                get {
                    return this.columnexpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isHQstaffColumn {
                get {
                    return this.columnisHQstaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricountryColumn {
                get {
                    return this.columnoricountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcatcodeColumn {
                get {
                    return this.columnpcatcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomcodeColumn {
                get {
                    return this.columnuomcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saleAccColumn {
                get {
                    return this.columnsaleAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATM1Row this[int index] {
                get {
                    return ((MATM1Row)(this.Rows[index]));
                }
            }
            
            public event MATM1RowChangeEventHandler MATM1RowChanging;
            
            public event MATM1RowChangeEventHandler MATM1RowChanged;
            
            public event MATM1RowChangeEventHandler MATM1RowDeleting;
            
            public event MATM1RowChangeEventHandler MATM1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATM1Row(MATM1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATM1Row AddMATM1Row(
                        long ID, 
                        string matnum, 
                        string matname, 
                        string user, 
                        string flag, 
                        string status, 
                        bool expire, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        System.DateTime trandate, 
                        bool isHQstaff, 
                        string oricountry, 
                        string pcatcode, 
                        string uomcode, 
                        string saleAcc, 
                        string createdby) {
                MATM1Row rowMATM1Row = ((MATM1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        matnum,
                        matname,
                        user,
                        flag,
                        status,
                        expire,
                        created,
                        modified,
                        trandate,
                        isHQstaff,
                        oricountry,
                        pcatcode,
                        uomcode,
                        saleAcc,
                        createdby};
                rowMATM1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATM1Row);
                return rowMATM1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATM1Row FindByID(long ID) {
                return ((MATM1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATM1DataTable cln = ((MATM1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATM1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columnexpire = base.Columns["expire"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columntrandate = base.Columns["trandate"];
                this.columnisHQstaff = base.Columns["isHQstaff"];
                this.columnoricountry = base.Columns["oricountry"];
                this.columnpcatcode = base.Columns["pcatcode"];
                this.columnuomcode = base.Columns["uomcode"];
                this.columnsaleAcc = base.Columns["saleAcc"];
                this.columncreatedby = base.Columns["createdby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnexpire = new global::System.Data.DataColumn("expire", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpire);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnisHQstaff = new global::System.Data.DataColumn("isHQstaff", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHQstaff);
                this.columnoricountry = new global::System.Data.DataColumn("oricountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricountry);
                this.columnpcatcode = new global::System.Data.DataColumn("pcatcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcatcode);
                this.columnuomcode = new global::System.Data.DataColumn("uomcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuomcode);
                this.columnsaleAcc = new global::System.Data.DataColumn("saleAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaleAcc);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnoricountry.MaxLength = 30;
                this.columnpcatcode.MaxLength = 30;
                this.columnuomcode.MaxLength = 30;
                this.columnsaleAcc.MaxLength = 30;
                this.columncreatedby.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATM1Row NewMATM1Row() {
                return ((MATM1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATM1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATM1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATM1RowChanged != null)) {
                    this.MATM1RowChanged(this, new MATM1RowChangeEvent(((MATM1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATM1RowChanging != null)) {
                    this.MATM1RowChanging(this, new MATM1RowChangeEvent(((MATM1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATM1RowDeleted != null)) {
                    this.MATM1RowDeleted(this, new MATM1RowChangeEvent(((MATM1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATM1RowDeleting != null)) {
                    this.MATM1RowDeleting(this, new MATM1RowChangeEvent(((MATM1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATM1Row(MATM1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATM1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PFMEDU2DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columncoursedesc;
            
            private global::System.Data.DataColumn columnInstitution;
            
            private global::System.Data.DataColumn columndatefinished;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columndocfile;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncertification;
            
            private global::System.Data.DataColumn columnyearfinished;
            
            private global::System.Data.DataColumn columnisHighest;
            
            private global::System.Data.DataColumn columnissecurityrelated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU2DataTable() {
                this.TableName = "PFMEDU2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMEDU2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PFMEDU2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coursedescColumn {
                get {
                    return this.columncoursedesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstitutionColumn {
                get {
                    return this.columnInstitution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datefinishedColumn {
                get {
                    return this.columndatefinished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn docfileColumn {
                get {
                    return this.columndocfile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn certificationColumn {
                get {
                    return this.columncertification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearfinishedColumn {
                get {
                    return this.columnyearfinished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isHighestColumn {
                get {
                    return this.columnisHighest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issecurityrelatedColumn {
                get {
                    return this.columnissecurityrelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU2Row this[int index] {
                get {
                    return ((PFMEDU2Row)(this.Rows[index]));
                }
            }
            
            public event PFMEDU2RowChangeEventHandler PFMEDU2RowChanging;
            
            public event PFMEDU2RowChangeEventHandler PFMEDU2RowChanged;
            
            public event PFMEDU2RowChangeEventHandler PFMEDU2RowDeleting;
            
            public event PFMEDU2RowChangeEventHandler PFMEDU2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPFMEDU2Row(PFMEDU2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU2Row AddPFMEDU2Row(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string coursedesc, 
                        string Institution, 
                        System.DateTime datefinished, 
                        string sectorcode, 
                        string docfile, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string certification, 
                        string yearfinished, 
                        bool isHighest, 
                        bool issecurityrelated) {
                PFMEDU2Row rowPFMEDU2Row = ((PFMEDU2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        coursedesc,
                        Institution,
                        datefinished,
                        sectorcode,
                        docfile,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        certification,
                        yearfinished,
                        isHighest,
                        issecurityrelated};
                rowPFMEDU2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowPFMEDU2Row);
                return rowPFMEDU2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PFMEDU2DataTable cln = ((PFMEDU2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PFMEDU2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columncoursedesc = base.Columns["coursedesc"];
                this.columnInstitution = base.Columns["Institution"];
                this.columndatefinished = base.Columns["datefinished"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columndocfile = base.Columns["docfile"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncertification = base.Columns["certification"];
                this.columnyearfinished = base.Columns["yearfinished"];
                this.columnisHighest = base.Columns["isHighest"];
                this.columnissecurityrelated = base.Columns["issecurityrelated"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columncoursedesc = new global::System.Data.DataColumn("coursedesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoursedesc);
                this.columnInstitution = new global::System.Data.DataColumn("Institution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstitution);
                this.columndatefinished = new global::System.Data.DataColumn("datefinished", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatefinished);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columndocfile = new global::System.Data.DataColumn("docfile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocfile);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncertification = new global::System.Data.DataColumn("certification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertification);
                this.columnyearfinished = new global::System.Data.DataColumn("yearfinished", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearfinished);
                this.columnisHighest = new global::System.Data.DataColumn("isHighest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHighest);
                this.columnissecurityrelated = new global::System.Data.DataColumn("issecurityrelated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissecurityrelated);
                this.columnID.AllowDBNull = false;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columncoursedesc.MaxLength = 50;
                this.columnInstitution.MaxLength = 50;
                this.columnsectorcode.MaxLength = 20;
                this.columndocfile.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columncertification.MaxLength = 50;
                this.columnyearfinished.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU2Row NewPFMEDU2Row() {
                return ((PFMEDU2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PFMEDU2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PFMEDU2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PFMEDU2RowChanged != null)) {
                    this.PFMEDU2RowChanged(this, new PFMEDU2RowChangeEvent(((PFMEDU2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PFMEDU2RowChanging != null)) {
                    this.PFMEDU2RowChanging(this, new PFMEDU2RowChangeEvent(((PFMEDU2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PFMEDU2RowDeleted != null)) {
                    this.PFMEDU2RowDeleted(this, new PFMEDU2RowChangeEvent(((PFMEDU2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PFMEDU2RowDeleting != null)) {
                    this.PFMEDU2RowDeleting(this, new PFMEDU2RowChangeEvent(((PFMEDU2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePFMEDU2Row(PFMEDU2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PFMEDU2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CIDC1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnDesc;
            
            private global::System.Data.DataColumn columnEstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIDC1DataTable() {
                this.TableName = "CIDC1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CIDC1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CIDC1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescColumn {
                get {
                    return this.columnDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstatusColumn {
                get {
                    return this.columnEstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIDC1Row this[int index] {
                get {
                    return ((CIDC1Row)(this.Rows[index]));
                }
            }
            
            public event CIDC1RowChangeEventHandler CIDC1RowChanging;
            
            public event CIDC1RowChangeEventHandler CIDC1RowChanged;
            
            public event CIDC1RowChangeEventHandler CIDC1RowDeleting;
            
            public event CIDC1RowChangeEventHandler CIDC1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCIDC1Row(CIDC1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIDC1Row AddCIDC1Row(string empnum, string Desc, string Estatus) {
                CIDC1Row rowCIDC1Row = ((CIDC1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        empnum,
                        Desc,
                        Estatus};
                rowCIDC1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowCIDC1Row);
                return rowCIDC1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CIDC1DataTable cln = ((CIDC1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CIDC1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempnum = base.Columns["empnum"];
                this.columnDesc = base.Columns["Desc"];
                this.columnEstatus = base.Columns["Estatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnDesc = new global::System.Data.DataColumn("Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc);
                this.columnEstatus = new global::System.Data.DataColumn("Estatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIDC1Row NewCIDC1Row() {
                return ((CIDC1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CIDC1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CIDC1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CIDC1RowChanged != null)) {
                    this.CIDC1RowChanged(this, new CIDC1RowChangeEvent(((CIDC1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CIDC1RowChanging != null)) {
                    this.CIDC1RowChanging(this, new CIDC1RowChangeEvent(((CIDC1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CIDC1RowDeleted != null)) {
                    this.CIDC1RowDeleted(this, new CIDC1RowChangeEvent(((CIDC1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CIDC1RowDeleting != null)) {
                    this.CIDC1RowDeleting(this, new CIDC1RowChangeEvent(((CIDC1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCIDC1Row(CIDC1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CIDC1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PFMWE2DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columncoyname;
            
            private global::System.Data.DataColumn columnyearfrom;
            
            private global::System.Data.DataColumn columnyearto;
            
            private global::System.Data.DataColumn columnissecurityrelated;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columnperiod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE2DataTable() {
                this.TableName = "PFMWE2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMWE2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PFMWE2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coynameColumn {
                get {
                    return this.columncoyname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearfromColumn {
                get {
                    return this.columnyearfrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yeartoColumn {
                get {
                    return this.columnyearto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issecurityrelatedColumn {
                get {
                    return this.columnissecurityrelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE2Row this[int index] {
                get {
                    return ((PFMWE2Row)(this.Rows[index]));
                }
            }
            
            public event PFMWE2RowChangeEventHandler PFMWE2RowChanging;
            
            public event PFMWE2RowChangeEventHandler PFMWE2RowChanged;
            
            public event PFMWE2RowChangeEventHandler PFMWE2RowDeleting;
            
            public event PFMWE2RowChangeEventHandler PFMWE2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPFMWE2Row(PFMWE2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE2Row AddPFMWE2Row(
                        long ID, 
                        string nric, 
                        string refnum, 
                        string empnum, 
                        string coy, 
                        string coyname, 
                        string yearfrom, 
                        string yearto, 
                        bool issecurityrelated, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string createdby, 
                        string designation, 
                        string matnum, 
                        string matname, 
                        string period) {
                PFMWE2Row rowPFMWE2Row = ((PFMWE2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        nric,
                        refnum,
                        empnum,
                        coy,
                        coyname,
                        yearfrom,
                        yearto,
                        issecurityrelated,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        createdby,
                        designation,
                        matnum,
                        matname,
                        period};
                rowPFMWE2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowPFMWE2Row);
                return rowPFMWE2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE2Row FindByID(long ID) {
                return ((PFMWE2Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PFMWE2DataTable cln = ((PFMWE2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PFMWE2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnnric = base.Columns["nric"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columncoy = base.Columns["coy"];
                this.columncoyname = base.Columns["coyname"];
                this.columnyearfrom = base.Columns["yearfrom"];
                this.columnyearto = base.Columns["yearto"];
                this.columnissecurityrelated = base.Columns["issecurityrelated"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columncreatedby = base.Columns["createdby"];
                this.columndesignation = base.Columns["designation"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columnperiod = base.Columns["period"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columncoyname = new global::System.Data.DataColumn("coyname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyname);
                this.columnyearfrom = new global::System.Data.DataColumn("yearfrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearfrom);
                this.columnyearto = new global::System.Data.DataColumn("yearto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyearto);
                this.columnissecurityrelated = new global::System.Data.DataColumn("issecurityrelated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissecurityrelated);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnnric.MaxLength = 20;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columncoy.MaxLength = 20;
                this.columncoyname.MaxLength = 30;
                this.columnyearfrom.MaxLength = 4;
                this.columnyearto.MaxLength = 4;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columncreatedby.MaxLength = 50;
                this.columndesignation.MaxLength = 25;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE2Row NewPFMWE2Row() {
                return ((PFMWE2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PFMWE2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PFMWE2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PFMWE2RowChanged != null)) {
                    this.PFMWE2RowChanged(this, new PFMWE2RowChangeEvent(((PFMWE2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PFMWE2RowChanging != null)) {
                    this.PFMWE2RowChanging(this, new PFMWE2RowChangeEvent(((PFMWE2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PFMWE2RowDeleted != null)) {
                    this.PFMWE2RowDeleted(this, new PFMWE2RowChangeEvent(((PFMWE2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PFMWE2RowDeleting != null)) {
                    this.PFMWE2RowDeleting(this, new PFMWE2RowChangeEvent(((PFMWE2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePFMWE2Row(PFMWE2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HEMPHds1 ds = new HEMPHds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PFMWE2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HEMPHRow : global::System.Data.DataRow {
            
            private HEMPHDataTable tableHEMPH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HEMPHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHEMPH = ((HEMPHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableHEMPH.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.empname1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.empname1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nationality {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.nationalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nationality\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.nationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maritalstatus {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.maritalstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maritalstatus\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.maritalstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ethnicity {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.ethnicityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ethnicity\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.ethnicityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dob {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dob\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bloodtype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.bloodtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bloodtype\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.bloodtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string etype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.etypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'etype\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.etypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statusid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.statusidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statusid\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.statusidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateconfirmed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dateconfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateconfirmed\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dateconfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateresigned {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dateresignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateresigned\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dateresignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankacc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.bankaccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankacc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.bankaccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal basicsal {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.basicsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'basicsal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.basicsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime nextapprdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.nextapprdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nextapprdate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.nextapprdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.empnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.empnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cardid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cardidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cardid\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cardidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recrempnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.recrempnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recrempnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.recrempnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hsgcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.hsgcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hsgcode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.hsgcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo {
                get {
                    try {
                        return ((byte[])(this[this.tableHEMPH.photoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.photoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string religion {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.religionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'religion\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.religionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string force {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.forceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'force\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.forceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rank {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.rankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rank\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.rankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vocation {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.vocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vocation\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.vocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearserved {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.yearservedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearserved\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.yearservedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.padd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.padd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd2 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.padd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd2\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.padd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd3 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.padd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd3\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.padd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ppostal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.ppostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppostal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.ppostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cadd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cadd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd2 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cadd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd2\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cadd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd3 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cadd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd3\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cadd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cpostal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.cpostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cpostal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.cpostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isNSmandatory {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isNSmandatoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isNSmandatory\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isNSmandatoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statuscode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.statuscodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statuscode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.statuscodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datejoined {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.datejoinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datejoined\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.datejoinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.hramnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.hramnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.regnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.regnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isHQstaff {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isHQstaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isHQstaff\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isHQstaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime confirmationdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.confirmationdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmationdate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.confirmationdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isretired {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isretiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isretired\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isretiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime contractend {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.contractendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractend\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitnumi {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.sitnumiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitnumi\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.sitnumiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paytypecode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.paytypecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paytypecode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.paytypecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal daysperweek {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.daysperweekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'daysperweek\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.daysperweekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramdesc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.hramdescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramdesc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.hramdescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isblacklisted {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isblacklistedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isblacklisted\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isblacklistedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BldgBlock {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.BldgBlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BldgBlock\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.BldgBlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LevelNo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.LevelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LevelNo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.LevelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitNo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.UnitNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.UnitNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetName {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.StreetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetName\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.StreetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryAddress {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.CountryAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryAddress\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.CountryAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankCode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.BankCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.BankCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchCode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.BranchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchCode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.BranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForeignAddress {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.ForeignAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForeignAddress\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.ForeignAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.banknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankname\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.banknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTRY {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.COUNTRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTRY\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.COUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agencyfund {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.agencyfundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agencyfund\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.agencyfundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datePR {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.datePRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datePR\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.datePRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string postal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.postalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postal\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.postalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pcountry {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.pcountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pcountry\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.pcountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pmcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.pmcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pmcode\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.pmcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emptype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.emptypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emptype\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.emptypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string photourl {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.photourlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photourl\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.photourlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitenum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.sitenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitenum\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.sitenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] contractdoc {
                get {
                    try {
                        return ((byte[])(this[this.tableHEMPH.contractdocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractdoc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractdocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contractloc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contractlocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractloc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractlocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool contractsigned {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.contractsignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractsigned\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contractsignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string signaturepicloc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.signaturepiclocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'signaturepicloc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.signaturepiclocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string interviewedby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.interviewedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'interviewedby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.interviewedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isWebAdd {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isWebAddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isWebAdd\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isWebAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string webguid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.webguidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'webguid\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.webguidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string modifiedby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.modifiedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modifiedby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.modifiedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactno {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contactnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactno\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isApproved {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.isApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isApproved\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.isApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime approvedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.approvedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvedate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approveby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.approvebyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approveby\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvebyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvename {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.approvenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvename\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvestatus {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.approvestatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvestatus\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.approvestatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateapplied {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.dateappliedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateapplied\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.dateappliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool englishWritten {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.englishWrittenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'englishWritten\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.englishWrittenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int englishSpoken {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.englishSpokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'englishSpoken\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.englishSpokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int chineseWritten {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.chineseWrittenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chineseWritten\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.chineseWrittenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int chineseSpoken {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.chineseSpokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chineseSpoken\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.chineseSpokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string otherLanguage {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.otherLanguageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherLanguage\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.otherLanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int otherLanguageWritten {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.otherLanguageWrittenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherLanguageWritten\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.otherLanguageWrittenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int otherLanguageSpoken {
                get {
                    try {
                        return ((int)(this[this.tableHEMPH.otherLanguageSpokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherLanguageSpoken\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.otherLanguageSpokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driverlicence {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.driverlicenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driverlicence\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.driverlicenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration1 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration1\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration2 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration2\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration3 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration3\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration4 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration4\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration5 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration5\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool declaration6 {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH.declaration6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration6\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string declaration6remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.declaration6remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'declaration6remark\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.declaration6remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string giroReason {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.giroReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'giroReason\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.giroReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appliFormSigLoc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.appliFormSigLocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appliFormSigLoc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.appliFormSigLocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactHouse {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.contactHouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactHouse\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.contactHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime commencedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH.commencedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commencedate\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.commencedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string homecontactno {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.homecontactnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'homecontactno\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.homecontactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.MonToFriTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonToFriTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.MonToFriTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonToFriLunchHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.MonToFriLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonToFriTeaBrkHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.MonToFriTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonToFriTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.MonToFriTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SatTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SatTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SatLunchHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.SatLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SatTeaBrkHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.SatTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SatTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SunTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SunTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.SunTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SunLunchHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.SunLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SunTeaBrkHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.SunTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SunTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.SunTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegularOffDay {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.RegularOffDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegularOffDay\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.RegularOffDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHTimeFrom {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.PHTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTimeFrom\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHTimeTo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.PHTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTimeTo\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PHLunchHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.PHLunchHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHLunchHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHLunchHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PHTeaBrkHr {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH.PHTeaBrkHrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHTeaBrkHr\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.PHTeaBrkHrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jobgroup {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.jobgroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jobgroup\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.jobgroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecommSigLoc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH.RecommSigLocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecommSigLoc\' in table \'HEMPH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH.RecommSigLocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableHEMPH.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableHEMPH.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableHEMPH.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableHEMPH.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableHEMPH.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableHEMPH.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableHEMPH.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableHEMPH.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isempname1Null() {
                return this.IsNull(this.tableHEMPH.empname1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setempname1Null() {
                this[this.tableHEMPH.empname1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableHEMPH.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableHEMPH.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnationalityNull() {
                return this.IsNull(this.tableHEMPH.nationalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnationalityNull() {
                this[this.tableHEMPH.nationalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaritalstatusNull() {
                return this.IsNull(this.tableHEMPH.maritalstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaritalstatusNull() {
                this[this.tableHEMPH.maritalstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsethnicityNull() {
                return this.IsNull(this.tableHEMPH.ethnicityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetethnicityNull() {
                this[this.tableHEMPH.ethnicityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdobNull() {
                return this.IsNull(this.tableHEMPH.dobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdobNull() {
                this[this.tableHEMPH.dobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbloodtypeNull() {
                return this.IsNull(this.tableHEMPH.bloodtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbloodtypeNull() {
                this[this.tableHEMPH.bloodtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsetypeNull() {
                return this.IsNull(this.tableHEMPH.etypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetetypeNull() {
                this[this.tableHEMPH.etypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusidNull() {
                return this.IsNull(this.tableHEMPH.statusidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusidNull() {
                this[this.tableHEMPH.statusidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tableHEMPH.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tableHEMPH.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateconfirmedNull() {
                return this.IsNull(this.tableHEMPH.dateconfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateconfirmedNull() {
                this[this.tableHEMPH.dateconfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateresignedNull() {
                return this.IsNull(this.tableHEMPH.dateresignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateresignedNull() {
                this[this.tableHEMPH.dateresignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankaccNull() {
                return this.IsNull(this.tableHEMPH.bankaccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankaccNull() {
                this[this.tableHEMPH.bankaccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbasicsalNull() {
                return this.IsNull(this.tableHEMPH.basicsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbasicsalNull() {
                this[this.tableHEMPH.basicsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableHEMPH.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableHEMPH.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableHEMPH.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableHEMPH.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableHEMPH.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableHEMPH.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableHEMPH.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableHEMPH.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableHEMPH.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableHEMPH.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableHEMPH.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableHEMPH.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnextapprdateNull() {
                return this.IsNull(this.tableHEMPH.nextapprdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnextapprdateNull() {
                this[this.tableHEMPH.nextapprdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableHEMPH.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableHEMPH.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableHEMPH.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableHEMPH.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnameNull() {
                return this.IsNull(this.tableHEMPH.empnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnameNull() {
                this[this.tableHEMPH.empnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tableHEMPH.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tableHEMPH.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscardidNull() {
                return this.IsNull(this.tableHEMPH.cardidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcardidNull() {
                this[this.tableHEMPH.cardidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrecrempnumNull() {
                return this.IsNull(this.tableHEMPH.recrempnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrecrempnumNull() {
                this[this.tableHEMPH.recrempnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshsgcodeNull() {
                return this.IsNull(this.tableHEMPH.hsgcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethsgcodeNull() {
                this[this.tableHEMPH.hsgcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphotoNull() {
                return this.IsNull(this.tableHEMPH.photoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphotoNull() {
                this[this.tableHEMPH.photoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreligionNull() {
                return this.IsNull(this.tableHEMPH.religionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreligionNull() {
                this[this.tableHEMPH.religionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforceNull() {
                return this.IsNull(this.tableHEMPH.forceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforceNull() {
                this[this.tableHEMPH.forceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrankNull() {
                return this.IsNull(this.tableHEMPH.rankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrankNull() {
                this[this.tableHEMPH.rankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvocationNull() {
                return this.IsNull(this.tableHEMPH.vocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvocationNull() {
                this[this.tableHEMPH.vocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearservedNull() {
                return this.IsNull(this.tableHEMPH.yearservedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearservedNull() {
                this[this.tableHEMPH.yearservedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd1Null() {
                return this.IsNull(this.tableHEMPH.padd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd1Null() {
                this[this.tableHEMPH.padd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd2Null() {
                return this.IsNull(this.tableHEMPH.padd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd2Null() {
                this[this.tableHEMPH.padd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd3Null() {
                return this.IsNull(this.tableHEMPH.padd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd3Null() {
                this[this.tableHEMPH.padd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppostalNull() {
                return this.IsNull(this.tableHEMPH.ppostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppostalNull() {
                this[this.tableHEMPH.ppostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd1Null() {
                return this.IsNull(this.tableHEMPH.cadd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd1Null() {
                this[this.tableHEMPH.cadd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd2Null() {
                return this.IsNull(this.tableHEMPH.cadd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd2Null() {
                this[this.tableHEMPH.cadd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd3Null() {
                return this.IsNull(this.tableHEMPH.cadd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd3Null() {
                this[this.tableHEMPH.cadd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscpostalNull() {
                return this.IsNull(this.tableHEMPH.cpostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcpostalNull() {
                this[this.tableHEMPH.cpostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisNSmandatoryNull() {
                return this.IsNull(this.tableHEMPH.isNSmandatoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisNSmandatoryNull() {
                this[this.tableHEMPH.isNSmandatoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatuscodeNull() {
                return this.IsNull(this.tableHEMPH.statuscodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatuscodeNull() {
                this[this.tableHEMPH.statuscodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatejoinedNull() {
                return this.IsNull(this.tableHEMPH.datejoinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatejoinedNull() {
                this[this.tableHEMPH.datejoinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramnumNull() {
                return this.IsNull(this.tableHEMPH.hramnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramnumNull() {
                this[this.tableHEMPH.hramnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregnameNull() {
                return this.IsNull(this.tableHEMPH.regnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregnameNull() {
                this[this.tableHEMPH.regnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisHQstaffNull() {
                return this.IsNull(this.tableHEMPH.isHQstaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisHQstaffNull() {
                this[this.tableHEMPH.isHQstaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmationdateNull() {
                return this.IsNull(this.tableHEMPH.confirmationdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmationdateNull() {
                this[this.tableHEMPH.confirmationdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisretiredNull() {
                return this.IsNull(this.tableHEMPH.isretiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisretiredNull() {
                this[this.tableHEMPH.isretiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractendNull() {
                return this.IsNull(this.tableHEMPH.contractendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractendNull() {
                this[this.tableHEMPH.contractendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitnumiNull() {
                return this.IsNull(this.tableHEMPH.sitnumiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitnumiNull() {
                this[this.tableHEMPH.sitnumiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaytypecodeNull() {
                return this.IsNull(this.tableHEMPH.paytypecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaytypecodeNull() {
                this[this.tableHEMPH.paytypecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tableHEMPH.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tableHEMPH.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tableHEMPH.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tableHEMPH.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysperweekNull() {
                return this.IsNull(this.tableHEMPH.daysperweekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysperweekNull() {
                this[this.tableHEMPH.daysperweekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramdescNull() {
                return this.IsNull(this.tableHEMPH.hramdescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramdescNull() {
                this[this.tableHEMPH.hramdescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisblacklistedNull() {
                return this.IsNull(this.tableHEMPH.isblacklistedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisblacklistedNull() {
                this[this.tableHEMPH.isblacklistedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBldgBlockNull() {
                return this.IsNull(this.tableHEMPH.BldgBlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBldgBlockNull() {
                this[this.tableHEMPH.BldgBlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLevelNoNull() {
                return this.IsNull(this.tableHEMPH.LevelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLevelNoNull() {
                this[this.tableHEMPH.LevelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNoNull() {
                return this.IsNull(this.tableHEMPH.UnitNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNoNull() {
                this[this.tableHEMPH.UnitNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNameNull() {
                return this.IsNull(this.tableHEMPH.StreetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNameNull() {
                this[this.tableHEMPH.StreetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryAddressNull() {
                return this.IsNull(this.tableHEMPH.CountryAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryAddressNull() {
                this[this.tableHEMPH.CountryAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankCodeNull() {
                return this.IsNull(this.tableHEMPH.BankCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankCodeNull() {
                this[this.tableHEMPH.BankCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchCodeNull() {
                return this.IsNull(this.tableHEMPH.BranchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchCodeNull() {
                this[this.tableHEMPH.BranchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForeignAddressNull() {
                return this.IsNull(this.tableHEMPH.ForeignAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForeignAddressNull() {
                this[this.tableHEMPH.ForeignAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanknameNull() {
                return this.IsNull(this.tableHEMPH.banknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanknameNull() {
                this[this.tableHEMPH.banknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTRYNull() {
                return this.IsNull(this.tableHEMPH.COUNTRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTRYNull() {
                this[this.tableHEMPH.COUNTRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagencyfundNull() {
                return this.IsNull(this.tableHEMPH.agencyfundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagencyfundNull() {
                this[this.tableHEMPH.agencyfundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatePRNull() {
                return this.IsNull(this.tableHEMPH.datePRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatePRNull() {
                this[this.tableHEMPH.datePRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspostalNull() {
                return this.IsNull(this.tableHEMPH.postalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpostalNull() {
                this[this.tableHEMPH.postalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcountryNull() {
                return this.IsNull(this.tableHEMPH.pcountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcountryNull() {
                this[this.tableHEMPH.pcountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspmcodeNull() {
                return this.IsNull(this.tableHEMPH.pmcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpmcodeNull() {
                this[this.tableHEMPH.pmcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemptypeNull() {
                return this.IsNull(this.tableHEMPH.emptypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemptypeNull() {
                this[this.tableHEMPH.emptypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphotourlNull() {
                return this.IsNull(this.tableHEMPH.photourlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphotourlNull() {
                this[this.tableHEMPH.photourlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenumNull() {
                return this.IsNull(this.tableHEMPH.sitenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenumNull() {
                this[this.tableHEMPH.sitenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractdocNull() {
                return this.IsNull(this.tableHEMPH.contractdocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractdocNull() {
                this[this.tableHEMPH.contractdocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractlocNull() {
                return this.IsNull(this.tableHEMPH.contractlocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractlocNull() {
                this[this.tableHEMPH.contractlocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractsignedNull() {
                return this.IsNull(this.tableHEMPH.contractsignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractsignedNull() {
                this[this.tableHEMPH.contractsignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssignaturepiclocNull() {
                return this.IsNull(this.tableHEMPH.signaturepiclocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsignaturepiclocNull() {
                this[this.tableHEMPH.signaturepiclocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinterviewedbyNull() {
                return this.IsNull(this.tableHEMPH.interviewedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinterviewedbyNull() {
                this[this.tableHEMPH.interviewedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisWebAddNull() {
                return this.IsNull(this.tableHEMPH.isWebAddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisWebAddNull() {
                this[this.tableHEMPH.isWebAddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswebguidNull() {
                return this.IsNull(this.tableHEMPH.webguidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwebguidNull() {
                this[this.tableHEMPH.webguidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedbyNull() {
                return this.IsNull(this.tableHEMPH.modifiedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedbyNull() {
                this[this.tableHEMPH.modifiedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactnoNull() {
                return this.IsNull(this.tableHEMPH.contactnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactnoNull() {
                this[this.tableHEMPH.contactnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisApprovedNull() {
                return this.IsNull(this.tableHEMPH.isApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisApprovedNull() {
                this[this.tableHEMPH.isApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovedateNull() {
                return this.IsNull(this.tableHEMPH.approvedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovedateNull() {
                this[this.tableHEMPH.approvedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovebyNull() {
                return this.IsNull(this.tableHEMPH.approvebyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovebyNull() {
                this[this.tableHEMPH.approvebyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovenameNull() {
                return this.IsNull(this.tableHEMPH.approvenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovenameNull() {
                this[this.tableHEMPH.approvenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovestatusNull() {
                return this.IsNull(this.tableHEMPH.approvestatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovestatusNull() {
                this[this.tableHEMPH.approvestatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateappliedNull() {
                return this.IsNull(this.tableHEMPH.dateappliedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateappliedNull() {
                this[this.tableHEMPH.dateappliedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenglishWrittenNull() {
                return this.IsNull(this.tableHEMPH.englishWrittenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenglishWrittenNull() {
                this[this.tableHEMPH.englishWrittenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenglishSpokenNull() {
                return this.IsNull(this.tableHEMPH.englishSpokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenglishSpokenNull() {
                this[this.tableHEMPH.englishSpokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschineseWrittenNull() {
                return this.IsNull(this.tableHEMPH.chineseWrittenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchineseWrittenNull() {
                this[this.tableHEMPH.chineseWrittenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschineseSpokenNull() {
                return this.IsNull(this.tableHEMPH.chineseSpokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchineseSpokenNull() {
                this[this.tableHEMPH.chineseSpokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherLanguageNull() {
                return this.IsNull(this.tableHEMPH.otherLanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherLanguageNull() {
                this[this.tableHEMPH.otherLanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherLanguageWrittenNull() {
                return this.IsNull(this.tableHEMPH.otherLanguageWrittenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherLanguageWrittenNull() {
                this[this.tableHEMPH.otherLanguageWrittenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherLanguageSpokenNull() {
                return this.IsNull(this.tableHEMPH.otherLanguageSpokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherLanguageSpokenNull() {
                this[this.tableHEMPH.otherLanguageSpokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdriverlicenceNull() {
                return this.IsNull(this.tableHEMPH.driverlicenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdriverlicenceNull() {
                this[this.tableHEMPH.driverlicenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration1Null() {
                return this.IsNull(this.tableHEMPH.declaration1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration1Null() {
                this[this.tableHEMPH.declaration1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration2Null() {
                return this.IsNull(this.tableHEMPH.declaration2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration2Null() {
                this[this.tableHEMPH.declaration2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration3Null() {
                return this.IsNull(this.tableHEMPH.declaration3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration3Null() {
                this[this.tableHEMPH.declaration3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration4Null() {
                return this.IsNull(this.tableHEMPH.declaration4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration4Null() {
                this[this.tableHEMPH.declaration4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration5Null() {
                return this.IsNull(this.tableHEMPH.declaration5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration5Null() {
                this[this.tableHEMPH.declaration5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration6Null() {
                return this.IsNull(this.tableHEMPH.declaration6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration6Null() {
                this[this.tableHEMPH.declaration6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeclaration6remarkNull() {
                return this.IsNull(this.tableHEMPH.declaration6remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeclaration6remarkNull() {
                this[this.tableHEMPH.declaration6remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgiroReasonNull() {
                return this.IsNull(this.tableHEMPH.giroReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgiroReasonNull() {
                this[this.tableHEMPH.giroReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsappliFormSigLocNull() {
                return this.IsNull(this.tableHEMPH.appliFormSigLocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetappliFormSigLocNull() {
                this[this.tableHEMPH.appliFormSigLocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactHouseNull() {
                return this.IsNull(this.tableHEMPH.contactHouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactHouseNull() {
                this[this.tableHEMPH.contactHouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommencedateNull() {
                return this.IsNull(this.tableHEMPH.commencedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommencedateNull() {
                this[this.tableHEMPH.commencedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshomecontactnoNull() {
                return this.IsNull(this.tableHEMPH.homecontactnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethomecontactnoNull() {
                this[this.tableHEMPH.homecontactnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTimeFromNull() {
                return this.IsNull(this.tableHEMPH.MonToFriTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTimeFromNull() {
                this[this.tableHEMPH.MonToFriTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTimeToNull() {
                return this.IsNull(this.tableHEMPH.MonToFriTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTimeToNull() {
                this[this.tableHEMPH.MonToFriTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriLunchHrNull() {
                return this.IsNull(this.tableHEMPH.MonToFriLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriLunchHrNull() {
                this[this.tableHEMPH.MonToFriLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonToFriTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.MonToFriTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonToFriTeaBrkHrNull() {
                this[this.tableHEMPH.MonToFriTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTimeFromNull() {
                return this.IsNull(this.tableHEMPH.SatTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTimeFromNull() {
                this[this.tableHEMPH.SatTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTimeToNull() {
                return this.IsNull(this.tableHEMPH.SatTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTimeToNull() {
                this[this.tableHEMPH.SatTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatLunchHrNull() {
                return this.IsNull(this.tableHEMPH.SatLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatLunchHrNull() {
                this[this.tableHEMPH.SatLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.SatTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatTeaBrkHrNull() {
                this[this.tableHEMPH.SatTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTimeFromNull() {
                return this.IsNull(this.tableHEMPH.SunTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTimeFromNull() {
                this[this.tableHEMPH.SunTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTimeToNull() {
                return this.IsNull(this.tableHEMPH.SunTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTimeToNull() {
                this[this.tableHEMPH.SunTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunLunchHrNull() {
                return this.IsNull(this.tableHEMPH.SunLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunLunchHrNull() {
                this[this.tableHEMPH.SunLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSunTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.SunTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSunTeaBrkHrNull() {
                this[this.tableHEMPH.SunTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegularOffDayNull() {
                return this.IsNull(this.tableHEMPH.RegularOffDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegularOffDayNull() {
                this[this.tableHEMPH.RegularOffDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTimeFromNull() {
                return this.IsNull(this.tableHEMPH.PHTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTimeFromNull() {
                this[this.tableHEMPH.PHTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTimeToNull() {
                return this.IsNull(this.tableHEMPH.PHTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTimeToNull() {
                this[this.tableHEMPH.PHTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHLunchHrNull() {
                return this.IsNull(this.tableHEMPH.PHLunchHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHLunchHrNull() {
                this[this.tableHEMPH.PHLunchHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHTeaBrkHrNull() {
                return this.IsNull(this.tableHEMPH.PHTeaBrkHrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHTeaBrkHrNull() {
                this[this.tableHEMPH.PHTeaBrkHrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjobgroupNull() {
                return this.IsNull(this.tableHEMPH.jobgroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjobgroupNull() {
                this[this.tableHEMPH.jobgroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecommSigLocNull() {
                return this.IsNull(this.tableHEMPH.RecommSigLocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecommSigLocNull() {
                this[this.tableHEMPH.RecommSigLocColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FAMRRow : global::System.Data.DataRow {
            
            private FAMRDataTable tableFAMR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAMRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFAMR = ((FAMRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableFAMR.IDColumn]));
                }
                set {
                    this[this.tableFAMR.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string relationship {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.relationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'relationship\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.relationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMR.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMR.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fnric {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.fnricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fnric\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.fnricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbirthcertificate {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.fbirthcertificateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbirthcertificate\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.fbirthcertificateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int age {
                get {
                    try {
                        return ((int)(this[this.tableFAMR.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'age\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.occupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'occupation\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.occupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company {
                get {
                    try {
                        return ((string)(this[this.tableFAMR.companyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company\' in table \'FAMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR.companyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableFAMR.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableFAMR.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableFAMR.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableFAMR.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableFAMR.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableFAMR.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableFAMR.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableFAMR.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrelationshipNull() {
                return this.IsNull(this.tableFAMR.relationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrelationshipNull() {
                this[this.tableFAMR.relationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableFAMR.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableFAMR.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableFAMR.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableFAMR.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableFAMR.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableFAMR.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableFAMR.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableFAMR.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableFAMR.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableFAMR.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableFAMR.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableFAMR.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableFAMR.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableFAMR.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tableFAMR.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tableFAMR.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableFAMR.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableFAMR.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableFAMR.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableFAMR.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfnricNull() {
                return this.IsNull(this.tableFAMR.fnricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfnricNull() {
                this[this.tableFAMR.fnricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfbirthcertificateNull() {
                return this.IsNull(this.tableFAMR.fbirthcertificateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfbirthcertificateNull() {
                this[this.tableFAMR.fbirthcertificateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsageNull() {
                return this.IsNull(this.tableFAMR.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetageNull() {
                this[this.tableFAMR.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoccupationNull() {
                return this.IsNull(this.tableFAMR.occupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoccupationNull() {
                this[this.tableFAMR.occupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNull() {
                return this.IsNull(this.tableFAMR.companyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNull() {
                this[this.tableFAMR.companyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FAMR1Row : global::System.Data.DataRow {
            
            private FAMR1DataTable tableFAMR1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAMR1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFAMR1 = ((FAMR1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableFAMR1.IDColumn]));
                }
                set {
                    this[this.tableFAMR1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string relationship {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.relationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'relationship\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.relationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMR1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMR1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableFAMR1.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'FAMR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFAMR1.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableFAMR1.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableFAMR1.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableFAMR1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableFAMR1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableFAMR1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableFAMR1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableFAMR1.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableFAMR1.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrelationshipNull() {
                return this.IsNull(this.tableFAMR1.relationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrelationshipNull() {
                this[this.tableFAMR1.relationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableFAMR1.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableFAMR1.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableFAMR1.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableFAMR1.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableFAMR1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableFAMR1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableFAMR1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableFAMR1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableFAMR1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableFAMR1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableFAMR1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableFAMR1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableFAMR1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableFAMR1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tableFAMR1.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tableFAMR1.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableFAMR1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableFAMR1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableFAMR1.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableFAMR1.contactColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HCNR1Row : global::System.Data.DataRow {
            
            private HCNR1DataTable tableHCNR1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HCNR1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHCNR1 = ((HCNR1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableHCNR1.IDColumn]));
                }
                set {
                    this[this.tableHCNR1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    return ((string)(this[this.tableHCNR1.nricColumn]));
                }
                set {
                    this[this.tableHCNR1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactno {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.contactnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactno\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.contactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contype {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.contypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contype\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.contypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isactive {
                get {
                    try {
                        return ((bool)(this[this.tableHCNR1.isactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isactive\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.isactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHCNR1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHCNR1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableHCNR1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'HCNR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHCNR1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableHCNR1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableHCNR1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableHCNR1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableHCNR1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactnoNull() {
                return this.IsNull(this.tableHCNR1.contactnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactnoNull() {
                this[this.tableHCNR1.contactnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontypeNull() {
                return this.IsNull(this.tableHCNR1.contypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontypeNull() {
                this[this.tableHCNR1.contypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisactiveNull() {
                return this.IsNull(this.tableHCNR1.isactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisactiveNull() {
                this[this.tableHCNR1.isactiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableHCNR1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableHCNR1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableHCNR1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableHCNR1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableHCNR1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableHCNR1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableHCNR1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableHCNR1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableHCNR1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableHCNR1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tableHCNR1.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tableHCNR1.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableHCNR1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableHCNR1.createdbyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PFMEDU1Row : global::System.Data.DataRow {
            
            private PFMEDU1DataTable tablePFMEDU1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMEDU1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePFMEDU1 = ((PFMEDU1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePFMEDU1.IDColumn]));
                }
                set {
                    this[this.tablePFMEDU1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coursedesc {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.coursedescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coursedesc\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.coursedescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Institution {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.InstitutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Institution\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.InstitutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datefinished {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU1.datefinishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datefinished\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.datefinishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string docfile {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.docfileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docfile\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.docfileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string certification {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.certificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certification\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.certificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearfinished {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU1.yearfinishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearfinished\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.yearfinishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isHighest {
                get {
                    try {
                        return ((bool)(this[this.tablePFMEDU1.isHighestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isHighest\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.isHighestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool issecurityrelated {
                get {
                    try {
                        return ((bool)(this[this.tablePFMEDU1.issecurityrelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issecurityrelated\' in table \'PFMEDU1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU1.issecurityrelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePFMEDU1.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePFMEDU1.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePFMEDU1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePFMEDU1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePFMEDU1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePFMEDU1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoursedescNull() {
                return this.IsNull(this.tablePFMEDU1.coursedescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoursedescNull() {
                this[this.tablePFMEDU1.coursedescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstitutionNull() {
                return this.IsNull(this.tablePFMEDU1.InstitutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstitutionNull() {
                this[this.tablePFMEDU1.InstitutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatefinishedNull() {
                return this.IsNull(this.tablePFMEDU1.datefinishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatefinishedNull() {
                this[this.tablePFMEDU1.datefinishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tablePFMEDU1.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tablePFMEDU1.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocfileNull() {
                return this.IsNull(this.tablePFMEDU1.docfileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocfileNull() {
                this[this.tablePFMEDU1.docfileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePFMEDU1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePFMEDU1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePFMEDU1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePFMEDU1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePFMEDU1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePFMEDU1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePFMEDU1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePFMEDU1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePFMEDU1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePFMEDU1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tablePFMEDU1.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tablePFMEDU1.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePFMEDU1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePFMEDU1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscertificationNull() {
                return this.IsNull(this.tablePFMEDU1.certificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcertificationNull() {
                this[this.tablePFMEDU1.certificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearfinishedNull() {
                return this.IsNull(this.tablePFMEDU1.yearfinishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearfinishedNull() {
                this[this.tablePFMEDU1.yearfinishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisHighestNull() {
                return this.IsNull(this.tablePFMEDU1.isHighestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisHighestNull() {
                this[this.tablePFMEDU1.isHighestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsissecurityrelatedNull() {
                return this.IsNull(this.tablePFMEDU1.issecurityrelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetissecurityrelatedNull() {
                this[this.tablePFMEDU1.issecurityrelatedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PFMWE1Row : global::System.Data.DataRow {
            
            private PFMWE1DataTable tablePFMWE1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMWE1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePFMWE1 = ((PFMWE1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePFMWE1.IDColumn]));
                }
                set {
                    this[this.tablePFMWE1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyname {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.coynameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyname\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.coynameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearfrom {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.yearfromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearfrom\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.yearfromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearto {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.yeartoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearto\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.yeartoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool issecurityrelated {
                get {
                    try {
                        return ((bool)(this[this.tablePFMWE1.issecurityrelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issecurityrelated\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.issecurityrelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMWE1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMWE1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string period {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE1.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'PFMWE1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE1.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePFMWE1.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePFMWE1.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePFMWE1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePFMWE1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePFMWE1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePFMWE1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablePFMWE1.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablePFMWE1.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoynameNull() {
                return this.IsNull(this.tablePFMWE1.coynameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoynameNull() {
                this[this.tablePFMWE1.coynameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearfromNull() {
                return this.IsNull(this.tablePFMWE1.yearfromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearfromNull() {
                this[this.tablePFMWE1.yearfromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyeartoNull() {
                return this.IsNull(this.tablePFMWE1.yeartoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyeartoNull() {
                this[this.tablePFMWE1.yeartoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsissecurityrelatedNull() {
                return this.IsNull(this.tablePFMWE1.issecurityrelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetissecurityrelatedNull() {
                this[this.tablePFMWE1.issecurityrelatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePFMWE1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePFMWE1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePFMWE1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePFMWE1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePFMWE1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePFMWE1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePFMWE1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePFMWE1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePFMWE1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePFMWE1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tablePFMWE1.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tablePFMWE1.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePFMWE1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePFMWE1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tablePFMWE1.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tablePFMWE1.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tablePFMWE1.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tablePFMWE1.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tablePFMWE1.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tablePFMWE1.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tablePFMWE1.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tablePFMWE1.periodColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PLR1Row : global::System.Data.DataRow {
            
            private PLR1DataTable tablePLR1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLR1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLR1 = ((PLR1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePLR1.IDColumn]));
                }
                set {
                    this[this.tablePLR1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pldesc {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.pldescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pldesc\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.pldescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string permitno {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.permitnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'permitno\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.permitnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime applydate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLR1.applydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'applydate\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.applydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime expirydate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLR1.expirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expirydate\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.expirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLR1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLR1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePLR1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime cancelddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLR1.cancelddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cancelddate\' in table \'PLR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLR1.cancelddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePLR1.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePLR1.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePLR1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePLR1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePLR1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePLR1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspldescNull() {
                return this.IsNull(this.tablePLR1.pldescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpldescNull() {
                this[this.tablePLR1.pldescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspermitnoNull() {
                return this.IsNull(this.tablePLR1.permitnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpermitnoNull() {
                this[this.tablePLR1.permitnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapplydateNull() {
                return this.IsNull(this.tablePLR1.applydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapplydateNull() {
                this[this.tablePLR1.applydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpirydateNull() {
                return this.IsNull(this.tablePLR1.expirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpirydateNull() {
                this[this.tablePLR1.expirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tablePLR1.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tablePLR1.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePLR1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePLR1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePLR1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePLR1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePLR1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePLR1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePLR1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePLR1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePLR1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePLR1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tablePLR1.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tablePLR1.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePLR1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePLR1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscancelddateNull() {
                return this.IsNull(this.tablePLR1.cancelddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcancelddateNull() {
                this[this.tablePLR1.cancelddateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RECR1Row : global::System.Data.DataRow {
            
            private RECR1DataTable tableRECR1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECR1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRECR1 = ((RECR1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableRECR1.IDColumn]));
                }
                set {
                    this[this.tableRECR1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string incentivedsc {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.incentivedscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'incentivedsc\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.incentivedscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal incentivecr {
                get {
                    try {
                        return ((decimal)(this[this.tableRECR1.incentivecrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'incentivecr\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.incentivecrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime incentivedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRECR1.incentivedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'incentivedate\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.incentivedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRECR1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRECR1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nricrecomm {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.nricrecommColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nricrecomm\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.nricrecommColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recempnum {
                get {
                    try {
                        return ((string)(this[this.tableRECR1.recempnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recempnum\' in table \'RECR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECR1.recempnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableRECR1.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableRECR1.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableRECR1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableRECR1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableRECR1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableRECR1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsincentivedscNull() {
                return this.IsNull(this.tableRECR1.incentivedscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetincentivedscNull() {
                this[this.tableRECR1.incentivedscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsincentivecrNull() {
                return this.IsNull(this.tableRECR1.incentivecrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetincentivecrNull() {
                this[this.tableRECR1.incentivecrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsincentivedateNull() {
                return this.IsNull(this.tableRECR1.incentivedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetincentivedateNull() {
                this[this.tableRECR1.incentivedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableRECR1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableRECR1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableRECR1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableRECR1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableRECR1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableRECR1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableRECR1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableRECR1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableRECR1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableRECR1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tableRECR1.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tableRECR1.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableRECR1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableRECR1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricrecommNull() {
                return this.IsNull(this.tableRECR1.nricrecommColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricrecommNull() {
                this[this.tableRECR1.nricrecommColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrecempnumNull() {
                return this.IsNull(this.tableRECR1.recempnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrecempnumNull() {
                this[this.tableRECR1.recempnumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WPR1Row : global::System.Data.DataRow {
            
            private WPR1DataTable tableWPR1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WPR1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWPR1 = ((WPR1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableWPR1.IDColumn]));
                }
                set {
                    this[this.tableWPR1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wpnum {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.wpnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wpnum\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.wpnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime wpissuedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWPR1.wpissuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wpissuedate\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.wpissuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime wpexpiry {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWPR1.wpexpiryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wpexpiry\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.wpexpiryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWPR1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWPR1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableWPR1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime wprenewal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWPR1.wprenewalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wprenewal\' in table \'WPR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWPR1.wprenewalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableWPR1.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableWPR1.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableWPR1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableWPR1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableWPR1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableWPR1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswpnumNull() {
                return this.IsNull(this.tableWPR1.wpnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwpnumNull() {
                this[this.tableWPR1.wpnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswpissuedateNull() {
                return this.IsNull(this.tableWPR1.wpissuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwpissuedateNull() {
                this[this.tableWPR1.wpissuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswpexpiryNull() {
                return this.IsNull(this.tableWPR1.wpexpiryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwpexpiryNull() {
                this[this.tableWPR1.wpexpiryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableWPR1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableWPR1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableWPR1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableWPR1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableWPR1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableWPR1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableWPR1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableWPR1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableWPR1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableWPR1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tableWPR1.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tableWPR1.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableWPR1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableWPR1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswprenewalNull() {
                return this.IsNull(this.tableWPR1.wprenewalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwprenewalNull() {
                this[this.tableWPR1.wprenewalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HEMPH1Row : global::System.Data.DataRow {
            
            private HEMPH1DataTable tableHEMPH1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HEMPH1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHEMPH1 = ((HEMPH1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableHEMPH1.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.empname1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname1\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.empname1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nationality {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.nationalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nationality\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.nationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maritalstatus {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.maritalstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maritalstatus\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.maritalstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ethnicity {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.ethnicityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ethnicity\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.ethnicityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dob {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.dobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dob\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.dobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bloodtype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.bloodtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bloodtype\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.bloodtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string etype {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.etypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'etype\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.etypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statusid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.statusidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statusid\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.statusidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitenum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.sitenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitenum\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.sitenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateconfirmed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.dateconfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateconfirmed\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.dateconfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateresigned {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.dateresignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateresigned\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.dateresignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankacc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.bankaccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankacc\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.bankaccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal basicsal {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH1.basicsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'basicsal\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.basicsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime nextapprdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.nextapprdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nextapprdate\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.nextapprdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.empnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.empnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cardid {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.cardidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cardid\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.cardidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recrempnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.recrempnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recrempnum\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.recrempnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hsgcode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.hsgcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hsgcode\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.hsgcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo {
                get {
                    try {
                        return ((byte[])(this[this.tableHEMPH1.photoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.photoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string religion {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.religionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'religion\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.religionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string force {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.forceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'force\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.forceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rank {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.rankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rank\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.rankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vocation {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.vocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vocation\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.vocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearserved {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.yearservedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearserved\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.yearservedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.padd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd1\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.padd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd2 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.padd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd2\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.padd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string padd3 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.padd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'padd3\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.padd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ppostal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.ppostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppostal\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.ppostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd1 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.cadd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd1\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.cadd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd2 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.cadd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd2\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.cadd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cadd3 {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.cadd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cadd3\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.cadd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cpostal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.cpostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cpostal\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.cpostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isNSmandatory {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH1.isNSmandatoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isNSmandatory\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.isNSmandatoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statuscode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.statuscodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statuscode\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.statuscodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datejoined {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.datejoinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datejoined\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.datejoinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.hramnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramnum\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.hramnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.regnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regname\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.regnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isHQstaff {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH1.isHQstaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isHQstaff\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.isHQstaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime confirmationdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.confirmationdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmationdate\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.confirmationdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isretired {
                get {
                    try {
                        return ((bool)(this[this.tableHEMPH1.isretiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isretired\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.isretiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime contractend {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHEMPH1.contractendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contractend\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.contractendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitnumi {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.sitnumiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitnumi\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.sitnumiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paytypecode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.paytypecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paytypecode\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.paytypecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal daysperweek {
                get {
                    try {
                        return ((decimal)(this[this.tableHEMPH1.daysperweekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'daysperweek\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.daysperweekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hramdesc {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.hramdescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hramdesc\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.hramdescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isblacklisted {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.isblacklistedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isblacklisted\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.isblacklistedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BldgBlock {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.BldgBlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BldgBlock\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.BldgBlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LevelNo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.LevelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LevelNo\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.LevelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitNo {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.UnitNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNo\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.UnitNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetName {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.StreetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetName\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.StreetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankCode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.BankCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCode\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.BankCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchCode {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.BranchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchCode\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.BranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankname {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.banknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankname\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.banknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agencyfund {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.agencyfundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agencyfund\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.agencyfundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string datePR {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.datePRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datePR\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.datePRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pcountry {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.pcountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pcountry\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.pcountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string postal {
                get {
                    try {
                        return ((string)(this[this.tableHEMPH1.postalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postal\' in table \'HEMPH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHEMPH1.postalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableHEMPH1.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableHEMPH1.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableHEMPH1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableHEMPH1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableHEMPH1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableHEMPH1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableHEMPH1.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableHEMPH1.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isempname1Null() {
                return this.IsNull(this.tableHEMPH1.empname1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setempname1Null() {
                this[this.tableHEMPH1.empname1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableHEMPH1.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableHEMPH1.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnationalityNull() {
                return this.IsNull(this.tableHEMPH1.nationalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnationalityNull() {
                this[this.tableHEMPH1.nationalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaritalstatusNull() {
                return this.IsNull(this.tableHEMPH1.maritalstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaritalstatusNull() {
                this[this.tableHEMPH1.maritalstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsethnicityNull() {
                return this.IsNull(this.tableHEMPH1.ethnicityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetethnicityNull() {
                this[this.tableHEMPH1.ethnicityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdobNull() {
                return this.IsNull(this.tableHEMPH1.dobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdobNull() {
                this[this.tableHEMPH1.dobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbloodtypeNull() {
                return this.IsNull(this.tableHEMPH1.bloodtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbloodtypeNull() {
                this[this.tableHEMPH1.bloodtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsetypeNull() {
                return this.IsNull(this.tableHEMPH1.etypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetetypeNull() {
                this[this.tableHEMPH1.etypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusidNull() {
                return this.IsNull(this.tableHEMPH1.statusidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusidNull() {
                this[this.tableHEMPH1.statusidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenumNull() {
                return this.IsNull(this.tableHEMPH1.sitenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenumNull() {
                this[this.tableHEMPH1.sitenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tableHEMPH1.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tableHEMPH1.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateconfirmedNull() {
                return this.IsNull(this.tableHEMPH1.dateconfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateconfirmedNull() {
                this[this.tableHEMPH1.dateconfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateresignedNull() {
                return this.IsNull(this.tableHEMPH1.dateresignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateresignedNull() {
                this[this.tableHEMPH1.dateresignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankaccNull() {
                return this.IsNull(this.tableHEMPH1.bankaccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankaccNull() {
                this[this.tableHEMPH1.bankaccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbasicsalNull() {
                return this.IsNull(this.tableHEMPH1.basicsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbasicsalNull() {
                this[this.tableHEMPH1.basicsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableHEMPH1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableHEMPH1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableHEMPH1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableHEMPH1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableHEMPH1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableHEMPH1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableHEMPH1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableHEMPH1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableHEMPH1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableHEMPH1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableHEMPH1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableHEMPH1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnextapprdateNull() {
                return this.IsNull(this.tableHEMPH1.nextapprdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnextapprdateNull() {
                this[this.tableHEMPH1.nextapprdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableHEMPH1.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableHEMPH1.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableHEMPH1.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableHEMPH1.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnameNull() {
                return this.IsNull(this.tableHEMPH1.empnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnameNull() {
                this[this.tableHEMPH1.empnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tableHEMPH1.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tableHEMPH1.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscardidNull() {
                return this.IsNull(this.tableHEMPH1.cardidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcardidNull() {
                this[this.tableHEMPH1.cardidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrecrempnumNull() {
                return this.IsNull(this.tableHEMPH1.recrempnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrecrempnumNull() {
                this[this.tableHEMPH1.recrempnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshsgcodeNull() {
                return this.IsNull(this.tableHEMPH1.hsgcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethsgcodeNull() {
                this[this.tableHEMPH1.hsgcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphotoNull() {
                return this.IsNull(this.tableHEMPH1.photoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphotoNull() {
                this[this.tableHEMPH1.photoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreligionNull() {
                return this.IsNull(this.tableHEMPH1.religionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreligionNull() {
                this[this.tableHEMPH1.religionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforceNull() {
                return this.IsNull(this.tableHEMPH1.forceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforceNull() {
                this[this.tableHEMPH1.forceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrankNull() {
                return this.IsNull(this.tableHEMPH1.rankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrankNull() {
                this[this.tableHEMPH1.rankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvocationNull() {
                return this.IsNull(this.tableHEMPH1.vocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvocationNull() {
                this[this.tableHEMPH1.vocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearservedNull() {
                return this.IsNull(this.tableHEMPH1.yearservedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearservedNull() {
                this[this.tableHEMPH1.yearservedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd1Null() {
                return this.IsNull(this.tableHEMPH1.padd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd1Null() {
                this[this.tableHEMPH1.padd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd2Null() {
                return this.IsNull(this.tableHEMPH1.padd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd2Null() {
                this[this.tableHEMPH1.padd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispadd3Null() {
                return this.IsNull(this.tableHEMPH1.padd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpadd3Null() {
                this[this.tableHEMPH1.padd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppostalNull() {
                return this.IsNull(this.tableHEMPH1.ppostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppostalNull() {
                this[this.tableHEMPH1.ppostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd1Null() {
                return this.IsNull(this.tableHEMPH1.cadd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd1Null() {
                this[this.tableHEMPH1.cadd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd2Null() {
                return this.IsNull(this.tableHEMPH1.cadd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd2Null() {
                this[this.tableHEMPH1.cadd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscadd3Null() {
                return this.IsNull(this.tableHEMPH1.cadd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcadd3Null() {
                this[this.tableHEMPH1.cadd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscpostalNull() {
                return this.IsNull(this.tableHEMPH1.cpostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcpostalNull() {
                this[this.tableHEMPH1.cpostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisNSmandatoryNull() {
                return this.IsNull(this.tableHEMPH1.isNSmandatoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisNSmandatoryNull() {
                this[this.tableHEMPH1.isNSmandatoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatuscodeNull() {
                return this.IsNull(this.tableHEMPH1.statuscodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatuscodeNull() {
                this[this.tableHEMPH1.statuscodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatejoinedNull() {
                return this.IsNull(this.tableHEMPH1.datejoinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatejoinedNull() {
                this[this.tableHEMPH1.datejoinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramnumNull() {
                return this.IsNull(this.tableHEMPH1.hramnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramnumNull() {
                this[this.tableHEMPH1.hramnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregnameNull() {
                return this.IsNull(this.tableHEMPH1.regnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregnameNull() {
                this[this.tableHEMPH1.regnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisHQstaffNull() {
                return this.IsNull(this.tableHEMPH1.isHQstaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisHQstaffNull() {
                this[this.tableHEMPH1.isHQstaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmationdateNull() {
                return this.IsNull(this.tableHEMPH1.confirmationdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmationdateNull() {
                this[this.tableHEMPH1.confirmationdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisretiredNull() {
                return this.IsNull(this.tableHEMPH1.isretiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisretiredNull() {
                this[this.tableHEMPH1.isretiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontractendNull() {
                return this.IsNull(this.tableHEMPH1.contractendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontractendNull() {
                this[this.tableHEMPH1.contractendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitnumiNull() {
                return this.IsNull(this.tableHEMPH1.sitnumiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitnumiNull() {
                this[this.tableHEMPH1.sitnumiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaytypecodeNull() {
                return this.IsNull(this.tableHEMPH1.paytypecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaytypecodeNull() {
                this[this.tableHEMPH1.paytypecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tableHEMPH1.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tableHEMPH1.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tableHEMPH1.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tableHEMPH1.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysperweekNull() {
                return this.IsNull(this.tableHEMPH1.daysperweekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysperweekNull() {
                this[this.tableHEMPH1.daysperweekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshramdescNull() {
                return this.IsNull(this.tableHEMPH1.hramdescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethramdescNull() {
                this[this.tableHEMPH1.hramdescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisblacklistedNull() {
                return this.IsNull(this.tableHEMPH1.isblacklistedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisblacklistedNull() {
                this[this.tableHEMPH1.isblacklistedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBldgBlockNull() {
                return this.IsNull(this.tableHEMPH1.BldgBlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBldgBlockNull() {
                this[this.tableHEMPH1.BldgBlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLevelNoNull() {
                return this.IsNull(this.tableHEMPH1.LevelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLevelNoNull() {
                this[this.tableHEMPH1.LevelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNoNull() {
                return this.IsNull(this.tableHEMPH1.UnitNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNoNull() {
                this[this.tableHEMPH1.UnitNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNameNull() {
                return this.IsNull(this.tableHEMPH1.StreetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNameNull() {
                this[this.tableHEMPH1.StreetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankCodeNull() {
                return this.IsNull(this.tableHEMPH1.BankCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankCodeNull() {
                this[this.tableHEMPH1.BankCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchCodeNull() {
                return this.IsNull(this.tableHEMPH1.BranchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchCodeNull() {
                this[this.tableHEMPH1.BranchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanknameNull() {
                return this.IsNull(this.tableHEMPH1.banknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanknameNull() {
                this[this.tableHEMPH1.banknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableHEMPH1.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableHEMPH1.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagencyfundNull() {
                return this.IsNull(this.tableHEMPH1.agencyfundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagencyfundNull() {
                this[this.tableHEMPH1.agencyfundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatePRNull() {
                return this.IsNull(this.tableHEMPH1.datePRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatePRNull() {
                this[this.tableHEMPH1.datePRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcountryNull() {
                return this.IsNull(this.tableHEMPH1.pcountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcountryNull() {
                this[this.tableHEMPH1.pcountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspostalNull() {
                return this.IsNull(this.tableHEMPH1.postalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpostalNull() {
                this[this.tableHEMPH1.postalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATM1Row : global::System.Data.DataRow {
            
            private MATM1DataTable tableMATM1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATM1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATM1 = ((MATM1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableMATM1.IDColumn]));
                }
                set {
                    this[this.tableMATM1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool expire {
                get {
                    try {
                        return ((bool)(this[this.tableMATM1.expireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expire\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.expireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMATM1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMATM1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMATM1.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isHQstaff {
                get {
                    try {
                        return ((bool)(this[this.tableMATM1.isHQstaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isHQstaff\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.isHQstaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricountry {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.oricountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricountry\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.oricountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pcatcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.pcatcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pcatcode\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.pcatcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uomcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.uomcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uomcode\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.uomcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saleAcc {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.saleAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saleAcc\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.saleAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableMATM1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'MATM1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tableMATM1.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tableMATM1.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tableMATM1.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tableMATM1.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableMATM1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableMATM1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableMATM1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableMATM1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableMATM1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableMATM1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpireNull() {
                return this.IsNull(this.tableMATM1.expireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpireNull() {
                this[this.tableMATM1.expireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableMATM1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableMATM1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableMATM1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableMATM1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tableMATM1.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tableMATM1.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisHQstaffNull() {
                return this.IsNull(this.tableMATM1.isHQstaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisHQstaffNull() {
                this[this.tableMATM1.isHQstaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricountryNull() {
                return this.IsNull(this.tableMATM1.oricountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricountryNull() {
                this[this.tableMATM1.oricountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcatcodeNull() {
                return this.IsNull(this.tableMATM1.pcatcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcatcodeNull() {
                this[this.tableMATM1.pcatcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomcodeNull() {
                return this.IsNull(this.tableMATM1.uomcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomcodeNull() {
                this[this.tableMATM1.uomcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaleAccNull() {
                return this.IsNull(this.tableMATM1.saleAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaleAccNull() {
                this[this.tableMATM1.saleAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableMATM1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableMATM1.createdbyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PFMEDU2Row : global::System.Data.DataRow {
            
            private PFMEDU2DataTable tablePFMEDU2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMEDU2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePFMEDU2 = ((PFMEDU2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePFMEDU2.IDColumn]));
                }
                set {
                    this[this.tablePFMEDU2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coursedesc {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.coursedescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coursedesc\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.coursedescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Institution {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.InstitutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Institution\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.InstitutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datefinished {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU2.datefinishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datefinished\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.datefinishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string docfile {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.docfileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docfile\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.docfileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU2.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMEDU2.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string certification {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.certificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certification\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.certificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearfinished {
                get {
                    try {
                        return ((string)(this[this.tablePFMEDU2.yearfinishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearfinished\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.yearfinishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isHighest {
                get {
                    try {
                        return ((bool)(this[this.tablePFMEDU2.isHighestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isHighest\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.isHighestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool issecurityrelated {
                get {
                    try {
                        return ((bool)(this[this.tablePFMEDU2.issecurityrelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issecurityrelated\' in table \'PFMEDU2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMEDU2.issecurityrelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePFMEDU2.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePFMEDU2.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePFMEDU2.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePFMEDU2.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePFMEDU2.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePFMEDU2.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoursedescNull() {
                return this.IsNull(this.tablePFMEDU2.coursedescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoursedescNull() {
                this[this.tablePFMEDU2.coursedescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstitutionNull() {
                return this.IsNull(this.tablePFMEDU2.InstitutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstitutionNull() {
                this[this.tablePFMEDU2.InstitutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatefinishedNull() {
                return this.IsNull(this.tablePFMEDU2.datefinishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatefinishedNull() {
                this[this.tablePFMEDU2.datefinishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tablePFMEDU2.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tablePFMEDU2.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocfileNull() {
                return this.IsNull(this.tablePFMEDU2.docfileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocfileNull() {
                this[this.tablePFMEDU2.docfileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePFMEDU2.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePFMEDU2.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePFMEDU2.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePFMEDU2.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePFMEDU2.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePFMEDU2.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePFMEDU2.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePFMEDU2.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePFMEDU2.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePFMEDU2.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tablePFMEDU2.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tablePFMEDU2.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePFMEDU2.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePFMEDU2.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscertificationNull() {
                return this.IsNull(this.tablePFMEDU2.certificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcertificationNull() {
                this[this.tablePFMEDU2.certificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearfinishedNull() {
                return this.IsNull(this.tablePFMEDU2.yearfinishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearfinishedNull() {
                this[this.tablePFMEDU2.yearfinishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisHighestNull() {
                return this.IsNull(this.tablePFMEDU2.isHighestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisHighestNull() {
                this[this.tablePFMEDU2.isHighestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsissecurityrelatedNull() {
                return this.IsNull(this.tablePFMEDU2.issecurityrelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetissecurityrelatedNull() {
                this[this.tablePFMEDU2.issecurityrelatedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CIDC1Row : global::System.Data.DataRow {
            
            private CIDC1DataTable tableCIDC1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CIDC1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCIDC1 = ((CIDC1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableCIDC1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'CIDC1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIDC1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc {
                get {
                    try {
                        return ((string)(this[this.tableCIDC1.DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc\' in table \'CIDC1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIDC1.DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estatus {
                get {
                    try {
                        return ((string)(this[this.tableCIDC1.EstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Estatus\' in table \'CIDC1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIDC1.EstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableCIDC1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableCIDC1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescNull() {
                return this.IsNull(this.tableCIDC1.DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescNull() {
                this[this.tableCIDC1.DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstatusNull() {
                return this.IsNull(this.tableCIDC1.EstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstatusNull() {
                this[this.tableCIDC1.EstatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PFMWE2Row : global::System.Data.DataRow {
            
            private PFMWE2DataTable tablePFMWE2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PFMWE2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePFMWE2 = ((PFMWE2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePFMWE2.IDColumn]));
                }
                set {
                    this[this.tablePFMWE2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyname {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.coynameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyname\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.coynameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearfrom {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.yearfromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearfrom\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.yearfromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yearto {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.yeartoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'yearto\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.yeartoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool issecurityrelated {
                get {
                    try {
                        return ((bool)(this[this.tablePFMWE2.issecurityrelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issecurityrelated\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.issecurityrelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMWE2.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePFMWE2.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string period {
                get {
                    try {
                        return ((string)(this[this.tablePFMWE2.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'PFMWE2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePFMWE2.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tablePFMWE2.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tablePFMWE2.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePFMWE2.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePFMWE2.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePFMWE2.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePFMWE2.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablePFMWE2.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablePFMWE2.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoynameNull() {
                return this.IsNull(this.tablePFMWE2.coynameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoynameNull() {
                this[this.tablePFMWE2.coynameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearfromNull() {
                return this.IsNull(this.tablePFMWE2.yearfromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearfromNull() {
                this[this.tablePFMWE2.yearfromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyeartoNull() {
                return this.IsNull(this.tablePFMWE2.yeartoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyeartoNull() {
                this[this.tablePFMWE2.yeartoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsissecurityrelatedNull() {
                return this.IsNull(this.tablePFMWE2.issecurityrelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetissecurityrelatedNull() {
                this[this.tablePFMWE2.issecurityrelatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePFMWE2.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePFMWE2.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePFMWE2.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePFMWE2.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePFMWE2.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePFMWE2.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePFMWE2.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePFMWE2.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePFMWE2.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePFMWE2.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tablePFMWE2.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tablePFMWE2.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePFMWE2.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePFMWE2.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tablePFMWE2.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tablePFMWE2.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tablePFMWE2.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tablePFMWE2.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tablePFMWE2.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tablePFMWE2.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tablePFMWE2.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tablePFMWE2.periodColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HEMPHRowChangeEvent : global::System.EventArgs {
            
            private HEMPHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRowChangeEvent(HEMPHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FAMRRowChangeEvent : global::System.EventArgs {
            
            private FAMRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRowChangeEvent(FAMRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FAMR1RowChangeEvent : global::System.EventArgs {
            
            private FAMR1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMR1RowChangeEvent(FAMR1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAMR1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HCNR1RowChangeEvent : global::System.EventArgs {
            
            private HCNR1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HCNR1RowChangeEvent(HCNR1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HCNR1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PFMEDU1RowChangeEvent : global::System.EventArgs {
            
            private PFMEDU1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU1RowChangeEvent(PFMEDU1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PFMWE1RowChangeEvent : global::System.EventArgs {
            
            private PFMWE1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE1RowChangeEvent(PFMWE1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PLR1RowChangeEvent : global::System.EventArgs {
            
            private PLR1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLR1RowChangeEvent(PLR1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLR1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RECR1RowChangeEvent : global::System.EventArgs {
            
            private RECR1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECR1RowChangeEvent(RECR1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECR1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WPR1RowChangeEvent : global::System.EventArgs {
            
            private WPR1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WPR1RowChangeEvent(WPR1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WPR1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HEMPH1RowChangeEvent : global::System.EventArgs {
            
            private HEMPH1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPH1RowChangeEvent(HEMPH1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HEMPH1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATM1RowChangeEvent : global::System.EventArgs {
            
            private MATM1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATM1RowChangeEvent(MATM1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATM1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PFMEDU2RowChangeEvent : global::System.EventArgs {
            
            private PFMEDU2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU2RowChangeEvent(PFMEDU2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMEDU2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CIDC1RowChangeEvent : global::System.EventArgs {
            
            private CIDC1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIDC1RowChangeEvent(CIDC1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIDC1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PFMWE2RowChangeEvent : global::System.EventArgs {
            
            private PFMWE2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE2RowChangeEvent(PFMWE2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PFMWE2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ATL.BizModules.HEMP.Report.HEMPHds1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HEMPHTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HEMPHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HEMPH";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("refnum", "refnum");
            tableMapping.ColumnMappings.Add("empnum", "empnum");
            tableMapping.ColumnMappings.Add("nric", "nric");
            tableMapping.ColumnMappings.Add("empname1", "empname1");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("nationality", "nationality");
            tableMapping.ColumnMappings.Add("maritalstatus", "maritalstatus");
            tableMapping.ColumnMappings.Add("ethnicity", "ethnicity");
            tableMapping.ColumnMappings.Add("dob", "dob");
            tableMapping.ColumnMappings.Add("bloodtype", "bloodtype");
            tableMapping.ColumnMappings.Add("etype", "etype");
            tableMapping.ColumnMappings.Add("statusid", "statusid");
            tableMapping.ColumnMappings.Add("sectorcode", "sectorcode");
            tableMapping.ColumnMappings.Add("dateconfirmed", "dateconfirmed");
            tableMapping.ColumnMappings.Add("dateresigned", "dateresigned");
            tableMapping.ColumnMappings.Add("bankacc", "bankacc");
            tableMapping.ColumnMappings.Add("basicsal", "basicsal");
            tableMapping.ColumnMappings.Add("user", "user");
            tableMapping.ColumnMappings.Add("flag", "flag");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("created", "created");
            tableMapping.ColumnMappings.Add("modified", "modified");
            tableMapping.ColumnMappings.Add("createdby", "createdby");
            tableMapping.ColumnMappings.Add("nextapprdate", "nextapprdate");
            tableMapping.ColumnMappings.Add("remark", "remark");
            tableMapping.ColumnMappings.Add("contact", "contact");
            tableMapping.ColumnMappings.Add("empname", "empname");
            tableMapping.ColumnMappings.Add("designation", "designation");
            tableMapping.ColumnMappings.Add("cardid", "cardid");
            tableMapping.ColumnMappings.Add("recrempnum", "recrempnum");
            tableMapping.ColumnMappings.Add("hsgcode", "hsgcode");
            tableMapping.ColumnMappings.Add("photo", "photo");
            tableMapping.ColumnMappings.Add("religion", "religion");
            tableMapping.ColumnMappings.Add("force", "force");
            tableMapping.ColumnMappings.Add("rank", "rank");
            tableMapping.ColumnMappings.Add("vocation", "vocation");
            tableMapping.ColumnMappings.Add("yearserved", "yearserved");
            tableMapping.ColumnMappings.Add("padd1", "padd1");
            tableMapping.ColumnMappings.Add("padd2", "padd2");
            tableMapping.ColumnMappings.Add("padd3", "padd3");
            tableMapping.ColumnMappings.Add("ppostal", "ppostal");
            tableMapping.ColumnMappings.Add("cadd1", "cadd1");
            tableMapping.ColumnMappings.Add("cadd2", "cadd2");
            tableMapping.ColumnMappings.Add("cadd3", "cadd3");
            tableMapping.ColumnMappings.Add("cpostal", "cpostal");
            tableMapping.ColumnMappings.Add("isNSmandatory", "isNSmandatory");
            tableMapping.ColumnMappings.Add("statuscode", "statuscode");
            tableMapping.ColumnMappings.Add("datejoined", "datejoined");
            tableMapping.ColumnMappings.Add("hramnum", "hramnum");
            tableMapping.ColumnMappings.Add("regname", "regname");
            tableMapping.ColumnMappings.Add("isHQstaff", "isHQstaff");
            tableMapping.ColumnMappings.Add("confirmationdate", "confirmationdate");
            tableMapping.ColumnMappings.Add("isretired", "isretired");
            tableMapping.ColumnMappings.Add("contractend", "contractend");
            tableMapping.ColumnMappings.Add("sitnumi", "sitnumi");
            tableMapping.ColumnMappings.Add("paytypecode", "paytypecode");
            tableMapping.ColumnMappings.Add("matnum", "matnum");
            tableMapping.ColumnMappings.Add("matname", "matname");
            tableMapping.ColumnMappings.Add("daysperweek", "daysperweek");
            tableMapping.ColumnMappings.Add("hramdesc", "hramdesc");
            tableMapping.ColumnMappings.Add("isblacklisted", "isblacklisted");
            tableMapping.ColumnMappings.Add("BldgBlock", "BldgBlock");
            tableMapping.ColumnMappings.Add("LevelNo", "LevelNo");
            tableMapping.ColumnMappings.Add("UnitNo", "UnitNo");
            tableMapping.ColumnMappings.Add("StreetName", "StreetName");
            tableMapping.ColumnMappings.Add("CountryAddress", "CountryAddress");
            tableMapping.ColumnMappings.Add("BankCode", "BankCode");
            tableMapping.ColumnMappings.Add("BranchCode", "BranchCode");
            tableMapping.ColumnMappings.Add("ForeignAddress", "ForeignAddress");
            tableMapping.ColumnMappings.Add("bankname", "bankname");
            tableMapping.ColumnMappings.Add("COUNTRY", "COUNTRY");
            tableMapping.ColumnMappings.Add("agencyfund", "agencyfund");
            tableMapping.ColumnMappings.Add("datePR", "datePR");
            tableMapping.ColumnMappings.Add("postal", "postal");
            tableMapping.ColumnMappings.Add("pcountry", "pcountry");
            tableMapping.ColumnMappings.Add("pmcode", "pmcode");
            tableMapping.ColumnMappings.Add("emptype", "emptype");
            tableMapping.ColumnMappings.Add("photourl", "photourl");
            tableMapping.ColumnMappings.Add("sitenum", "sitenum");
            tableMapping.ColumnMappings.Add("contractdoc", "contractdoc");
            tableMapping.ColumnMappings.Add("contractloc", "contractloc");
            tableMapping.ColumnMappings.Add("contractsigned", "contractsigned");
            tableMapping.ColumnMappings.Add("signaturepicloc", "signaturepicloc");
            tableMapping.ColumnMappings.Add("interviewedby", "interviewedby");
            tableMapping.ColumnMappings.Add("isWebAdd", "isWebAdd");
            tableMapping.ColumnMappings.Add("webguid", "webguid");
            tableMapping.ColumnMappings.Add("modifiedby", "modifiedby");
            tableMapping.ColumnMappings.Add("contactno", "contactno");
            tableMapping.ColumnMappings.Add("isApproved", "isApproved");
            tableMapping.ColumnMappings.Add("approvedate", "approvedate");
            tableMapping.ColumnMappings.Add("approveby", "approveby");
            tableMapping.ColumnMappings.Add("approvename", "approvename");
            tableMapping.ColumnMappings.Add("approvestatus", "approvestatus");
            tableMapping.ColumnMappings.Add("dateapplied", "dateapplied");
            tableMapping.ColumnMappings.Add("englishWritten", "englishWritten");
            tableMapping.ColumnMappings.Add("englishSpoken", "englishSpoken");
            tableMapping.ColumnMappings.Add("chineseWritten", "chineseWritten");
            tableMapping.ColumnMappings.Add("chineseSpoken", "chineseSpoken");
            tableMapping.ColumnMappings.Add("otherLanguage", "otherLanguage");
            tableMapping.ColumnMappings.Add("otherLanguageWritten", "otherLanguageWritten");
            tableMapping.ColumnMappings.Add("otherLanguageSpoken", "otherLanguageSpoken");
            tableMapping.ColumnMappings.Add("driverlicence", "driverlicence");
            tableMapping.ColumnMappings.Add("declaration1", "declaration1");
            tableMapping.ColumnMappings.Add("declaration2", "declaration2");
            tableMapping.ColumnMappings.Add("declaration3", "declaration3");
            tableMapping.ColumnMappings.Add("declaration4", "declaration4");
            tableMapping.ColumnMappings.Add("declaration5", "declaration5");
            tableMapping.ColumnMappings.Add("declaration6", "declaration6");
            tableMapping.ColumnMappings.Add("declaration6remark", "declaration6remark");
            tableMapping.ColumnMappings.Add("giroReason", "giroReason");
            tableMapping.ColumnMappings.Add("appliFormSigLoc", "appliFormSigLoc");
            tableMapping.ColumnMappings.Add("contactHouse", "contactHouse");
            tableMapping.ColumnMappings.Add("commencedate", "commencedate");
            tableMapping.ColumnMappings.Add("homecontactno", "homecontactno");
            tableMapping.ColumnMappings.Add("MonToFriTimeFrom", "MonToFriTimeFrom");
            tableMapping.ColumnMappings.Add("MonToFriTimeTo", "MonToFriTimeTo");
            tableMapping.ColumnMappings.Add("MonToFriLunchHr", "MonToFriLunchHr");
            tableMapping.ColumnMappings.Add("MonToFriTeaBrkHr", "MonToFriTeaBrkHr");
            tableMapping.ColumnMappings.Add("SatTimeFrom", "SatTimeFrom");
            tableMapping.ColumnMappings.Add("SatTimeTo", "SatTimeTo");
            tableMapping.ColumnMappings.Add("SatLunchHr", "SatLunchHr");
            tableMapping.ColumnMappings.Add("SatTeaBrkHr", "SatTeaBrkHr");
            tableMapping.ColumnMappings.Add("SunTimeFrom", "SunTimeFrom");
            tableMapping.ColumnMappings.Add("SunTimeTo", "SunTimeTo");
            tableMapping.ColumnMappings.Add("SunLunchHr", "SunLunchHr");
            tableMapping.ColumnMappings.Add("SunTeaBrkHr", "SunTeaBrkHr");
            tableMapping.ColumnMappings.Add("RegularOffDay", "RegularOffDay");
            tableMapping.ColumnMappings.Add("PHTimeFrom", "PHTimeFrom");
            tableMapping.ColumnMappings.Add("PHTimeTo", "PHTimeTo");
            tableMapping.ColumnMappings.Add("PHLunchHr", "PHLunchHr");
            tableMapping.ColumnMappings.Add("PHTeaBrkHr", "PHTeaBrkHr");
            tableMapping.ColumnMappings.Add("jobgroup", "jobgroup");
            tableMapping.ColumnMappings.Add("RecommSigLoc", "RecommSigLoc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[HEMPH] ([ID], [refnum], [empnum], [nric], [empname1], [gender]" +
                ", [nationality], [maritalstatus], [ethnicity], [dob], [bloodtype], [etype], [sta" +
                "tusid], [sectorcode], [dateconfirmed], [dateresigned], [bankacc], [basicsal], [u" +
                "ser], [flag], [status], [created], [modified], [createdby], [nextapprdate], [rem" +
                "ark], [contact], [empname], [designation], [cardid], [recrempnum], [hsgcode], [p" +
                "hoto], [religion], [force], [rank], [vocation], [yearserved], [padd1], [padd2], " +
                "[padd3], [ppostal], [cadd1], [cadd2], [cadd3], [cpostal], [isNSmandatory], [stat" +
                "uscode], [datejoined], [hramnum], [regname], [isHQstaff], [confirmationdate], [i" +
                "sretired], [contractend], [sitnumi], [paytypecode], [matnum], [matname], [dayspe" +
                "rweek], [hramdesc], [isblacklisted], [BldgBlock], [LevelNo], [UnitNo], [StreetNa" +
                "me], [CountryAddress], [BankCode], [BranchCode], [ForeignAddress], [bankname], [" +
                "COUNTRY], [agencyfund], [datePR], [postal], [pcountry], [pmcode], [emptype], [ph" +
                "otourl], [sitenum], [contractdoc], [contractloc], [contractsigned], [signaturepi" +
                "cloc], [interviewedby], [isWebAdd], [webguid], [modifiedby], [contactno], [isApp" +
                "roved], [approvedate], [approveby], [approvename], [approvestatus], [dateapplied" +
                "], [englishWritten], [englishSpoken], [chineseWritten], [chineseSpoken], [otherL" +
                "anguage], [otherLanguageWritten], [otherLanguageSpoken], [driverlicence], [decla" +
                "ration1], [declaration2], [declaration3], [declaration4], [declaration5], [decla" +
                "ration6], [declaration6remark], [giroReason], [appliFormSigLoc], [contactHouse]," +
                " [commencedate], [homecontactno], [MonToFriTimeFrom], [MonToFriTimeTo], [MonToFr" +
                "iLunchHr], [MonToFriTeaBrkHr], [SatTimeFrom], [SatTimeTo], [SatLunchHr], [SatTea" +
                "BrkHr], [SunTimeFrom], [SunTimeTo], [SunLunchHr], [SunTeaBrkHr], [RegularOffDay]" +
                ", [PHTimeFrom], [PHTimeTo], [PHLunchHr], [PHTeaBrkHr], [jobgroup], [RecommSigLoc" +
                "]) VALUES (@ID, @refnum, @empnum, @nric, @empname1, @gender, @nationality, @mari" +
                "talstatus, @ethnicity, @dob, @bloodtype, @etype, @statusid, @sectorcode, @dateco" +
                "nfirmed, @dateresigned, @bankacc, @basicsal, @user, @flag, @status, @created, @m" +
                "odified, @createdby, @nextapprdate, @remark, @contact, @empname, @designation, @" +
                "cardid, @recrempnum, @hsgcode, @photo, @religion, @force, @rank, @vocation, @yea" +
                "rserved, @padd1, @padd2, @padd3, @ppostal, @cadd1, @cadd2, @cadd3, @cpostal, @is" +
                "NSmandatory, @statuscode, @datejoined, @hramnum, @regname, @isHQstaff, @confirma" +
                "tiondate, @isretired, @contractend, @sitnumi, @paytypecode, @matnum, @matname, @" +
                "daysperweek, @hramdesc, @isblacklisted, @BldgBlock, @LevelNo, @UnitNo, @StreetNa" +
                "me, @CountryAddress, @BankCode, @BranchCode, @ForeignAddress, @bankname, @COUNTR" +
                "Y, @agencyfund, @datePR, @postal, @pcountry, @pmcode, @emptype, @photourl, @site" +
                "num, @contractdoc, @contractloc, @contractsigned, @signaturepicloc, @interviewed" +
                "by, @isWebAdd, @webguid, @modifiedby, @contactno, @isApproved, @approvedate, @ap" +
                "proveby, @approvename, @approvestatus, @dateapplied, @englishWritten, @englishSp" +
                "oken, @chineseWritten, @chineseSpoken, @otherLanguage, @otherLanguageWritten, @o" +
                "therLanguageSpoken, @driverlicence, @declaration1, @declaration2, @declaration3," +
                " @declaration4, @declaration5, @declaration6, @declaration6remark, @giroReason, " +
                "@appliFormSigLoc, @contactHouse, @commencedate, @homecontactno, @MonToFriTimeFro" +
                "m, @MonToFriTimeTo, @MonToFriLunchHr, @MonToFriTeaBrkHr, @SatTimeFrom, @SatTimeT" +
                "o, @SatLunchHr, @SatTeaBrkHr, @SunTimeFrom, @SunTimeTo, @SunLunchHr, @SunTeaBrkH" +
                "r, @RegularOffDay, @PHTimeFrom, @PHTimeTo, @PHLunchHr, @PHTeaBrkHr, @jobgroup, @" +
                "RecommSigLoc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@refnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nric", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empname1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empname1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nationality", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@maritalstatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalstatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ethnicity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ethnicity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dob", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bloodtype", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodtype", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@etype", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "etype", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statusid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sectorcode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sectorcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateconfirmed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateconfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateresigned", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateresigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bankacc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bankacc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@basicsal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "basicsal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createdby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nextapprdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nextapprdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contact", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@designation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cardid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recrempnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recrempnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hsgcode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hsgcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photo", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@religion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "religion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@force", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "force", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rank", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vocation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@yearserved", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yearserved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@padd1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "padd1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@padd2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "padd2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@padd3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "padd3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ppostal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ppostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cadd1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cadd1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cadd2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cadd2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cadd3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cadd3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cpostal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isNSmandatory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isNSmandatory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statuscode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statuscode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datejoined", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datejoined", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hramnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hramnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "regname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isHQstaff", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isHQstaff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@confirmationdate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confirmationdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isretired", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isretired", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contractend", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contractend", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sitnumi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitnumi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paytypecode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paytypecode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@matnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "matnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@matname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "matname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@daysperweek", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "daysperweek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hramdesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hramdesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isblacklisted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isblacklisted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BldgBlock", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BldgBlock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LevelNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LevelNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StreetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StreetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BranchCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BranchCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bankname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bankname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agencyfund", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agencyfund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datePR", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datePR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pcountry", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pcountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pmcode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pmcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@emptype", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "emptype", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photourl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photourl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sitenum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitenum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contractdoc", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contractdoc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contractloc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contractloc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contractsigned", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contractsigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@signaturepicloc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "signaturepicloc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@interviewedby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "interviewedby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isWebAdd", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isWebAdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@webguid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "webguid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contactno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isApproved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isApproved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvedate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approvedate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approveby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approveby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvename", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approvename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvestatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approvestatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateapplied", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateapplied", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@englishWritten", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "englishWritten", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@englishSpoken", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "englishSpoken", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chineseWritten", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chineseWritten", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chineseSpoken", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chineseSpoken", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherLanguage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherLanguage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherLanguageWritten", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherLanguageWritten", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherLanguageSpoken", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherLanguageSpoken", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driverlicence", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driverlicence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@declaration1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "declaration1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@declaration2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "declaration2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@declaration3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "declaration3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@declaration4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "declaration4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@declaration5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "declaration5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@declaration6", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "declaration6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@declaration6remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "declaration6remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@giroReason", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "giroReason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@appliFormSigLoc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appliFormSigLoc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contactHouse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commencedate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commencedate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@homecontactno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "homecontactno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonToFriTimeFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonToFriTimeFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonToFriTimeTo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonToFriTimeTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonToFriLunchHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MonToFriLunchHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonToFriTeaBrkHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MonToFriTeaBrkHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SatTimeFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SatTimeFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SatTimeTo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SatTimeTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SatLunchHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SatLunchHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SatTeaBrkHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SatTeaBrkHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunTimeFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunTimeFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunTimeTo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunTimeTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunLunchHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SunLunchHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunTeaBrkHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SunTeaBrkHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegularOffDay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegularOffDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHTimeFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHTimeFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHTimeTo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHTimeTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHLunchHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PHLunchHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHTeaBrkHr", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PHTeaBrkHr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jobgroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jobgroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecommSigLoc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecommSigLoc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ATL.Properties.Settings.Default.ATLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, refnum, empnum, nric, empname1, gender, nationality, maritalstatus, et" +
                "hnicity, dob, bloodtype, etype, statusid, sectorcode, dateconfirmed, dateresigne" +
                "d, bankacc, basicsal, [user], flag, status, created, modified, createdby, nextap" +
                "prdate, remark, contact, empname, designation, cardid, recrempnum, hsgcode, phot" +
                "o, religion, force, rank, vocation, yearserved, padd1, padd2, padd3, ppostal, ca" +
                "dd1, cadd2, cadd3, cpostal, isNSmandatory, statuscode, datejoined, hramnum, regn" +
                "ame, isHQstaff, confirmationdate, isretired, contractend, sitnumi, paytypecode, " +
                "matnum, matname, daysperweek, hramdesc, isblacklisted, BldgBlock, LevelNo, UnitN" +
                "o, StreetName, CountryAddress, BankCode, BranchCode, ForeignAddress, bankname, C" +
                "OUNTRY, agencyfund, datePR, postal, pcountry, pmcode, emptype, photourl, sitenum" +
                ", contractdoc, contractloc, contractsigned, signaturepicloc, interviewedby, isWe" +
                "bAdd, webguid, modifiedby, contactno, isApproved, approvedate, approveby, approv" +
                "ename, approvestatus, dateapplied, englishWritten, englishSpoken, chineseWritten" +
                ", chineseSpoken, otherLanguage, otherLanguageWritten, otherLanguageSpoken, drive" +
                "rlicence, declaration1, declaration2, declaration3, declaration4, declaration5, " +
                "declaration6, declaration6remark, giroReason, appliFormSigLoc, contactHouse, com" +
                "mencedate, homecontactno, MonToFriTimeFrom, MonToFriTimeTo, MonToFriLunchHr, Mon" +
                "ToFriTeaBrkHr, SatTimeFrom, SatTimeTo, SatLunchHr, SatTeaBrkHr, SunTimeFrom, Sun" +
                "TimeTo, SunLunchHr, SunTeaBrkHr, RegularOffDay, PHTimeFrom, PHTimeTo, PHLunchHr," +
                " PHTeaBrkHr, jobgroup, RecommSigLoc FROM dbo.HEMPH";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HEMPHds1.HEMPHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HEMPHds1.HEMPHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HEMPHds1.HEMPHDataTable dataTable = new HEMPHds1.HEMPHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HEMPHds1.HEMPHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HEMPHds1 dataSet) {
            return this.Adapter.Update(dataSet, "HEMPH");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<long> ID, 
                    string refnum, 
                    string empnum, 
                    string nric, 
                    string empname1, 
                    string gender, 
                    string nationality, 
                    string maritalstatus, 
                    string ethnicity, 
                    global::System.Nullable<global::System.DateTime> dob, 
                    string bloodtype, 
                    string etype, 
                    string statusid, 
                    string sectorcode, 
                    global::System.Nullable<global::System.DateTime> dateconfirmed, 
                    global::System.Nullable<global::System.DateTime> dateresigned, 
                    string bankacc, 
                    global::System.Nullable<decimal> basicsal, 
                    string user, 
                    string flag, 
                    string status, 
                    global::System.Nullable<global::System.DateTime> created, 
                    global::System.Nullable<global::System.DateTime> modified, 
                    string createdby, 
                    global::System.Nullable<global::System.DateTime> nextapprdate, 
                    string remark, 
                    string contact, 
                    string empname, 
                    string designation, 
                    string cardid, 
                    string recrempnum, 
                    string hsgcode, 
                    byte[] photo, 
                    string religion, 
                    string force, 
                    string rank, 
                    string vocation, 
                    string yearserved, 
                    string padd1, 
                    string padd2, 
                    string padd3, 
                    string ppostal, 
                    string cadd1, 
                    string cadd2, 
                    string cadd3, 
                    string cpostal, 
                    global::System.Nullable<bool> isNSmandatory, 
                    string statuscode, 
                    global::System.Nullable<global::System.DateTime> datejoined, 
                    string hramnum, 
                    string regname, 
                    global::System.Nullable<bool> isHQstaff, 
                    global::System.Nullable<global::System.DateTime> confirmationdate, 
                    global::System.Nullable<bool> isretired, 
                    global::System.Nullable<global::System.DateTime> contractend, 
                    string sitnumi, 
                    string paytypecode, 
                    string matnum, 
                    string matname, 
                    global::System.Nullable<decimal> daysperweek, 
                    string hramdesc, 
                    global::System.Nullable<bool> isblacklisted, 
                    string BldgBlock, 
                    string LevelNo, 
                    string UnitNo, 
                    string StreetName, 
                    string CountryAddress, 
                    string BankCode, 
                    string BranchCode, 
                    string ForeignAddress, 
                    string bankname, 
                    string COUNTRY, 
                    string agencyfund, 
                    global::System.Nullable<global::System.DateTime> datePR, 
                    string postal, 
                    string pcountry, 
                    string pmcode, 
                    string emptype, 
                    string photourl, 
                    string sitenum, 
                    byte[] contractdoc, 
                    string contractloc, 
                    global::System.Nullable<bool> contractsigned, 
                    string signaturepicloc, 
                    string interviewedby, 
                    global::System.Nullable<bool> isWebAdd, 
                    string webguid, 
                    string modifiedby, 
                    string contactno, 
                    global::System.Nullable<bool> isApproved, 
                    global::System.Nullable<global::System.DateTime> approvedate, 
                    string approveby, 
                    string approvename, 
                    string approvestatus, 
                    global::System.Nullable<global::System.DateTime> dateapplied, 
                    global::System.Nullable<bool> englishWritten, 
                    global::System.Nullable<int> englishSpoken, 
                    global::System.Nullable<int> chineseWritten, 
                    global::System.Nullable<int> chineseSpoken, 
                    string otherLanguage, 
                    global::System.Nullable<int> otherLanguageWritten, 
                    global::System.Nullable<int> otherLanguageSpoken, 
                    string driverlicence, 
                    global::System.Nullable<bool> declaration1, 
                    global::System.Nullable<bool> declaration2, 
                    global::System.Nullable<bool> declaration3, 
                    global::System.Nullable<bool> declaration4, 
                    global::System.Nullable<bool> declaration5, 
                    global::System.Nullable<bool> declaration6, 
                    string declaration6remark, 
                    string giroReason, 
                    string appliFormSigLoc, 
                    string contactHouse, 
                    global::System.Nullable<global::System.DateTime> commencedate, 
                    string homecontactno, 
                    string MonToFriTimeFrom, 
                    string MonToFriTimeTo, 
                    global::System.Nullable<decimal> MonToFriLunchHr, 
                    global::System.Nullable<decimal> MonToFriTeaBrkHr, 
                    string SatTimeFrom, 
                    string SatTimeTo, 
                    global::System.Nullable<decimal> SatLunchHr, 
                    global::System.Nullable<decimal> SatTeaBrkHr, 
                    string SunTimeFrom, 
                    string SunTimeTo, 
                    global::System.Nullable<decimal> SunLunchHr, 
                    global::System.Nullable<decimal> SunTeaBrkHr, 
                    string RegularOffDay, 
                    string PHTimeFrom, 
                    string PHTimeTo, 
                    global::System.Nullable<decimal> PHLunchHr, 
                    global::System.Nullable<decimal> PHTeaBrkHr, 
                    string jobgroup, 
                    string RecommSigLoc) {
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((refnum == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(refnum));
            }
            if ((empnum == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(empnum));
            }
            if ((nric == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(nric));
            }
            if ((empname1 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(empname1));
            }
            if ((gender == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(gender));
            }
            if ((nationality == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(nationality));
            }
            if ((maritalstatus == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(maritalstatus));
            }
            if ((ethnicity == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ethnicity));
            }
            if ((dob.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(dob.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((bloodtype == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(bloodtype));
            }
            if ((etype == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(etype));
            }
            if ((statusid == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(statusid));
            }
            if ((sectorcode == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(sectorcode));
            }
            if ((dateconfirmed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(dateconfirmed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((dateresigned.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(dateresigned.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((bankacc == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(bankacc));
            }
            if ((basicsal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(basicsal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((user == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(user));
            }
            if ((flag == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(flag));
            }
            if ((status == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(status));
            }
            if ((created.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(created.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((modified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(modified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((createdby == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(createdby));
            }
            if ((nextapprdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(nextapprdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((remark == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(remark));
            }
            if ((contact == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(contact));
            }
            if ((empname == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(empname));
            }
            if ((designation == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(designation));
            }
            if ((cardid == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(cardid));
            }
            if ((recrempnum == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(recrempnum));
            }
            if ((hsgcode == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(hsgcode));
            }
            if ((photo == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((byte[])(photo));
            }
            if ((religion == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(religion));
            }
            if ((force == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(force));
            }
            if ((rank == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(rank));
            }
            if ((vocation == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(vocation));
            }
            if ((yearserved == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(yearserved));
            }
            if ((padd1 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(padd1));
            }
            if ((padd2 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(padd2));
            }
            if ((padd3 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(padd3));
            }
            if ((ppostal == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(ppostal));
            }
            if ((cadd1 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(cadd1));
            }
            if ((cadd2 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(cadd2));
            }
            if ((cadd3 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(cadd3));
            }
            if ((cpostal == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(cpostal));
            }
            if ((isNSmandatory.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(isNSmandatory.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((statuscode == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(statuscode));
            }
            if ((datejoined.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((System.DateTime)(datejoined.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((hramnum == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(hramnum));
            }
            if ((regname == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(regname));
            }
            if ((isHQstaff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((bool)(isHQstaff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((confirmationdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(confirmationdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((isretired.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((bool)(isretired.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((contractend.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(contractend.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((sitnumi == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(sitnumi));
            }
            if ((paytypecode == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(paytypecode));
            }
            if ((matnum == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(matnum));
            }
            if ((matname == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(matname));
            }
            if ((daysperweek.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(daysperweek.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((hramdesc == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(hramdesc));
            }
            if ((isblacklisted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(isblacklisted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((BldgBlock == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(BldgBlock));
            }
            if ((LevelNo == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(LevelNo));
            }
            if ((UnitNo == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(UnitNo));
            }
            if ((StreetName == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(StreetName));
            }
            if ((CountryAddress == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(CountryAddress));
            }
            if ((BankCode == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(BankCode));
            }
            if ((BranchCode == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(BranchCode));
            }
            if ((ForeignAddress == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(ForeignAddress));
            }
            if ((bankname == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(bankname));
            }
            if ((COUNTRY == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(COUNTRY));
            }
            if ((agencyfund == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(agencyfund));
            }
            if ((datePR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((System.DateTime)(datePR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((postal == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(postal));
            }
            if ((pcountry == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(pcountry));
            }
            if ((pmcode == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(pmcode));
            }
            if ((emptype == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(emptype));
            }
            if ((photourl == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(photourl));
            }
            if ((sitenum == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(sitenum));
            }
            if ((contractdoc == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((byte[])(contractdoc));
            }
            if ((contractloc == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(contractloc));
            }
            if ((contractsigned.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((bool)(contractsigned.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((signaturepicloc == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(signaturepicloc));
            }
            if ((interviewedby == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(interviewedby));
            }
            if ((isWebAdd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((bool)(isWebAdd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((webguid == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(webguid));
            }
            if ((modifiedby == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(modifiedby));
            }
            if ((contactno == null)) {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(contactno));
            }
            if ((isApproved.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((bool)(isApproved.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((approvedate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((System.DateTime)(approvedate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((approveby == null)) {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = ((string)(approveby));
            }
            if ((approvename == null)) {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = ((string)(approvename));
            }
            if ((approvestatus == null)) {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = ((string)(approvestatus));
            }
            if ((dateapplied.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[94].Value = ((System.DateTime)(dateapplied.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((englishWritten.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((bool)(englishWritten.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((englishSpoken.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[96].Value = ((int)(englishSpoken.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((chineseWritten.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((int)(chineseWritten.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((chineseSpoken.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((int)(chineseSpoken.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((otherLanguage == null)) {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = ((string)(otherLanguage));
            }
            if ((otherLanguageWritten.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((int)(otherLanguageWritten.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((otherLanguageSpoken.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[101].Value = ((int)(otherLanguageSpoken.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((driverlicence == null)) {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = ((string)(driverlicence));
            }
            if ((declaration1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[103].Value = ((bool)(declaration1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((declaration2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((bool)(declaration2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((declaration3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[105].Value = ((bool)(declaration3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((declaration4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[106].Value = ((bool)(declaration4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((declaration5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[107].Value = ((bool)(declaration5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((declaration6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[108].Value = ((bool)(declaration6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((declaration6remark == null)) {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = ((string)(declaration6remark));
            }
            if ((giroReason == null)) {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = ((string)(giroReason));
            }
            if ((appliFormSigLoc == null)) {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = ((string)(appliFormSigLoc));
            }
            if ((contactHouse == null)) {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = ((string)(contactHouse));
            }
            if ((commencedate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[113].Value = ((System.DateTime)(commencedate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((homecontactno == null)) {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = ((string)(homecontactno));
            }
            if ((MonToFriTimeFrom == null)) {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = ((string)(MonToFriTimeFrom));
            }
            if ((MonToFriTimeTo == null)) {
                this.Adapter.InsertCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[116].Value = ((string)(MonToFriTimeTo));
            }
            if ((MonToFriLunchHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[117].Value = ((decimal)(MonToFriLunchHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((MonToFriTeaBrkHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[118].Value = ((decimal)(MonToFriTeaBrkHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((SatTimeFrom == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(SatTimeFrom));
            }
            if ((SatTimeTo == null)) {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = ((string)(SatTimeTo));
            }
            if ((SatLunchHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[121].Value = ((decimal)(SatLunchHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((SatTeaBrkHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[122].Value = ((decimal)(SatTeaBrkHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((SunTimeFrom == null)) {
                this.Adapter.InsertCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[123].Value = ((string)(SunTimeFrom));
            }
            if ((SunTimeTo == null)) {
                this.Adapter.InsertCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[124].Value = ((string)(SunTimeTo));
            }
            if ((SunLunchHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[125].Value = ((decimal)(SunLunchHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((SunTeaBrkHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[126].Value = ((decimal)(SunTeaBrkHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((RegularOffDay == null)) {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = ((string)(RegularOffDay));
            }
            if ((PHTimeFrom == null)) {
                this.Adapter.InsertCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[128].Value = ((string)(PHTimeFrom));
            }
            if ((PHTimeTo == null)) {
                this.Adapter.InsertCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[129].Value = ((string)(PHTimeTo));
            }
            if ((PHLunchHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[130].Value = ((decimal)(PHLunchHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((PHTeaBrkHr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[131].Value = ((decimal)(PHTeaBrkHr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((jobgroup == null)) {
                this.Adapter.InsertCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[132].Value = ((string)(jobgroup));
            }
            if ((RecommSigLoc == null)) {
                this.Adapter.InsertCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[133].Value = ((string)(RecommSigLoc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FAMRTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FAMRTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FAMR";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("nric", "nric");
            tableMapping.ColumnMappings.Add("refnum", "refnum");
            tableMapping.ColumnMappings.Add("empnum", "empnum");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("relationship", "relationship");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("remark", "remark");
            tableMapping.ColumnMappings.Add("user", "user");
            tableMapping.ColumnMappings.Add("flag", "flag");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("created", "created");
            tableMapping.ColumnMappings.Add("modified", "modified");
            tableMapping.ColumnMappings.Add("guid", "guid");
            tableMapping.ColumnMappings.Add("createdby", "createdby");
            tableMapping.ColumnMappings.Add("contact", "contact");
            tableMapping.ColumnMappings.Add("fnric", "fnric");
            tableMapping.ColumnMappings.Add("fbirthcertificate", "fbirthcertificate");
            tableMapping.ColumnMappings.Add("age", "age");
            tableMapping.ColumnMappings.Add("occupation", "occupation");
            tableMapping.ColumnMappings.Add("company", "company");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FAMR] WHERE (([ID] = @Original_ID) AND ((@IsNull_nric = 1 AND " +
                "[nric] IS NULL) OR ([nric] = @Original_nric)) AND ((@IsNull_refnum = 1 AND [refn" +
                "um] IS NULL) OR ([refnum] = @Original_refnum)) AND ((@IsNull_empnum = 1 AND [emp" +
                "num] IS NULL) OR ([empnum] = @Original_empnum)) AND ((@IsNull_name = 1 AND [name" +
                "] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_relationship = 1 AND [rel" +
                "ationship] IS NULL) OR ([relationship] = @Original_relationship)) AND ((@IsNull_" +
                "gender = 1 AND [gender] IS NULL) OR ([gender] = @Original_gender)) AND ((@IsNull" +
                "_remark = 1 AND [remark] IS NULL) OR ([remark] = @Original_remark)) AND ((@IsNul" +
                "l_user = 1 AND [user] IS NULL) OR ([user] = @Original_user)) AND ((@IsNull_flag " +
                "= 1 AND [flag] IS NULL) OR ([flag] = @Original_flag)) AND ((@IsNull_status = 1 A" +
                "ND [status] IS NULL) OR ([status] = @Original_status)) AND ((@IsNull_created = 1" +
                " AND [created] IS NULL) OR ([created] = @Original_created)) AND ((@IsNull_modifi" +
                "ed = 1 AND [modified] IS NULL) OR ([modified] = @Original_modified)) AND ((@IsNu" +
                "ll_guid = 1 AND [guid] IS NULL) OR ([guid] = @Original_guid)) AND ((@IsNull_crea" +
                "tedby = 1 AND [createdby] IS NULL) OR ([createdby] = @Original_createdby)) AND (" +
                "(@IsNull_contact = 1 AND [contact] IS NULL) OR ([contact] = @Original_contact)) " +
                "AND ((@IsNull_fnric = 1 AND [fnric] IS NULL) OR ([fnric] = @Original_fnric)) AND" +
                " ((@IsNull_fbirthcertificate = 1 AND [fbirthcertificate] IS NULL) OR ([fbirthcer" +
                "tificate] = @Original_fbirthcertificate)) AND ((@IsNull_age = 1 AND [age] IS NUL" +
                "L) OR ([age] = @Original_age)) AND ((@IsNull_occupation = 1 AND [occupation] IS " +
                "NULL) OR ([occupation] = @Original_occupation)) AND ((@IsNull_company = 1 AND [c" +
                "ompany] IS NULL) OR ([company] = @Original_company)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nric", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nric", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_refnum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refnum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_refnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refnum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_empnum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empnum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_empnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empnum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_relationship", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relationship", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_relationship", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_status", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_guid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_guid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createdby", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdby", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createdby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdby", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_contact", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_contact", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fnric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fnric", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fnric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fnric", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fbirthcertificate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbirthcertificate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fbirthcertificate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbirthcertificate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_occupation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_occupation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FAMR] ([ID], [nric], [refnum], [empnum], [name], [relationship], [gender], [remark], [user], [flag], [status], [created], [modified], [guid], [createdby], [contact], [fnric], [fbirthcertificate], [age], [occupation], [company]) VALUES (@ID, @nric, @refnum, @empnum, @name, @relationship, @gender, @remark, @user, @flag, @status, @created, @modified, @guid, @createdby, @contact, @fnric, @fbirthcertificate, @age, @occupation, @company);
SELECT ID, nric, refnum, empnum, name, relationship, gender, remark, [user], flag, status, created, modified, guid, createdby, contact, fnric, fbirthcertificate, age, occupation, company FROM FAMR WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nric", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@refnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@relationship", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@guid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createdby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contact", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fnric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fnric", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fbirthcertificate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbirthcertificate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@occupation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[FAMR] SET [ID] = @ID, [nric] = @nric, [refnum] = @refnum, [empnum] " +
                "= @empnum, [name] = @name, [relationship] = @relationship, [gender] = @gender, [" +
                "remark] = @remark, [user] = @user, [flag] = @flag, [status] = @status, [created]" +
                " = @created, [modified] = @modified, [guid] = @guid, [createdby] = @createdby, [" +
                "contact] = @contact, [fnric] = @fnric, [fbirthcertificate] = @fbirthcertificate," +
                " [age] = @age, [occupation] = @occupation, [company] = @company WHERE (([ID] = @" +
                "Original_ID) AND ((@IsNull_nric = 1 AND [nric] IS NULL) OR ([nric] = @Original_n" +
                "ric)) AND ((@IsNull_refnum = 1 AND [refnum] IS NULL) OR ([refnum] = @Original_re" +
                "fnum)) AND ((@IsNull_empnum = 1 AND [empnum] IS NULL) OR ([empnum] = @Original_e" +
                "mpnum)) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name))" +
                " AND ((@IsNull_relationship = 1 AND [relationship] IS NULL) OR ([relationship] =" +
                " @Original_relationship)) AND ((@IsNull_gender = 1 AND [gender] IS NULL) OR ([ge" +
                "nder] = @Original_gender)) AND ((@IsNull_remark = 1 AND [remark] IS NULL) OR ([r" +
                "emark] = @Original_remark)) AND ((@IsNull_user = 1 AND [user] IS NULL) OR ([user" +
                "] = @Original_user)) AND ((@IsNull_flag = 1 AND [flag] IS NULL) OR ([flag] = @Or" +
                "iginal_flag)) AND ((@IsNull_status = 1 AND [status] IS NULL) OR ([status] = @Ori" +
                "ginal_status)) AND ((@IsNull_created = 1 AND [created] IS NULL) OR ([created] = " +
                "@Original_created)) AND ((@IsNull_modified = 1 AND [modified] IS NULL) OR ([modi" +
                "fied] = @Original_modified)) AND ((@IsNull_guid = 1 AND [guid] IS NULL) OR ([gui" +
                "d] = @Original_guid)) AND ((@IsNull_createdby = 1 AND [createdby] IS NULL) OR ([" +
                "createdby] = @Original_createdby)) AND ((@IsNull_contact = 1 AND [contact] IS NU" +
                "LL) OR ([contact] = @Original_contact)) AND ((@IsNull_fnric = 1 AND [fnric] IS N" +
                "ULL) OR ([fnric] = @Original_fnric)) AND ((@IsNull_fbirthcertificate = 1 AND [fb" +
                "irthcertificate] IS NULL) OR ([fbirthcertificate] = @Original_fbirthcertificate)" +
                ") AND ((@IsNull_age = 1 AND [age] IS NULL) OR ([age] = @Original_age)) AND ((@Is" +
                "Null_occupation = 1 AND [occupation] IS NULL) OR ([occupation] = @Original_occup" +
                "ation)) AND ((@IsNull_company = 1 AND [company] IS NULL) OR ([company] = @Origin" +
                "al_company)));\r\nSELECT ID, nric, refnum, empnum, name, relationship, gender, rem" +
                "ark, [user], flag, status, created, modified, guid, createdby, contact, fnric, f" +
                "birthcertificate, age, occupation, company FROM FAMR WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nric", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@refnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empnum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@relationship", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@guid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createdby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdby", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contact", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fnric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fnric", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fbirthcertificate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbirthcertificate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@occupation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nric", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nric", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_refnum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refnum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_refnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refnum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_empnum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empnum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_empnum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empnum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_relationship", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relationship", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_relationship", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_status", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_guid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_guid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createdby", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdby", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createdby", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdby", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_contact", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_contact", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fnric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fnric", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fnric", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fnric", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fbirthcertificate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbirthcertificate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fbirthcertificate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbirthcertificate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_occupation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_occupation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ATL.Properties.Settings.Default.ATLConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, nric, refnum, empnum, name, relationship, gender, remark, [user], flag" +
                ", status, created, modified, guid, createdby, contact, fnric, fbirthcertificate," +
                " age, occupation, company FROM dbo.FAMR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HEMPHds1.FAMRDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HEMPHds1.FAMRDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HEMPHds1.FAMRDataTable dataTable = new HEMPHds1.FAMRDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HEMPHds1.FAMRDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HEMPHds1 dataSet) {
            return this.Adapter.Update(dataSet, "FAMR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_ID, 
                    string Original_nric, 
                    string Original_refnum, 
                    string Original_empnum, 
                    string Original_name, 
                    string Original_relationship, 
                    string Original_gender, 
                    string Original_remark, 
                    string Original_user, 
                    string Original_flag, 
                    string Original_status, 
                    global::System.Nullable<global::System.DateTime> Original_created, 
                    global::System.Nullable<global::System.DateTime> Original_modified, 
                    string Original_guid, 
                    string Original_createdby, 
                    string Original_contact, 
                    string Original_fnric, 
                    string Original_fbirthcertificate, 
                    global::System.Nullable<int> Original_age, 
                    string Original_occupation, 
                    string Original_company) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            if ((Original_nric == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_nric));
            }
            if ((Original_refnum == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_refnum));
            }
            if ((Original_empnum == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_empnum));
            }
            if ((Original_name == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_name));
            }
            if ((Original_relationship == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_relationship));
            }
            if ((Original_gender == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_gender));
            }
            if ((Original_remark == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_remark));
            }
            if ((Original_user == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_user));
            }
            if ((Original_flag == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_flag));
            }
            if ((Original_status == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_status));
            }
            if ((Original_created.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_created.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_modified.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_modified.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_guid == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_guid));
            }
            if ((Original_createdby == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_createdby));
            }
            if ((Original_contact == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_contact));
            }
            if ((Original_fnric == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_fnric));
            }
            if ((Original_fbirthcertificate == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_fbirthcertificate));
            }
            if ((Original_age.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_age.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_occupation == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_occupation));
            }
            if ((Original_company == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_company));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long ID, 
                    string nric, 
                    string refnum, 
                    string empnum, 
                    string name, 
                    string relationship, 
                    string gender, 
                    string remark, 
                    string user, 
                    string flag, 
                    string status, 
                    global::System.Nullable<global::System.DateTime> created, 
                    global::System.Nullable<global::System.DateTime> modified, 
                    string guid, 
                    string createdby, 
                    string contact, 
                    string fnric, 
                    string fbirthcertificate, 
                    global::System.Nullable<int> age, 
                    string occupation, 
                    string company) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(ID));
            if ((nric == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nric));
            }
            if ((refnum == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(refnum));
            }
            if ((empnum == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(empnum));
            }
            if ((name == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(name));
            }
            if ((relationship == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(relationship));
            }
            if ((gender == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(gender));
            }
            if ((remark == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(remark));
            }
            if ((user == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(user));
            }
            if ((flag == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(flag));
            }
            if ((status == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(status));
            }
            if ((created.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(created.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((modified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(modified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((guid == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(guid));
            }
            if ((createdby == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(createdby));
            }
            if ((contact == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(contact));
            }
            if ((fnric == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(fnric));
            }
            if ((fbirthcertificate == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(fbirthcertificate));
            }
            if ((age.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(age.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((occupation == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(occupation));
            }
            if ((company == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(company));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long ID, 
                    string nric, 
                    string refnum, 
                    string empnum, 
                    string name, 
                    string relationship, 
                    string gender, 
                    string remark, 
                    string user, 
                    string flag, 
                    string status, 
                    global::System.Nullable<global::System.DateTime> created, 
                    global::System.Nullable<global::System.DateTime> modified, 
                    string guid, 
                    string createdby, 
                    string contact, 
                    string fnric, 
                    string fbirthcertificate, 
                    global::System.Nullable<int> age, 
                    string occupation, 
                    string company, 
                    long Original_ID, 
                    string Original_nric, 
                    string Original_refnum, 
                    string Original_empnum, 
                    string Original_name, 
                    string Original_relationship, 
                    string Original_gender, 
                    string Original_remark, 
                    string Original_user, 
                    string Original_flag, 
                    string Original_status, 
                    global::System.Nullable<global::System.DateTime> Original_created, 
                    global::System.Nullable<global::System.DateTime> Original_modified, 
                    string Original_guid, 
                    string Original_createdby, 
                    string Original_contact, 
                    string Original_fnric, 
                    string Original_fbirthcertificate, 
                    global::System.Nullable<int> Original_age, 
                    string Original_occupation, 
                    string Original_company) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(ID));
            if ((nric == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nric));
            }
            if ((refnum == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(refnum));
            }
            if ((empnum == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(empnum));
            }
            if ((name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(name));
            }
            if ((relationship == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(relationship));
            }
            if ((gender == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(gender));
            }
            if ((remark == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(remark));
            }
            if ((user == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(user));
            }
            if ((flag == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(flag));
            }
            if ((status == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(status));
            }
            if ((created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((modified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(modified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((guid == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(guid));
            }
            if ((createdby == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(createdby));
            }
            if ((contact == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(contact));
            }
            if ((fnric == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(fnric));
            }
            if ((fbirthcertificate == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(fbirthcertificate));
            }
            if ((age.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(age.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((occupation == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(occupation));
            }
            if ((company == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(company));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((long)(Original_ID));
            if ((Original_nric == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_nric));
            }
            if ((Original_refnum == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_refnum));
            }
            if ((Original_empnum == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_empnum));
            }
            if ((Original_name == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_name));
            }
            if ((Original_relationship == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_relationship));
            }
            if ((Original_gender == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_gender));
            }
            if ((Original_remark == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_remark));
            }
            if ((Original_user == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_user));
            }
            if ((Original_flag == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_flag));
            }
            if ((Original_status == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_status));
            }
            if ((Original_created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_modified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_modified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_guid == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_guid));
            }
            if ((Original_createdby == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_createdby));
            }
            if ((Original_contact == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_contact));
            }
            if ((Original_fnric == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_fnric));
            }
            if ((Original_fbirthcertificate == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_fbirthcertificate));
            }
            if ((Original_age.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_age.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_occupation == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_occupation));
            }
            if ((Original_company == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_company));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nric, 
                    string refnum, 
                    string empnum, 
                    string name, 
                    string relationship, 
                    string gender, 
                    string remark, 
                    string user, 
                    string flag, 
                    string status, 
                    global::System.Nullable<global::System.DateTime> created, 
                    global::System.Nullable<global::System.DateTime> modified, 
                    string guid, 
                    string createdby, 
                    string contact, 
                    string fnric, 
                    string fbirthcertificate, 
                    global::System.Nullable<int> age, 
                    string occupation, 
                    string company, 
                    long Original_ID, 
                    string Original_nric, 
                    string Original_refnum, 
                    string Original_empnum, 
                    string Original_name, 
                    string Original_relationship, 
                    string Original_gender, 
                    string Original_remark, 
                    string Original_user, 
                    string Original_flag, 
                    string Original_status, 
                    global::System.Nullable<global::System.DateTime> Original_created, 
                    global::System.Nullable<global::System.DateTime> Original_modified, 
                    string Original_guid, 
                    string Original_createdby, 
                    string Original_contact, 
                    string Original_fnric, 
                    string Original_fbirthcertificate, 
                    global::System.Nullable<int> Original_age, 
                    string Original_occupation, 
                    string Original_company) {
            return this.Update(Original_ID, nric, refnum, empnum, name, relationship, gender, remark, user, flag, status, created, modified, guid, createdby, contact, fnric, fbirthcertificate, age, occupation, company, Original_ID, Original_nric, Original_refnum, Original_empnum, Original_name, Original_relationship, Original_gender, Original_remark, Original_user, Original_flag, Original_status, Original_created, Original_modified, Original_guid, Original_createdby, Original_contact, Original_fnric, Original_fbirthcertificate, Original_age, Original_occupation, Original_company);
        }
    }
}

#pragma warning restore 1591