//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9164
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.MAV.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("mavfrm")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class mavfrm : global::System.Data.DataSet {
        
        private MATMDataTable tableMATM;
        
        private mavhDataTable tablemavh;
        
        private mav1DataTable tablemav1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public mavfrm() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected mavfrm(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MATM"] != null)) {
                    base.Tables.Add(new MATMDataTable(ds.Tables["MATM"]));
                }
                if ((ds.Tables["mavh"] != null)) {
                    base.Tables.Add(new mavhDataTable(ds.Tables["mavh"]));
                }
                if ((ds.Tables["mav1"] != null)) {
                    base.Tables.Add(new mav1DataTable(ds.Tables["mav1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATMDataTable MATM {
            get {
                return this.tableMATM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mavhDataTable mavh {
            get {
                return this.tablemavh;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mav1DataTable mav1 {
            get {
                return this.tablemav1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            mavfrm cln = ((mavfrm)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MATM"] != null)) {
                    base.Tables.Add(new MATMDataTable(ds.Tables["MATM"]));
                }
                if ((ds.Tables["mavh"] != null)) {
                    base.Tables.Add(new mavhDataTable(ds.Tables["mavh"]));
                }
                if ((ds.Tables["mav1"] != null)) {
                    base.Tables.Add(new mav1DataTable(ds.Tables["mav1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMATM = ((MATMDataTable)(base.Tables["MATM"]));
            if ((initTable == true)) {
                if ((this.tableMATM != null)) {
                    this.tableMATM.InitVars();
                }
            }
            this.tablemavh = ((mavhDataTable)(base.Tables["mavh"]));
            if ((initTable == true)) {
                if ((this.tablemavh != null)) {
                    this.tablemavh.InitVars();
                }
            }
            this.tablemav1 = ((mav1DataTable)(base.Tables["mav1"]));
            if ((initTable == true)) {
                if ((this.tablemav1 != null)) {
                    this.tablemav1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "mavfrm";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/mavfrm.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMATM = new MATMDataTable();
            base.Tables.Add(this.tableMATM);
            this.tablemavh = new mavhDataTable();
            base.Tables.Add(this.tablemavh);
            this.tablemav1 = new mav1DataTable();
            base.Tables.Add(this.tablemav1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemavh() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemav1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            mavfrm ds = new mavfrm();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MATMRowChangeEventHandler(object sender, MATMRowChangeEvent e);
        
        public delegate void mavhRowChangeEventHandler(object sender, mavhRowChangeEvent e);
        
        public delegate void mav1RowChangeEventHandler(object sender, mav1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columnbarcode;
            
            private global::System.Data.DataColumn columnpcatcode;
            
            private global::System.Data.DataColumn columnpbrdcode;
            
            private global::System.Data.DataColumn columnmodelcode;
            
            private global::System.Data.DataColumn columnnonstock;
            
            private global::System.Data.DataColumn columnpstatus;
            
            private global::System.Data.DataColumn columnploftcode;
            
            private global::System.Data.DataColumn columnpflexcode;
            
            private global::System.Data.DataColumn columnpshfcode;
            
            private global::System.Data.DataColumn columnpcolcode;
            
            private global::System.Data.DataColumn columnpszcode;
            
            private global::System.Data.DataColumn columnuomcode;
            
            private global::System.Data.DataColumn columnoricountry;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columnsaleacc;
            
            private global::System.Data.DataColumn columnpurcacc;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnprintPrice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATMDataTable() {
                this.TableName = "MATM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn barcodeColumn {
                get {
                    return this.columnbarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcatcodeColumn {
                get {
                    return this.columnpcatcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pbrdcodeColumn {
                get {
                    return this.columnpbrdcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelcodeColumn {
                get {
                    return this.columnmodelcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nonstockColumn {
                get {
                    return this.columnnonstock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pstatusColumn {
                get {
                    return this.columnpstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ploftcodeColumn {
                get {
                    return this.columnploftcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pflexcodeColumn {
                get {
                    return this.columnpflexcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pshfcodeColumn {
                get {
                    return this.columnpshfcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcolcodeColumn {
                get {
                    return this.columnpcolcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pszcodeColumn {
                get {
                    return this.columnpszcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomcodeColumn {
                get {
                    return this.columnuomcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricountryColumn {
                get {
                    return this.columnoricountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saleaccColumn {
                get {
                    return this.columnsaleacc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn purcaccColumn {
                get {
                    return this.columnpurcacc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn printPriceColumn {
                get {
                    return this.columnprintPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATMRow this[int index] {
                get {
                    return ((MATMRow)(this.Rows[index]));
                }
            }
            
            public event MATMRowChangeEventHandler MATMRowChanging;
            
            public event MATMRowChangeEventHandler MATMRowChanged;
            
            public event MATMRowChangeEventHandler MATMRowDeleting;
            
            public event MATMRowChangeEventHandler MATMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATMRow(MATMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATMRow AddMATMRow(
                        long ID, 
                        string matnum, 
                        string matname, 
                        string barcode, 
                        string pcatcode, 
                        string pbrdcode, 
                        string modelcode, 
                        bool nonstock, 
                        string pstatus, 
                        string ploftcode, 
                        string pflexcode, 
                        string pshfcode, 
                        string pcolcode, 
                        string pszcode, 
                        string uomcode, 
                        string oricountry, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string guid, 
                        string uom, 
                        string saleacc, 
                        string purcacc, 
                        int qty, 
                        bool printPrice) {
                MATMRow rowMATMRow = ((MATMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        matnum,
                        matname,
                        barcode,
                        pcatcode,
                        pbrdcode,
                        modelcode,
                        nonstock,
                        pstatus,
                        ploftcode,
                        pflexcode,
                        pshfcode,
                        pcolcode,
                        pszcode,
                        uomcode,
                        oricountry,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        guid,
                        uom,
                        saleacc,
                        purcacc,
                        qty,
                        printPrice};
                rowMATMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATMRow);
                return rowMATMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATMRow FindByID(long ID) {
                return ((MATMRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATMDataTable cln = ((MATMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columnbarcode = base.Columns["barcode"];
                this.columnpcatcode = base.Columns["pcatcode"];
                this.columnpbrdcode = base.Columns["pbrdcode"];
                this.columnmodelcode = base.Columns["modelcode"];
                this.columnnonstock = base.Columns["nonstock"];
                this.columnpstatus = base.Columns["pstatus"];
                this.columnploftcode = base.Columns["ploftcode"];
                this.columnpflexcode = base.Columns["pflexcode"];
                this.columnpshfcode = base.Columns["pshfcode"];
                this.columnpcolcode = base.Columns["pcolcode"];
                this.columnpszcode = base.Columns["pszcode"];
                this.columnuomcode = base.Columns["uomcode"];
                this.columnoricountry = base.Columns["oricountry"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnguid = base.Columns["guid"];
                this.columnuom = base.Columns["uom"];
                this.columnsaleacc = base.Columns["saleacc"];
                this.columnpurcacc = base.Columns["purcacc"];
                this.columnqty = base.Columns["qty"];
                this.columnprintPrice = base.Columns["printPrice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columnbarcode = new global::System.Data.DataColumn("barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbarcode);
                this.columnpcatcode = new global::System.Data.DataColumn("pcatcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcatcode);
                this.columnpbrdcode = new global::System.Data.DataColumn("pbrdcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpbrdcode);
                this.columnmodelcode = new global::System.Data.DataColumn("modelcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodelcode);
                this.columnnonstock = new global::System.Data.DataColumn("nonstock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonstock);
                this.columnpstatus = new global::System.Data.DataColumn("pstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstatus);
                this.columnploftcode = new global::System.Data.DataColumn("ploftcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnploftcode);
                this.columnpflexcode = new global::System.Data.DataColumn("pflexcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpflexcode);
                this.columnpshfcode = new global::System.Data.DataColumn("pshfcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpshfcode);
                this.columnpcolcode = new global::System.Data.DataColumn("pcolcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcolcode);
                this.columnpszcode = new global::System.Data.DataColumn("pszcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpszcode);
                this.columnuomcode = new global::System.Data.DataColumn("uomcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuomcode);
                this.columnoricountry = new global::System.Data.DataColumn("oricountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricountry);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columnsaleacc = new global::System.Data.DataColumn("saleacc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaleacc);
                this.columnpurcacc = new global::System.Data.DataColumn("purcacc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpurcacc);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnprintPrice = new global::System.Data.DataColumn("printPrice", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprintPrice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnmatnum.MaxLength = 20;
                this.columnmatname.MaxLength = 50;
                this.columnbarcode.MaxLength = 20;
                this.columnpcatcode.MaxLength = 5;
                this.columnpbrdcode.MaxLength = 5;
                this.columnmodelcode.MaxLength = 10;
                this.columnpstatus.MaxLength = 10;
                this.columnploftcode.MaxLength = 5;
                this.columnpflexcode.MaxLength = 5;
                this.columnpshfcode.MaxLength = 5;
                this.columnpcolcode.MaxLength = 5;
                this.columnpszcode.MaxLength = 5;
                this.columnuomcode.MaxLength = 5;
                this.columnoricountry.MaxLength = 5;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnguid.MaxLength = 32;
                this.columnuom.MaxLength = 10;
                this.columnsaleacc.MaxLength = 20;
                this.columnpurcacc.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATMRow NewMATMRow() {
                return ((MATMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATMRowChanged != null)) {
                    this.MATMRowChanged(this, new MATMRowChangeEvent(((MATMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATMRowChanging != null)) {
                    this.MATMRowChanging(this, new MATMRowChangeEvent(((MATMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATMRowDeleted != null)) {
                    this.MATMRowDeleted(this, new MATMRowChangeEvent(((MATMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATMRowDeleting != null)) {
                    this.MATMRowDeleting(this, new MATMRowChangeEvent(((MATMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATMRow(MATMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                mavfrm ds = new mavfrm();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mavhDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnopbal;
            
            private global::System.Data.DataColumn columnstkdate;
            
            private global::System.Data.DataColumn columndetail;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columntransferopt;
            
            private global::System.Data.DataColumn columnwhnumfrm;
            
            private global::System.Data.DataColumn columnwhnumto;
            
            private global::System.Data.DataColumn columnwhnum;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columnSystemYear;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnmavtype;
            
            private global::System.Data.DataColumn columnsitenum;
            
            private global::System.Data.DataColumn columnpd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mavhDataTable() {
                this.TableName = "mavh";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mavhDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected mavhDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn opbalColumn {
                get {
                    return this.columnopbal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stkdateColumn {
                get {
                    return this.columnstkdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn detailColumn {
                get {
                    return this.columndetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transferoptColumn {
                get {
                    return this.columntransferopt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn whnumfrmColumn {
                get {
                    return this.columnwhnumfrm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn whnumtoColumn {
                get {
                    return this.columnwhnumto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn whnumColumn {
                get {
                    return this.columnwhnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemYearColumn {
                get {
                    return this.columnSystemYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mavtypeColumn {
                get {
                    return this.columnmavtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenumColumn {
                get {
                    return this.columnsitenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pdColumn {
                get {
                    return this.columnpd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mavhRow this[int index] {
                get {
                    return ((mavhRow)(this.Rows[index]));
                }
            }
            
            public event mavhRowChangeEventHandler mavhRowChanging;
            
            public event mavhRowChangeEventHandler mavhRowChanged;
            
            public event mavhRowChangeEventHandler mavhRowDeleting;
            
            public event mavhRowChangeEventHandler mavhRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmavhRow(mavhRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mavhRow AddmavhRow(
                        long ID, 
                        string refnum, 
                        bool opbal, 
                        System.DateTime stkdate, 
                        string detail, 
                        System.DateTime trandate, 
                        bool transferopt, 
                        string whnumfrm, 
                        string whnumto, 
                        string whnum, 
                        int period, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string coy, 
                        int SystemYear, 
                        string createdby, 
                        string mavtype, 
                        string sitenum, 
                        int pd) {
                mavhRow rowmavhRow = ((mavhRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        opbal,
                        stkdate,
                        detail,
                        trandate,
                        transferopt,
                        whnumfrm,
                        whnumto,
                        whnum,
                        period,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        coy,
                        SystemYear,
                        createdby,
                        mavtype,
                        sitenum,
                        pd};
                rowmavhRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmavhRow);
                return rowmavhRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mavhRow FindByID(long ID) {
                return ((mavhRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                mavhDataTable cln = ((mavhDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mavhDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnopbal = base.Columns["opbal"];
                this.columnstkdate = base.Columns["stkdate"];
                this.columndetail = base.Columns["detail"];
                this.columntrandate = base.Columns["trandate"];
                this.columntransferopt = base.Columns["transferopt"];
                this.columnwhnumfrm = base.Columns["whnumfrm"];
                this.columnwhnumto = base.Columns["whnumto"];
                this.columnwhnum = base.Columns["whnum"];
                this.columnperiod = base.Columns["period"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoy = base.Columns["coy"];
                this.columnSystemYear = base.Columns["SystemYear"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnmavtype = base.Columns["mavtype"];
                this.columnsitenum = base.Columns["sitenum"];
                this.columnpd = base.Columns["pd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnopbal = new global::System.Data.DataColumn("opbal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopbal);
                this.columnstkdate = new global::System.Data.DataColumn("stkdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstkdate);
                this.columndetail = new global::System.Data.DataColumn("detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndetail);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columntransferopt = new global::System.Data.DataColumn("transferopt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransferopt);
                this.columnwhnumfrm = new global::System.Data.DataColumn("whnumfrm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwhnumfrm);
                this.columnwhnumto = new global::System.Data.DataColumn("whnumto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwhnumto);
                this.columnwhnum = new global::System.Data.DataColumn("whnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwhnum);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columnSystemYear = new global::System.Data.DataColumn("SystemYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemYear);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnmavtype = new global::System.Data.DataColumn("mavtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmavtype);
                this.columnsitenum = new global::System.Data.DataColumn("sitenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitenum);
                this.columnpd = new global::System.Data.DataColumn("pd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnrefnum.MaxLength = 20;
                this.columndetail.MaxLength = 100;
                this.columnwhnumfrm.MaxLength = 12;
                this.columnwhnumto.MaxLength = 12;
                this.columnwhnum.MaxLength = 12;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncoy.MaxLength = 10;
                this.columncreatedby.MaxLength = 50;
                this.columnmavtype.MaxLength = 50;
                this.columnsitenum.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mavhRow NewmavhRow() {
                return ((mavhRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mavhRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(mavhRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mavhRowChanged != null)) {
                    this.mavhRowChanged(this, new mavhRowChangeEvent(((mavhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mavhRowChanging != null)) {
                    this.mavhRowChanging(this, new mavhRowChangeEvent(((mavhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mavhRowDeleted != null)) {
                    this.mavhRowDeleted(this, new mavhRowChangeEvent(((mavhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mavhRowDeleting != null)) {
                    this.mavhRowDeleting(this, new mavhRowChangeEvent(((mavhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemavhRow(mavhRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                mavfrm ds = new mavfrm();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mavhDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mav1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columnbkqty;
            
            private global::System.Data.DataColumn columnphyqty;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnoriamt;
            
            private global::System.Data.DataColumn columnpostamt;
            
            private global::System.Data.DataColumn columnstdcost;
            
            private global::System.Data.DataColumn columncosamt;
            
            private global::System.Data.DataColumn columnstkdate;
            
            private global::System.Data.DataColumn columndetail;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columnSystemYear;
            
            private global::System.Data.DataColumn columnpd;
            
            private global::System.Data.DataColumn columnmyline;
            
            private global::System.Data.DataColumn columnline;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mav1DataTable() {
                this.TableName = "mav1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mav1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected mav1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bkqtyColumn {
                get {
                    return this.columnbkqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phyqtyColumn {
                get {
                    return this.columnphyqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oriamtColumn {
                get {
                    return this.columnoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn postamtColumn {
                get {
                    return this.columnpostamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stdcostColumn {
                get {
                    return this.columnstdcost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cosamtColumn {
                get {
                    return this.columncosamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stkdateColumn {
                get {
                    return this.columnstkdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn detailColumn {
                get {
                    return this.columndetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemYearColumn {
                get {
                    return this.columnSystemYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pdColumn {
                get {
                    return this.columnpd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mylineColumn {
                get {
                    return this.columnmyline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineColumn {
                get {
                    return this.columnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mav1Row this[int index] {
                get {
                    return ((mav1Row)(this.Rows[index]));
                }
            }
            
            public event mav1RowChangeEventHandler mav1RowChanging;
            
            public event mav1RowChangeEventHandler mav1RowChanged;
            
            public event mav1RowChangeEventHandler mav1RowDeleting;
            
            public event mav1RowChangeEventHandler mav1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmav1Row(mav1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mav1Row Addmav1Row(
                        long ID, 
                        string refnum, 
                        string matnum, 
                        string uom, 
                        decimal bkqty, 
                        decimal phyqty, 
                        decimal qty, 
                        decimal price, 
                        decimal oriamt, 
                        decimal postamt, 
                        decimal stdcost, 
                        decimal cosamt, 
                        System.DateTime stkdate, 
                        string detail, 
                        System.DateTime trandate, 
                        int period, 
                        string user, 
                        string flag, 
                        string status, 
                        string createdby, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string coy, 
                        int SystemYear, 
                        int pd, 
                        decimal myline, 
                        decimal line) {
                mav1Row rowmav1Row = ((mav1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        matnum,
                        uom,
                        bkqty,
                        phyqty,
                        qty,
                        price,
                        oriamt,
                        postamt,
                        stdcost,
                        cosamt,
                        stkdate,
                        detail,
                        trandate,
                        period,
                        user,
                        flag,
                        status,
                        createdby,
                        created,
                        modified,
                        coy,
                        SystemYear,
                        pd,
                        myline,
                        line};
                rowmav1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowmav1Row);
                return rowmav1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mav1Row FindByID(long ID) {
                return ((mav1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                mav1DataTable cln = ((mav1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mav1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnuom = base.Columns["uom"];
                this.columnbkqty = base.Columns["bkqty"];
                this.columnphyqty = base.Columns["phyqty"];
                this.columnqty = base.Columns["qty"];
                this.columnprice = base.Columns["price"];
                this.columnoriamt = base.Columns["oriamt"];
                this.columnpostamt = base.Columns["postamt"];
                this.columnstdcost = base.Columns["stdcost"];
                this.columncosamt = base.Columns["cosamt"];
                this.columnstkdate = base.Columns["stkdate"];
                this.columndetail = base.Columns["detail"];
                this.columntrandate = base.Columns["trandate"];
                this.columnperiod = base.Columns["period"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoy = base.Columns["coy"];
                this.columnSystemYear = base.Columns["SystemYear"];
                this.columnpd = base.Columns["pd"];
                this.columnmyline = base.Columns["myline"];
                this.columnline = base.Columns["line"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columnbkqty = new global::System.Data.DataColumn("bkqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbkqty);
                this.columnphyqty = new global::System.Data.DataColumn("phyqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphyqty);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnoriamt = new global::System.Data.DataColumn("oriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriamt);
                this.columnpostamt = new global::System.Data.DataColumn("postamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostamt);
                this.columnstdcost = new global::System.Data.DataColumn("stdcost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstdcost);
                this.columncosamt = new global::System.Data.DataColumn("cosamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncosamt);
                this.columnstkdate = new global::System.Data.DataColumn("stkdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstkdate);
                this.columndetail = new global::System.Data.DataColumn("detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndetail);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columnSystemYear = new global::System.Data.DataColumn("SystemYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemYear);
                this.columnpd = new global::System.Data.DataColumn("pd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd);
                this.columnmyline = new global::System.Data.DataColumn("myline", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmyline);
                this.columnline = new global::System.Data.DataColumn("line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnrefnum.MaxLength = 20;
                this.columnmatnum.MaxLength = 20;
                this.columnuom.MaxLength = 5;
                this.columndetail.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncreatedby.MaxLength = 50;
                this.columncoy.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mav1Row Newmav1Row() {
                return ((mav1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mav1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(mav1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mav1RowChanged != null)) {
                    this.mav1RowChanged(this, new mav1RowChangeEvent(((mav1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mav1RowChanging != null)) {
                    this.mav1RowChanging(this, new mav1RowChangeEvent(((mav1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mav1RowDeleted != null)) {
                    this.mav1RowDeleted(this, new mav1RowChangeEvent(((mav1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mav1RowDeleting != null)) {
                    this.mav1RowDeleting(this, new mav1RowChangeEvent(((mav1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemav1Row(mav1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                mavfrm ds = new mavfrm();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mav1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATMRow : global::System.Data.DataRow {
            
            private MATMDataTable tableMATM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATM = ((MATMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableMATM.IDColumn]));
                }
                set {
                    this[this.tableMATM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tableMATM.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tableMATM.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string barcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.barcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'barcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.barcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pcatcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.pcatcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pcatcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.pcatcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pbrdcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.pbrdcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pbrdcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.pbrdcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string modelcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.modelcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modelcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.modelcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool nonstock {
                get {
                    try {
                        return ((bool)(this[this.tableMATM.nonstockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nonstock\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.nonstockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pstatus {
                get {
                    try {
                        return ((string)(this[this.tableMATM.pstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pstatus\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.pstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ploftcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.ploftcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ploftcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.ploftcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pflexcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.pflexcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pflexcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.pflexcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pshfcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.pshfcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pshfcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.pshfcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pcolcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.pcolcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pcolcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.pcolcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pszcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.pszcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pszcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.pszcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uomcode {
                get {
                    try {
                        return ((string)(this[this.tableMATM.uomcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uomcode\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.uomcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricountry {
                get {
                    try {
                        return ((string)(this[this.tableMATM.oricountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricountry\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.oricountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableMATM.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableMATM.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableMATM.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMATM.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMATM.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string guid {
                get {
                    try {
                        return ((string)(this[this.tableMATM.guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'guid\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tableMATM.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saleacc {
                get {
                    try {
                        return ((string)(this[this.tableMATM.saleaccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saleacc\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.saleaccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string purcacc {
                get {
                    try {
                        return ((string)(this[this.tableMATM.purcaccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'purcacc\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.purcaccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int qty {
                get {
                    try {
                        return ((int)(this[this.tableMATM.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool printPrice {
                get {
                    try {
                        return ((bool)(this[this.tableMATM.printPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'printPrice\' in table \'MATM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATM.printPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tableMATM.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tableMATM.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tableMATM.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tableMATM.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbarcodeNull() {
                return this.IsNull(this.tableMATM.barcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbarcodeNull() {
                this[this.tableMATM.barcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcatcodeNull() {
                return this.IsNull(this.tableMATM.pcatcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcatcodeNull() {
                this[this.tableMATM.pcatcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspbrdcodeNull() {
                return this.IsNull(this.tableMATM.pbrdcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpbrdcodeNull() {
                this[this.tableMATM.pbrdcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelcodeNull() {
                return this.IsNull(this.tableMATM.modelcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelcodeNull() {
                this[this.tableMATM.modelcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnonstockNull() {
                return this.IsNull(this.tableMATM.nonstockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnonstockNull() {
                this[this.tableMATM.nonstockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspstatusNull() {
                return this.IsNull(this.tableMATM.pstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpstatusNull() {
                this[this.tableMATM.pstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsploftcodeNull() {
                return this.IsNull(this.tableMATM.ploftcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetploftcodeNull() {
                this[this.tableMATM.ploftcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspflexcodeNull() {
                return this.IsNull(this.tableMATM.pflexcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpflexcodeNull() {
                this[this.tableMATM.pflexcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspshfcodeNull() {
                return this.IsNull(this.tableMATM.pshfcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpshfcodeNull() {
                this[this.tableMATM.pshfcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcolcodeNull() {
                return this.IsNull(this.tableMATM.pcolcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcolcodeNull() {
                this[this.tableMATM.pcolcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspszcodeNull() {
                return this.IsNull(this.tableMATM.pszcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpszcodeNull() {
                this[this.tableMATM.pszcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomcodeNull() {
                return this.IsNull(this.tableMATM.uomcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomcodeNull() {
                this[this.tableMATM.uomcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricountryNull() {
                return this.IsNull(this.tableMATM.oricountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricountryNull() {
                this[this.tableMATM.oricountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableMATM.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableMATM.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableMATM.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableMATM.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableMATM.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableMATM.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableMATM.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableMATM.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableMATM.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableMATM.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsguidNull() {
                return this.IsNull(this.tableMATM.guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetguidNull() {
                this[this.tableMATM.guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tableMATM.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tableMATM.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaleaccNull() {
                return this.IsNull(this.tableMATM.saleaccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaleaccNull() {
                this[this.tableMATM.saleaccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspurcaccNull() {
                return this.IsNull(this.tableMATM.purcaccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpurcaccNull() {
                this[this.tableMATM.purcaccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tableMATM.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tableMATM.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprintPriceNull() {
                return this.IsNull(this.tableMATM.printPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprintPriceNull() {
                this[this.tableMATM.printPriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class mavhRow : global::System.Data.DataRow {
            
            private mavhDataTable tablemavh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mavhRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemavh = ((mavhDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablemavh.IDColumn]));
                }
                set {
                    this[this.tablemavh.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablemavh.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool opbal {
                get {
                    try {
                        return ((bool)(this[this.tablemavh.opbalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opbal\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.opbalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime stkdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemavh.stkdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stkdate\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.stkdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string detail {
                get {
                    try {
                        return ((string)(this[this.tablemavh.detailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'detail\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.detailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemavh.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool transferopt {
                get {
                    try {
                        return ((bool)(this[this.tablemavh.transferoptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transferopt\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.transferoptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string whnumfrm {
                get {
                    try {
                        return ((string)(this[this.tablemavh.whnumfrmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'whnumfrm\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.whnumfrmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string whnumto {
                get {
                    try {
                        return ((string)(this[this.tablemavh.whnumtoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'whnumto\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.whnumtoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string whnum {
                get {
                    try {
                        return ((string)(this[this.tablemavh.whnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'whnum\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.whnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tablemavh.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablemavh.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablemavh.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablemavh.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemavh.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemavh.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablemavh.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SystemYear {
                get {
                    try {
                        return ((int)(this[this.tablemavh.SystemYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemYear\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.SystemYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablemavh.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mavtype {
                get {
                    try {
                        return ((string)(this[this.tablemavh.mavtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mavtype\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.mavtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitenum {
                get {
                    try {
                        return ((string)(this[this.tablemavh.sitenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitenum\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.sitenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pd {
                get {
                    try {
                        return ((int)(this[this.tablemavh.pdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd\' in table \'mavh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemavh.pdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablemavh.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablemavh.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsopbalNull() {
                return this.IsNull(this.tablemavh.opbalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetopbalNull() {
                this[this.tablemavh.opbalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstkdateNull() {
                return this.IsNull(this.tablemavh.stkdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstkdateNull() {
                this[this.tablemavh.stkdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdetailNull() {
                return this.IsNull(this.tablemavh.detailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdetailNull() {
                this[this.tablemavh.detailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tablemavh.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tablemavh.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransferoptNull() {
                return this.IsNull(this.tablemavh.transferoptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransferoptNull() {
                this[this.tablemavh.transferoptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswhnumfrmNull() {
                return this.IsNull(this.tablemavh.whnumfrmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwhnumfrmNull() {
                this[this.tablemavh.whnumfrmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswhnumtoNull() {
                return this.IsNull(this.tablemavh.whnumtoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwhnumtoNull() {
                this[this.tablemavh.whnumtoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswhnumNull() {
                return this.IsNull(this.tablemavh.whnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwhnumNull() {
                this[this.tablemavh.whnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tablemavh.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tablemavh.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablemavh.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablemavh.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablemavh.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablemavh.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablemavh.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablemavh.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablemavh.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablemavh.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablemavh.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablemavh.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablemavh.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablemavh.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemYearNull() {
                return this.IsNull(this.tablemavh.SystemYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemYearNull() {
                this[this.tablemavh.SystemYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablemavh.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablemavh.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmavtypeNull() {
                return this.IsNull(this.tablemavh.mavtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmavtypeNull() {
                this[this.tablemavh.mavtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenumNull() {
                return this.IsNull(this.tablemavh.sitenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenumNull() {
                this[this.tablemavh.sitenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspdNull() {
                return this.IsNull(this.tablemavh.pdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpdNull() {
                this[this.tablemavh.pdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class mav1Row : global::System.Data.DataRow {
            
            private mav1DataTable tablemav1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mav1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemav1 = ((mav1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablemav1.IDColumn]));
                }
                set {
                    this[this.tablemav1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablemav1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tablemav1.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tablemav1.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bkqty {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.bkqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bkqty\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.bkqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal phyqty {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.phyqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phyqty\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.phyqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oriamt {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.oriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oriamt\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.oriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal postamt {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.postamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postamt\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.postamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stdcost {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.stdcostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stdcost\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.stdcostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal cosamt {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.cosamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cosamt\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.cosamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime stkdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemav1.stkdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stkdate\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.stkdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string detail {
                get {
                    try {
                        return ((string)(this[this.tablemav1.detailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'detail\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.detailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemav1.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tablemav1.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablemav1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablemav1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablemav1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablemav1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemav1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemav1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablemav1.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SystemYear {
                get {
                    try {
                        return ((int)(this[this.tablemav1.SystemYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemYear\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.SystemYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pd {
                get {
                    try {
                        return ((int)(this[this.tablemav1.pdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.pdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal myline {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.mylineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'myline\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.mylineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal line {
                get {
                    try {
                        return ((decimal)(this[this.tablemav1.lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'line\' in table \'mav1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemav1.lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablemav1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablemav1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tablemav1.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tablemav1.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tablemav1.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tablemav1.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbkqtyNull() {
                return this.IsNull(this.tablemav1.bkqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbkqtyNull() {
                this[this.tablemav1.bkqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphyqtyNull() {
                return this.IsNull(this.tablemav1.phyqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphyqtyNull() {
                this[this.tablemav1.phyqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tablemav1.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tablemav1.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tablemav1.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tablemav1.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoriamtNull() {
                return this.IsNull(this.tablemav1.oriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoriamtNull() {
                this[this.tablemav1.oriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspostamtNull() {
                return this.IsNull(this.tablemav1.postamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpostamtNull() {
                this[this.tablemav1.postamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstdcostNull() {
                return this.IsNull(this.tablemav1.stdcostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstdcostNull() {
                this[this.tablemav1.stdcostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscosamtNull() {
                return this.IsNull(this.tablemav1.cosamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcosamtNull() {
                this[this.tablemav1.cosamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstkdateNull() {
                return this.IsNull(this.tablemav1.stkdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstkdateNull() {
                this[this.tablemav1.stkdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdetailNull() {
                return this.IsNull(this.tablemav1.detailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdetailNull() {
                this[this.tablemav1.detailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tablemav1.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tablemav1.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tablemav1.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tablemav1.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablemav1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablemav1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablemav1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablemav1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablemav1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablemav1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablemav1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablemav1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablemav1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablemav1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablemav1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablemav1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablemav1.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablemav1.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemYearNull() {
                return this.IsNull(this.tablemav1.SystemYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemYearNull() {
                this[this.tablemav1.SystemYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspdNull() {
                return this.IsNull(this.tablemav1.pdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpdNull() {
                this[this.tablemav1.pdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmylineNull() {
                return this.IsNull(this.tablemav1.mylineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmylineNull() {
                this[this.tablemav1.mylineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNull() {
                return this.IsNull(this.tablemav1.lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNull() {
                this[this.tablemav1.lineColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATMRowChangeEvent : global::System.EventArgs {
            
            private MATMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATMRowChangeEvent(MATMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class mavhRowChangeEvent : global::System.EventArgs {
            
            private mavhRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mavhRowChangeEvent(mavhRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mavhRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class mav1RowChangeEvent : global::System.EventArgs {
            
            private mav1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mav1RowChangeEvent(mav1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mav1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591