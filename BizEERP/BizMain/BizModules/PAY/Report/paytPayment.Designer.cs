//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.PAY.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("paytPayment")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class paytPayment : global::System.Data.DataSet {
        
        private paytDataTable tablepayt;
        
        private APDDataTable tableAPD;
        
        private APMDataTable tableAPM;
        
        private coyDataTable tablecoy;
        
        private PIV1DataTable tablePIV1;
        
        private ACMDataTable tableACM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public paytPayment() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected paytPayment(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["payt"] != null)) {
                    base.Tables.Add(new paytDataTable(ds.Tables["payt"]));
                }
                if ((ds.Tables["APD"] != null)) {
                    base.Tables.Add(new APDDataTable(ds.Tables["APD"]));
                }
                if ((ds.Tables["APM"] != null)) {
                    base.Tables.Add(new APMDataTable(ds.Tables["APM"]));
                }
                if ((ds.Tables["coy"] != null)) {
                    base.Tables.Add(new coyDataTable(ds.Tables["coy"]));
                }
                if ((ds.Tables["PIV1"] != null)) {
                    base.Tables.Add(new PIV1DataTable(ds.Tables["PIV1"]));
                }
                if ((ds.Tables["ACM"] != null)) {
                    base.Tables.Add(new ACMDataTable(ds.Tables["ACM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public paytDataTable payt {
            get {
                return this.tablepayt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APDDataTable APD {
            get {
                return this.tableAPD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APMDataTable APM {
            get {
                return this.tableAPM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public coyDataTable coy {
            get {
                return this.tablecoy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PIV1DataTable PIV1 {
            get {
                return this.tablePIV1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ACMDataTable ACM {
            get {
                return this.tableACM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            paytPayment cln = ((paytPayment)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["payt"] != null)) {
                    base.Tables.Add(new paytDataTable(ds.Tables["payt"]));
                }
                if ((ds.Tables["APD"] != null)) {
                    base.Tables.Add(new APDDataTable(ds.Tables["APD"]));
                }
                if ((ds.Tables["APM"] != null)) {
                    base.Tables.Add(new APMDataTable(ds.Tables["APM"]));
                }
                if ((ds.Tables["coy"] != null)) {
                    base.Tables.Add(new coyDataTable(ds.Tables["coy"]));
                }
                if ((ds.Tables["PIV1"] != null)) {
                    base.Tables.Add(new PIV1DataTable(ds.Tables["PIV1"]));
                }
                if ((ds.Tables["ACM"] != null)) {
                    base.Tables.Add(new ACMDataTable(ds.Tables["ACM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablepayt = ((paytDataTable)(base.Tables["payt"]));
            if ((initTable == true)) {
                if ((this.tablepayt != null)) {
                    this.tablepayt.InitVars();
                }
            }
            this.tableAPD = ((APDDataTable)(base.Tables["APD"]));
            if ((initTable == true)) {
                if ((this.tableAPD != null)) {
                    this.tableAPD.InitVars();
                }
            }
            this.tableAPM = ((APMDataTable)(base.Tables["APM"]));
            if ((initTable == true)) {
                if ((this.tableAPM != null)) {
                    this.tableAPM.InitVars();
                }
            }
            this.tablecoy = ((coyDataTable)(base.Tables["coy"]));
            if ((initTable == true)) {
                if ((this.tablecoy != null)) {
                    this.tablecoy.InitVars();
                }
            }
            this.tablePIV1 = ((PIV1DataTable)(base.Tables["PIV1"]));
            if ((initTable == true)) {
                if ((this.tablePIV1 != null)) {
                    this.tablePIV1.InitVars();
                }
            }
            this.tableACM = ((ACMDataTable)(base.Tables["ACM"]));
            if ((initTable == true)) {
                if ((this.tableACM != null)) {
                    this.tableACM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "paytPayment";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/paytPayment.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablepayt = new paytDataTable();
            base.Tables.Add(this.tablepayt);
            this.tableAPD = new APDDataTable();
            base.Tables.Add(this.tableAPD);
            this.tableAPM = new APMDataTable();
            base.Tables.Add(this.tableAPM);
            this.tablecoy = new coyDataTable();
            base.Tables.Add(this.tablecoy);
            this.tablePIV1 = new PIV1DataTable();
            base.Tables.Add(this.tablePIV1);
            this.tableACM = new ACMDataTable();
            base.Tables.Add(this.tableACM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepayt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecoy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePIV1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeACM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            paytPayment ds = new paytPayment();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void paytRowChangeEventHandler(object sender, paytRowChangeEvent e);
        
        public delegate void APDRowChangeEventHandler(object sender, APDRowChangeEvent e);
        
        public delegate void APMRowChangeEventHandler(object sender, APMRowChangeEvent e);
        
        public delegate void coyRowChangeEventHandler(object sender, coyRowChangeEvent e);
        
        public delegate void PIV1RowChangeEventHandler(object sender, PIV1RowChangeEvent e);
        
        public delegate void ACMRowChangeEventHandler(object sender, ACMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class paytDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columndocunum;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnexrate;
            
            private global::System.Data.DataColumn columngstgrpnum;
            
            private global::System.Data.DataColumn columngstper;
            
            private global::System.Data.DataColumn columnverify;
            
            private global::System.Data.DataColumn columnadvtype;
            
            private global::System.Data.DataColumn columnterms;
            
            private global::System.Data.DataColumn columnptc;
            
            private global::System.Data.DataColumn columnaccnum1;
            
            private global::System.Data.DataColumn columnaccnum2;
            
            private global::System.Data.DataColumn columnoricur;
            
            private global::System.Data.DataColumn columnoricur1;
            
            private global::System.Data.DataColumn columnoricur2;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnbankamt;
            
            private global::System.Data.DataColumn columnbankchg;
            
            private global::System.Data.DataColumn columnoriamt;
            
            private global::System.Data.DataColumn columnbankchggst;
            
            private global::System.Data.DataColumn columnorigstamt;
            
            private global::System.Data.DataColumn columnoritotalamt;
            
            private global::System.Data.DataColumn columnpostamt;
            
            private global::System.Data.DataColumn columngstamt;
            
            private global::System.Data.DataColumn columntotalamt;
            
            private global::System.Data.DataColumn columndetail;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnyear;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnmark;
            
            private global::System.Data.DataColumn columnline;
            
            private global::System.Data.DataColumn columnitem;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnissueby;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columnbankname;
            
            private global::System.Data.DataColumn columnbankbranch;
            
            private global::System.Data.DataColumn columnchknum;
            
            private global::System.Data.DataColumn columnbankacc;
            
            private global::System.Data.DataColumn columnptnum;
            
            private global::System.Data.DataColumn columnhp;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columndbankamt;
            
            private global::System.Data.DataColumn columndbankchg;
            
            private global::System.Data.DataColumn columnchequeno;
            
            private global::System.Data.DataColumn columnaccnum3;
            
            private global::System.Data.DataColumn columnoricur3;
            
            private global::System.Data.DataColumn columndiscamt;
            
            private global::System.Data.DataColumn columnamtpaid;
            
            private global::System.Data.DataColumn columnoricur4;
            
            private global::System.Data.DataColumn columnaccnum4;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnpayterms;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnflexamt;
            
            private global::System.Data.DataColumn columnaptotal;
            
            private global::System.Data.DataColumn columnpivtotal;
            
            private global::System.Data.DataColumn columnapname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paytDataTable() {
                this.TableName = "payt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal paytDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected paytDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn docunumColumn {
                get {
                    return this.columndocunum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exrateColumn {
                get {
                    return this.columnexrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstgrpnumColumn {
                get {
                    return this.columngstgrpnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstperColumn {
                get {
                    return this.columngstper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn verifyColumn {
                get {
                    return this.columnverify;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn advtypeColumn {
                get {
                    return this.columnadvtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn termsColumn {
                get {
                    return this.columnterms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ptcColumn {
                get {
                    return this.columnptc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnum1Column {
                get {
                    return this.columnaccnum1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnum2Column {
                get {
                    return this.columnaccnum2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricurColumn {
                get {
                    return this.columnoricur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricur1Column {
                get {
                    return this.columnoricur1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricur2Column {
                get {
                    return this.columnoricur2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankamtColumn {
                get {
                    return this.columnbankamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankchgColumn {
                get {
                    return this.columnbankchg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oriamtColumn {
                get {
                    return this.columnoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankchggstColumn {
                get {
                    return this.columnbankchggst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn origstamtColumn {
                get {
                    return this.columnorigstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oritotalamtColumn {
                get {
                    return this.columnoritotalamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn postamtColumn {
                get {
                    return this.columnpostamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstamtColumn {
                get {
                    return this.columngstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalamtColumn {
                get {
                    return this.columntotalamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn detailColumn {
                get {
                    return this.columndetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearColumn {
                get {
                    return this.columnyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn markColumn {
                get {
                    return this.columnmark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineColumn {
                get {
                    return this.columnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemColumn {
                get {
                    return this.columnitem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issuebyColumn {
                get {
                    return this.columnissueby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn banknameColumn {
                get {
                    return this.columnbankname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankbranchColumn {
                get {
                    return this.columnbankbranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chknumColumn {
                get {
                    return this.columnchknum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankaccColumn {
                get {
                    return this.columnbankacc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ptnumColumn {
                get {
                    return this.columnptnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hpColumn {
                get {
                    return this.columnhp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dbankamtColumn {
                get {
                    return this.columndbankamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dbankchgColumn {
                get {
                    return this.columndbankchg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequenoColumn {
                get {
                    return this.columnchequeno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnum3Column {
                get {
                    return this.columnaccnum3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricur3Column {
                get {
                    return this.columnoricur3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discamtColumn {
                get {
                    return this.columndiscamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amtpaidColumn {
                get {
                    return this.columnamtpaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricur4Column {
                get {
                    return this.columnoricur4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnum4Column {
                get {
                    return this.columnaccnum4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paytermsColumn {
                get {
                    return this.columnpayterms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flexamtColumn {
                get {
                    return this.columnflexamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aptotalColumn {
                get {
                    return this.columnaptotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pivtotalColumn {
                get {
                    return this.columnpivtotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnameColumn {
                get {
                    return this.columnapname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paytRow this[int index] {
                get {
                    return ((paytRow)(this.Rows[index]));
                }
            }
            
            public event paytRowChangeEventHandler paytRowChanging;
            
            public event paytRowChangeEventHandler paytRowChanged;
            
            public event paytRowChangeEventHandler paytRowDeleting;
            
            public event paytRowChangeEventHandler paytRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpaytRow(paytRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paytRow AddpaytRow(
                        long ID, 
                        string refnum, 
                        string docunum, 
                        string apnum, 
                        string empnum, 
                        decimal exrate, 
                        string gstgrpnum, 
                        decimal gstper, 
                        bool verify, 
                        bool advtype, 
                        string terms, 
                        string ptc, 
                        string accnum1, 
                        string accnum2, 
                        string oricur, 
                        string oricur1, 
                        string oricur2, 
                        string remark, 
                        decimal bankamt, 
                        decimal bankchg, 
                        decimal oriamt, 
                        decimal bankchggst, 
                        decimal origstamt, 
                        decimal oritotalamt, 
                        decimal postamt, 
                        decimal gstamt, 
                        decimal totalamt, 
                        string detail, 
                        System.DateTime trandate, 
                        int period, 
                        int year, 
                        string status, 
                        bool mark, 
                        decimal line, 
                        string item, 
                        string flag, 
                        string user, 
                        string createdby, 
                        string issueby, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string coy, 
                        string bankname, 
                        string bankbranch, 
                        string chknum, 
                        string bankacc, 
                        string ptnum, 
                        string hp, 
                        string email, 
                        decimal dbankamt, 
                        decimal dbankchg, 
                        string chequeno, 
                        string accnum3, 
                        string oricur3, 
                        decimal discamt, 
                        decimal amtpaid, 
                        string oricur4, 
                        string accnum4, 
                        string contact, 
                        string payterms, 
                        string address, 
                        string phone, 
                        string fax, 
                        decimal flexamt, 
                        decimal aptotal, 
                        decimal pivtotal, 
                        string apname) {
                paytRow rowpaytRow = ((paytRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        docunum,
                        apnum,
                        empnum,
                        exrate,
                        gstgrpnum,
                        gstper,
                        verify,
                        advtype,
                        terms,
                        ptc,
                        accnum1,
                        accnum2,
                        oricur,
                        oricur1,
                        oricur2,
                        remark,
                        bankamt,
                        bankchg,
                        oriamt,
                        bankchggst,
                        origstamt,
                        oritotalamt,
                        postamt,
                        gstamt,
                        totalamt,
                        detail,
                        trandate,
                        period,
                        year,
                        status,
                        mark,
                        line,
                        item,
                        flag,
                        user,
                        createdby,
                        issueby,
                        created,
                        modified,
                        coy,
                        bankname,
                        bankbranch,
                        chknum,
                        bankacc,
                        ptnum,
                        hp,
                        email,
                        dbankamt,
                        dbankchg,
                        chequeno,
                        accnum3,
                        oricur3,
                        discamt,
                        amtpaid,
                        oricur4,
                        accnum4,
                        contact,
                        payterms,
                        address,
                        phone,
                        fax,
                        flexamt,
                        aptotal,
                        pivtotal,
                        apname};
                rowpaytRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpaytRow);
                return rowpaytRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                paytDataTable cln = ((paytDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new paytDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columndocunum = base.Columns["docunum"];
                this.columnapnum = base.Columns["apnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnexrate = base.Columns["exrate"];
                this.columngstgrpnum = base.Columns["gstgrpnum"];
                this.columngstper = base.Columns["gstper"];
                this.columnverify = base.Columns["verify"];
                this.columnadvtype = base.Columns["advtype"];
                this.columnterms = base.Columns["terms"];
                this.columnptc = base.Columns["ptc"];
                this.columnaccnum1 = base.Columns["accnum1"];
                this.columnaccnum2 = base.Columns["accnum2"];
                this.columnoricur = base.Columns["oricur"];
                this.columnoricur1 = base.Columns["oricur1"];
                this.columnoricur2 = base.Columns["oricur2"];
                this.columnremark = base.Columns["remark"];
                this.columnbankamt = base.Columns["bankamt"];
                this.columnbankchg = base.Columns["bankchg"];
                this.columnoriamt = base.Columns["oriamt"];
                this.columnbankchggst = base.Columns["bankchggst"];
                this.columnorigstamt = base.Columns["origstamt"];
                this.columnoritotalamt = base.Columns["oritotalamt"];
                this.columnpostamt = base.Columns["postamt"];
                this.columngstamt = base.Columns["gstamt"];
                this.columntotalamt = base.Columns["totalamt"];
                this.columndetail = base.Columns["detail"];
                this.columntrandate = base.Columns["trandate"];
                this.columnperiod = base.Columns["period"];
                this.columnyear = base.Columns["year"];
                this.columnstatus = base.Columns["status"];
                this.columnmark = base.Columns["mark"];
                this.columnline = base.Columns["line"];
                this.columnitem = base.Columns["item"];
                this.columnflag = base.Columns["flag"];
                this.columnuser = base.Columns["user"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnissueby = base.Columns["issueby"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoy = base.Columns["coy"];
                this.columnbankname = base.Columns["bankname"];
                this.columnbankbranch = base.Columns["bankbranch"];
                this.columnchknum = base.Columns["chknum"];
                this.columnbankacc = base.Columns["bankacc"];
                this.columnptnum = base.Columns["ptnum"];
                this.columnhp = base.Columns["hp"];
                this.columnemail = base.Columns["email"];
                this.columndbankamt = base.Columns["dbankamt"];
                this.columndbankchg = base.Columns["dbankchg"];
                this.columnchequeno = base.Columns["chequeno"];
                this.columnaccnum3 = base.Columns["accnum3"];
                this.columnoricur3 = base.Columns["oricur3"];
                this.columndiscamt = base.Columns["discamt"];
                this.columnamtpaid = base.Columns["amtpaid"];
                this.columnoricur4 = base.Columns["oricur4"];
                this.columnaccnum4 = base.Columns["accnum4"];
                this.columncontact = base.Columns["contact"];
                this.columnpayterms = base.Columns["payterms"];
                this.columnaddress = base.Columns["address"];
                this.columnphone = base.Columns["phone"];
                this.columnfax = base.Columns["fax"];
                this.columnflexamt = base.Columns["flexamt"];
                this.columnaptotal = base.Columns["aptotal"];
                this.columnpivtotal = base.Columns["pivtotal"];
                this.columnapname = base.Columns["apname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columndocunum = new global::System.Data.DataColumn("docunum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocunum);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnexrate = new global::System.Data.DataColumn("exrate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexrate);
                this.columngstgrpnum = new global::System.Data.DataColumn("gstgrpnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstgrpnum);
                this.columngstper = new global::System.Data.DataColumn("gstper", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstper);
                this.columnverify = new global::System.Data.DataColumn("verify", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnverify);
                this.columnadvtype = new global::System.Data.DataColumn("advtype", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadvtype);
                this.columnterms = new global::System.Data.DataColumn("terms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterms);
                this.columnptc = new global::System.Data.DataColumn("ptc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptc);
                this.columnaccnum1 = new global::System.Data.DataColumn("accnum1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum1);
                this.columnaccnum2 = new global::System.Data.DataColumn("accnum2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum2);
                this.columnoricur = new global::System.Data.DataColumn("oricur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur);
                this.columnoricur1 = new global::System.Data.DataColumn("oricur1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur1);
                this.columnoricur2 = new global::System.Data.DataColumn("oricur2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur2);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnbankamt = new global::System.Data.DataColumn("bankamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankamt);
                this.columnbankchg = new global::System.Data.DataColumn("bankchg", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankchg);
                this.columnoriamt = new global::System.Data.DataColumn("oriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriamt);
                this.columnbankchggst = new global::System.Data.DataColumn("bankchggst", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankchggst);
                this.columnorigstamt = new global::System.Data.DataColumn("origstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorigstamt);
                this.columnoritotalamt = new global::System.Data.DataColumn("oritotalamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoritotalamt);
                this.columnpostamt = new global::System.Data.DataColumn("postamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostamt);
                this.columngstamt = new global::System.Data.DataColumn("gstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstamt);
                this.columntotalamt = new global::System.Data.DataColumn("totalamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalamt);
                this.columndetail = new global::System.Data.DataColumn("detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndetail);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnyear = new global::System.Data.DataColumn("year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnmark = new global::System.Data.DataColumn("mark", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmark);
                this.columnline = new global::System.Data.DataColumn("line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline);
                this.columnitem = new global::System.Data.DataColumn("item", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnissueby = new global::System.Data.DataColumn("issueby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissueby);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columnbankname = new global::System.Data.DataColumn("bankname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankname);
                this.columnbankbranch = new global::System.Data.DataColumn("bankbranch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankbranch);
                this.columnchknum = new global::System.Data.DataColumn("chknum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchknum);
                this.columnbankacc = new global::System.Data.DataColumn("bankacc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankacc);
                this.columnptnum = new global::System.Data.DataColumn("ptnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptnum);
                this.columnhp = new global::System.Data.DataColumn("hp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhp);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columndbankamt = new global::System.Data.DataColumn("dbankamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbankamt);
                this.columndbankchg = new global::System.Data.DataColumn("dbankchg", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbankchg);
                this.columnchequeno = new global::System.Data.DataColumn("chequeno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequeno);
                this.columnaccnum3 = new global::System.Data.DataColumn("accnum3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum3);
                this.columnoricur3 = new global::System.Data.DataColumn("oricur3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur3);
                this.columndiscamt = new global::System.Data.DataColumn("discamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscamt);
                this.columnamtpaid = new global::System.Data.DataColumn("amtpaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamtpaid);
                this.columnoricur4 = new global::System.Data.DataColumn("oricur4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur4);
                this.columnaccnum4 = new global::System.Data.DataColumn("accnum4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum4);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnpayterms = new global::System.Data.DataColumn("payterms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayterms);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnflexamt = new global::System.Data.DataColumn("flexamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflexamt);
                this.columnaptotal = new global::System.Data.DataColumn("aptotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaptotal);
                this.columnpivtotal = new global::System.Data.DataColumn("pivtotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpivtotal);
                this.columnapname = new global::System.Data.DataColumn("apname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapname);
                this.columnID.AllowDBNull = false;
                this.columnrefnum.MaxLength = 20;
                this.columndocunum.MaxLength = 20;
                this.columnapnum.MaxLength = 12;
                this.columnempnum.MaxLength = 20;
                this.columngstgrpnum.MaxLength = 12;
                this.columnterms.MaxLength = 100;
                this.columnptc.MaxLength = 50;
                this.columnaccnum1.MaxLength = 12;
                this.columnaccnum2.MaxLength = 12;
                this.columnoricur.MaxLength = 5;
                this.columnoricur1.MaxLength = 5;
                this.columnoricur2.MaxLength = 5;
                this.columnremark.MaxLength = 3000;
                this.columndetail.MaxLength = 50;
                this.columnstatus.MaxLength = 1;
                this.columnitem.MaxLength = 5;
                this.columnflag.MaxLength = 5;
                this.columnuser.MaxLength = 50;
                this.columncreatedby.MaxLength = 50;
                this.columnissueby.MaxLength = 50;
                this.columncoy.MaxLength = 10;
                this.columnbankname.MaxLength = 50;
                this.columnbankbranch.MaxLength = 50;
                this.columnchknum.MaxLength = 20;
                this.columnbankacc.MaxLength = 20;
                this.columnptnum.MaxLength = 12;
                this.columnhp.MaxLength = 20;
                this.columnemail.MaxLength = 100;
                this.columnchequeno.MaxLength = 50;
                this.columnaccnum3.MaxLength = 12;
                this.columnoricur3.MaxLength = 5;
                this.columnoricur4.MaxLength = 5;
                this.columnaccnum4.MaxLength = 12;
                this.columncontact.MaxLength = 50;
                this.columnpayterms.MaxLength = 50;
                this.columnaddress.MaxLength = 300;
                this.columnphone.MaxLength = 50;
                this.columnfax.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paytRow NewpaytRow() {
                return ((paytRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new paytRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(paytRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.paytRowChanged != null)) {
                    this.paytRowChanged(this, new paytRowChangeEvent(((paytRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.paytRowChanging != null)) {
                    this.paytRowChanging(this, new paytRowChangeEvent(((paytRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.paytRowDeleted != null)) {
                    this.paytRowDeleted(this, new paytRowChangeEvent(((paytRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.paytRowDeleting != null)) {
                    this.paytRowDeleting(this, new paytRowChangeEvent(((paytRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepaytRow(paytRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                paytPayment ds = new paytPayment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "paytDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columndocunum;
            
            private global::System.Data.DataColumn columnsupinvnum;
            
            private global::System.Data.DataColumn columninvnum;
            
            private global::System.Data.DataColumn columnchknum;
            
            private global::System.Data.DataColumn columnaccnum;
            
            private global::System.Data.DataColumn columnccnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnregnum;
            
            private global::System.Data.DataColumn columninvdate;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnoricur;
            
            private global::System.Data.DataColumn columnexrate;
            
            private global::System.Data.DataColumn columnoricredit;
            
            private global::System.Data.DataColumn columnoridebit;
            
            private global::System.Data.DataColumn columnoriamt;
            
            private global::System.Data.DataColumn columnpostamt;
            
            private global::System.Data.DataColumn columnexramt;
            
            private global::System.Data.DataColumn columngstamt;
            
            private global::System.Data.DataColumn columndetail;
            
            private global::System.Data.DataColumn columncrterm;
            
            private global::System.Data.DataColumn columnopbal;
            
            private global::System.Data.DataColumn columnadvtype;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columnline;
            
            private global::System.Data.DataColumn columnprjnum;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnpivnum;
            
            private global::System.Data.DataColumn columnlgr;
            
            private global::System.Data.DataColumn columnorigstamt;
            
            private global::System.Data.DataColumn columnchknum1;
            
            private global::System.Data.DataColumn columnfinaloriamt;
            
            private global::System.Data.DataColumn columnrebateper;
            
            private global::System.Data.DataColumn columnrebateamt;
            
            private global::System.Data.DataColumn columndoriamt;
            
            private global::System.Data.DataColumn columndpostamt;
            
            private global::System.Data.DataColumn columndgstamt;
            
            private global::System.Data.DataColumn columnopbal1;
            
            private global::System.Data.DataColumn columnpivamt;
            
            private global::System.Data.DataColumn columnadjamt;
            
            private global::System.Data.DataColumn columndorigstamt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APDDataTable() {
                this.TableName = "APD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn docunumColumn {
                get {
                    return this.columndocunum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supinvnumColumn {
                get {
                    return this.columnsupinvnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invnumColumn {
                get {
                    return this.columninvnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chknumColumn {
                get {
                    return this.columnchknum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnumColumn {
                get {
                    return this.columnaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ccnumColumn {
                get {
                    return this.columnccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn regnumColumn {
                get {
                    return this.columnregnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invdateColumn {
                get {
                    return this.columninvdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricurColumn {
                get {
                    return this.columnoricur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exrateColumn {
                get {
                    return this.columnexrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricreditColumn {
                get {
                    return this.columnoricredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oridebitColumn {
                get {
                    return this.columnoridebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oriamtColumn {
                get {
                    return this.columnoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn postamtColumn {
                get {
                    return this.columnpostamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exramtColumn {
                get {
                    return this.columnexramt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstamtColumn {
                get {
                    return this.columngstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn detailColumn {
                get {
                    return this.columndetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn crtermColumn {
                get {
                    return this.columncrterm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn opbalColumn {
                get {
                    return this.columnopbal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn advtypeColumn {
                get {
                    return this.columnadvtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineColumn {
                get {
                    return this.columnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prjnumColumn {
                get {
                    return this.columnprjnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pivnumColumn {
                get {
                    return this.columnpivnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lgrColumn {
                get {
                    return this.columnlgr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn origstamtColumn {
                get {
                    return this.columnorigstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chknum1Column {
                get {
                    return this.columnchknum1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn finaloriamtColumn {
                get {
                    return this.columnfinaloriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rebateperColumn {
                get {
                    return this.columnrebateper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rebateamtColumn {
                get {
                    return this.columnrebateamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn doriamtColumn {
                get {
                    return this.columndoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dpostamtColumn {
                get {
                    return this.columndpostamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dgstamtColumn {
                get {
                    return this.columndgstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn opbal1Column {
                get {
                    return this.columnopbal1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pivamtColumn {
                get {
                    return this.columnpivamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adjamtColumn {
                get {
                    return this.columnadjamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dorigstamtColumn {
                get {
                    return this.columndorigstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APDRow this[int index] {
                get {
                    return ((APDRow)(this.Rows[index]));
                }
            }
            
            public event APDRowChangeEventHandler APDRowChanging;
            
            public event APDRowChangeEventHandler APDRowChanged;
            
            public event APDRowChangeEventHandler APDRowDeleting;
            
            public event APDRowChangeEventHandler APDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPDRow(APDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APDRow AddAPDRow(
                        long ID, 
                        string refnum, 
                        string apnum, 
                        string docunum, 
                        string supinvnum, 
                        string invnum, 
                        string chknum, 
                        string accnum, 
                        string ccnum, 
                        string empnum, 
                        string regnum, 
                        System.DateTime invdate, 
                        System.DateTime trandate, 
                        string oricur, 
                        decimal exrate, 
                        decimal oricredit, 
                        decimal oridebit, 
                        decimal oriamt, 
                        decimal postamt, 
                        decimal exramt, 
                        decimal gstamt, 
                        string detail, 
                        int crterm, 
                        bool opbal, 
                        int advtype, 
                        int period, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string coy, 
                        decimal line, 
                        string prjnum, 
                        string remark, 
                        string pivnum, 
                        string lgr, 
                        decimal origstamt, 
                        string chknum1, 
                        decimal finaloriamt, 
                        decimal rebateper, 
                        decimal rebateamt, 
                        decimal doriamt, 
                        decimal dpostamt, 
                        decimal dgstamt, 
                        bool opbal1, 
                        decimal pivamt, 
                        decimal adjamt, 
                        decimal dorigstamt) {
                APDRow rowAPDRow = ((APDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        apnum,
                        docunum,
                        supinvnum,
                        invnum,
                        chknum,
                        accnum,
                        ccnum,
                        empnum,
                        regnum,
                        invdate,
                        trandate,
                        oricur,
                        exrate,
                        oricredit,
                        oridebit,
                        oriamt,
                        postamt,
                        exramt,
                        gstamt,
                        detail,
                        crterm,
                        opbal,
                        advtype,
                        period,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        coy,
                        line,
                        prjnum,
                        remark,
                        pivnum,
                        lgr,
                        origstamt,
                        chknum1,
                        finaloriamt,
                        rebateper,
                        rebateamt,
                        doriamt,
                        dpostamt,
                        dgstamt,
                        opbal1,
                        pivamt,
                        adjamt,
                        dorigstamt};
                rowAPDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPDRow);
                return rowAPDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APDDataTable cln = ((APDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnapnum = base.Columns["apnum"];
                this.columndocunum = base.Columns["docunum"];
                this.columnsupinvnum = base.Columns["supinvnum"];
                this.columninvnum = base.Columns["invnum"];
                this.columnchknum = base.Columns["chknum"];
                this.columnaccnum = base.Columns["accnum"];
                this.columnccnum = base.Columns["ccnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnregnum = base.Columns["regnum"];
                this.columninvdate = base.Columns["invdate"];
                this.columntrandate = base.Columns["trandate"];
                this.columnoricur = base.Columns["oricur"];
                this.columnexrate = base.Columns["exrate"];
                this.columnoricredit = base.Columns["oricredit"];
                this.columnoridebit = base.Columns["oridebit"];
                this.columnoriamt = base.Columns["oriamt"];
                this.columnpostamt = base.Columns["postamt"];
                this.columnexramt = base.Columns["exramt"];
                this.columngstamt = base.Columns["gstamt"];
                this.columndetail = base.Columns["detail"];
                this.columncrterm = base.Columns["crterm"];
                this.columnopbal = base.Columns["opbal"];
                this.columnadvtype = base.Columns["advtype"];
                this.columnperiod = base.Columns["period"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoy = base.Columns["coy"];
                this.columnline = base.Columns["line"];
                this.columnprjnum = base.Columns["prjnum"];
                this.columnremark = base.Columns["remark"];
                this.columnpivnum = base.Columns["pivnum"];
                this.columnlgr = base.Columns["lgr"];
                this.columnorigstamt = base.Columns["origstamt"];
                this.columnchknum1 = base.Columns["chknum1"];
                this.columnfinaloriamt = base.Columns["finaloriamt"];
                this.columnrebateper = base.Columns["rebateper"];
                this.columnrebateamt = base.Columns["rebateamt"];
                this.columndoriamt = base.Columns["doriamt"];
                this.columndpostamt = base.Columns["dpostamt"];
                this.columndgstamt = base.Columns["dgstamt"];
                this.columnopbal1 = base.Columns["opbal1"];
                this.columnpivamt = base.Columns["pivamt"];
                this.columnadjamt = base.Columns["adjamt"];
                this.columndorigstamt = base.Columns["dorigstamt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columndocunum = new global::System.Data.DataColumn("docunum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocunum);
                this.columnsupinvnum = new global::System.Data.DataColumn("supinvnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupinvnum);
                this.columninvnum = new global::System.Data.DataColumn("invnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvnum);
                this.columnchknum = new global::System.Data.DataColumn("chknum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchknum);
                this.columnaccnum = new global::System.Data.DataColumn("accnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum);
                this.columnccnum = new global::System.Data.DataColumn("ccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnccnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnregnum = new global::System.Data.DataColumn("regnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregnum);
                this.columninvdate = new global::System.Data.DataColumn("invdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvdate);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnoricur = new global::System.Data.DataColumn("oricur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur);
                this.columnexrate = new global::System.Data.DataColumn("exrate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexrate);
                this.columnoricredit = new global::System.Data.DataColumn("oricredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricredit);
                this.columnoridebit = new global::System.Data.DataColumn("oridebit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoridebit);
                this.columnoriamt = new global::System.Data.DataColumn("oriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriamt);
                this.columnpostamt = new global::System.Data.DataColumn("postamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostamt);
                this.columnexramt = new global::System.Data.DataColumn("exramt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexramt);
                this.columngstamt = new global::System.Data.DataColumn("gstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstamt);
                this.columndetail = new global::System.Data.DataColumn("detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndetail);
                this.columncrterm = new global::System.Data.DataColumn("crterm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncrterm);
                this.columnopbal = new global::System.Data.DataColumn("opbal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopbal);
                this.columnadvtype = new global::System.Data.DataColumn("advtype", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadvtype);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columnline = new global::System.Data.DataColumn("line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline);
                this.columnprjnum = new global::System.Data.DataColumn("prjnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprjnum);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnpivnum = new global::System.Data.DataColumn("pivnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpivnum);
                this.columnlgr = new global::System.Data.DataColumn("lgr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlgr);
                this.columnorigstamt = new global::System.Data.DataColumn("origstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorigstamt);
                this.columnchknum1 = new global::System.Data.DataColumn("chknum1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchknum1);
                this.columnfinaloriamt = new global::System.Data.DataColumn("finaloriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinaloriamt);
                this.columnrebateper = new global::System.Data.DataColumn("rebateper", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrebateper);
                this.columnrebateamt = new global::System.Data.DataColumn("rebateamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrebateamt);
                this.columndoriamt = new global::System.Data.DataColumn("doriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoriamt);
                this.columndpostamt = new global::System.Data.DataColumn("dpostamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndpostamt);
                this.columndgstamt = new global::System.Data.DataColumn("dgstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndgstamt);
                this.columnopbal1 = new global::System.Data.DataColumn("opbal1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopbal1);
                this.columnpivamt = new global::System.Data.DataColumn("pivamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpivamt);
                this.columnadjamt = new global::System.Data.DataColumn("adjamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadjamt);
                this.columndorigstamt = new global::System.Data.DataColumn("dorigstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndorigstamt);
                this.columnID.AllowDBNull = false;
                this.columnrefnum.MaxLength = 20;
                this.columnapnum.MaxLength = 12;
                this.columndocunum.MaxLength = 20;
                this.columnsupinvnum.MaxLength = 20;
                this.columninvnum.MaxLength = 20;
                this.columnchknum.MaxLength = 20;
                this.columnaccnum.MaxLength = 12;
                this.columnccnum.MaxLength = 12;
                this.columnempnum.MaxLength = 20;
                this.columnregnum.MaxLength = 12;
                this.columnoricur.MaxLength = 5;
                this.columndetail.MaxLength = 255;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncoy.MaxLength = 10;
                this.columnprjnum.MaxLength = 20;
                this.columnremark.MaxLength = 250;
                this.columnpivnum.MaxLength = 20;
                this.columnlgr.MaxLength = 5;
                this.columnchknum1.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APDRow NewAPDRow() {
                return ((APDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APDRowChanged != null)) {
                    this.APDRowChanged(this, new APDRowChangeEvent(((APDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APDRowChanging != null)) {
                    this.APDRowChanging(this, new APDRowChangeEvent(((APDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APDRowDeleted != null)) {
                    this.APDRowDeleted(this, new APDRowChangeEvent(((APDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APDRowDeleting != null)) {
                    this.APDRowDeleting(this, new APDRowChangeEvent(((APDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPDRow(APDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                paytPayment ds = new paytPayment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columnapname;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnhp;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnptc;
            
            private global::System.Data.DataColumn columnterm;
            
            private global::System.Data.DataColumn columncredit;
            
            private global::System.Data.DataColumn columngstgrpnum;
            
            private global::System.Data.DataColumn columnregnum;
            
            private global::System.Data.DataColumn columnoricur;
            
            private global::System.Data.DataColumn columnaccnum;
            
            private global::System.Data.DataColumn columnexpire;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnptnum;
            
            private global::System.Data.DataColumn columnactive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APMDataTable() {
                this.TableName = "APM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnameColumn {
                get {
                    return this.columnapname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hpColumn {
                get {
                    return this.columnhp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ptcColumn {
                get {
                    return this.columnptc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn termColumn {
                get {
                    return this.columnterm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn creditColumn {
                get {
                    return this.columncredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstgrpnumColumn {
                get {
                    return this.columngstgrpnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn regnumColumn {
                get {
                    return this.columnregnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricurColumn {
                get {
                    return this.columnoricur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnumColumn {
                get {
                    return this.columnaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expireColumn {
                get {
                    return this.columnexpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ptnumColumn {
                get {
                    return this.columnptnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APMRow this[int index] {
                get {
                    return ((APMRow)(this.Rows[index]));
                }
            }
            
            public event APMRowChangeEventHandler APMRowChanging;
            
            public event APMRowChangeEventHandler APMRowChanged;
            
            public event APMRowChangeEventHandler APMRowDeleting;
            
            public event APMRowChangeEventHandler APMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPMRow(APMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APMRow AddAPMRow(
                        long ID, 
                        string apnum, 
                        string apname, 
                        string address, 
                        string phone, 
                        string hp, 
                        string fax, 
                        string email, 
                        string ptc, 
                        string term, 
                        decimal credit, 
                        string gstgrpnum, 
                        string regnum, 
                        string oricur, 
                        string accnum, 
                        bool expire, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string ptnum, 
                        bool active) {
                APMRow rowAPMRow = ((APMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        apnum,
                        apname,
                        address,
                        phone,
                        hp,
                        fax,
                        email,
                        ptc,
                        term,
                        credit,
                        gstgrpnum,
                        regnum,
                        oricur,
                        accnum,
                        expire,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        ptnum,
                        active};
                rowAPMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPMRow);
                return rowAPMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APMRow FindByID(long ID) {
                return ((APMRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APMDataTable cln = ((APMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnapnum = base.Columns["apnum"];
                this.columnapname = base.Columns["apname"];
                this.columnaddress = base.Columns["address"];
                this.columnphone = base.Columns["phone"];
                this.columnhp = base.Columns["hp"];
                this.columnfax = base.Columns["fax"];
                this.columnemail = base.Columns["email"];
                this.columnptc = base.Columns["ptc"];
                this.columnterm = base.Columns["term"];
                this.columncredit = base.Columns["credit"];
                this.columngstgrpnum = base.Columns["gstgrpnum"];
                this.columnregnum = base.Columns["regnum"];
                this.columnoricur = base.Columns["oricur"];
                this.columnaccnum = base.Columns["accnum"];
                this.columnexpire = base.Columns["expire"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnptnum = base.Columns["ptnum"];
                this.columnactive = base.Columns["active"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columnapname = new global::System.Data.DataColumn("apname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapname);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnhp = new global::System.Data.DataColumn("hp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhp);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnptc = new global::System.Data.DataColumn("ptc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptc);
                this.columnterm = new global::System.Data.DataColumn("term", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterm);
                this.columncredit = new global::System.Data.DataColumn("credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncredit);
                this.columngstgrpnum = new global::System.Data.DataColumn("gstgrpnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstgrpnum);
                this.columnregnum = new global::System.Data.DataColumn("regnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregnum);
                this.columnoricur = new global::System.Data.DataColumn("oricur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur);
                this.columnaccnum = new global::System.Data.DataColumn("accnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum);
                this.columnexpire = new global::System.Data.DataColumn("expire", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpire);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnptnum = new global::System.Data.DataColumn("ptnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptnum);
                this.columnactive = new global::System.Data.DataColumn("active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnapnum.MaxLength = 20;
                this.columnapname.MaxLength = 200;
                this.columnaddress.MaxLength = 200;
                this.columnphone.MaxLength = 100;
                this.columnhp.MaxLength = 100;
                this.columnfax.MaxLength = 100;
                this.columnemail.MaxLength = 100;
                this.columnptc.MaxLength = 200;
                this.columnterm.MaxLength = 30;
                this.columngstgrpnum.MaxLength = 12;
                this.columnregnum.MaxLength = 12;
                this.columnoricur.MaxLength = 5;
                this.columnaccnum.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnptnum.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APMRow NewAPMRow() {
                return ((APMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APMRowChanged != null)) {
                    this.APMRowChanged(this, new APMRowChangeEvent(((APMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APMRowChanging != null)) {
                    this.APMRowChanging(this, new APMRowChangeEvent(((APMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APMRowDeleted != null)) {
                    this.APMRowDeleted(this, new APMRowChangeEvent(((APMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APMRowDeleting != null)) {
                    this.APMRowDeleting(this, new APMRowChangeEvent(((APMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPMRow(APMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                paytPayment ds = new paytPayment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class coyDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columncoyname;
            
            private global::System.Data.DataColumn columncoyaddr1;
            
            private global::System.Data.DataColumn columncoyaddr2;
            
            private global::System.Data.DataColumn columncoyaddr3;
            
            private global::System.Data.DataColumn columncoyaddr4;
            
            private global::System.Data.DataColumn columncoyemail;
            
            private global::System.Data.DataColumn columncoyurl;
            
            private global::System.Data.DataColumn columncoytel;
            
            private global::System.Data.DataColumn columncoyfax;
            
            private global::System.Data.DataColumn columncoyregnum;
            
            private global::System.Data.DataColumn columncoygstnum;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoyimage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public coyDataTable() {
                this.TableName = "coy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal coyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected coyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coynameColumn {
                get {
                    return this.columncoyname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr1Column {
                get {
                    return this.columncoyaddr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr2Column {
                get {
                    return this.columncoyaddr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr3Column {
                get {
                    return this.columncoyaddr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr4Column {
                get {
                    return this.columncoyaddr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyemailColumn {
                get {
                    return this.columncoyemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyurlColumn {
                get {
                    return this.columncoyurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coytelColumn {
                get {
                    return this.columncoytel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyfaxColumn {
                get {
                    return this.columncoyfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyregnumColumn {
                get {
                    return this.columncoyregnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coygstnumColumn {
                get {
                    return this.columncoygstnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyimageColumn {
                get {
                    return this.columncoyimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public coyRow this[int index] {
                get {
                    return ((coyRow)(this.Rows[index]));
                }
            }
            
            public event coyRowChangeEventHandler coyRowChanging;
            
            public event coyRowChangeEventHandler coyRowChanged;
            
            public event coyRowChangeEventHandler coyRowDeleting;
            
            public event coyRowChangeEventHandler coyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcoyRow(coyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public coyRow AddcoyRow(
                        long ID, 
                        string coy, 
                        string coyname, 
                        string coyaddr1, 
                        string coyaddr2, 
                        string coyaddr3, 
                        string coyaddr4, 
                        string coyemail, 
                        string coyurl, 
                        string coytel, 
                        string coyfax, 
                        string coyregnum, 
                        string coygstnum, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        byte[] coyimage) {
                coyRow rowcoyRow = ((coyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        coy,
                        coyname,
                        coyaddr1,
                        coyaddr2,
                        coyaddr3,
                        coyaddr4,
                        coyemail,
                        coyurl,
                        coytel,
                        coyfax,
                        coyregnum,
                        coygstnum,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        coyimage};
                rowcoyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcoyRow);
                return rowcoyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public coyRow FindByID(long ID) {
                return ((coyRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                coyDataTable cln = ((coyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new coyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columncoy = base.Columns["coy"];
                this.columncoyname = base.Columns["coyname"];
                this.columncoyaddr1 = base.Columns["coyaddr1"];
                this.columncoyaddr2 = base.Columns["coyaddr2"];
                this.columncoyaddr3 = base.Columns["coyaddr3"];
                this.columncoyaddr4 = base.Columns["coyaddr4"];
                this.columncoyemail = base.Columns["coyemail"];
                this.columncoyurl = base.Columns["coyurl"];
                this.columncoytel = base.Columns["coytel"];
                this.columncoyfax = base.Columns["coyfax"];
                this.columncoyregnum = base.Columns["coyregnum"];
                this.columncoygstnum = base.Columns["coygstnum"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoyimage = base.Columns["coyimage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columncoyname = new global::System.Data.DataColumn("coyname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyname);
                this.columncoyaddr1 = new global::System.Data.DataColumn("coyaddr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr1);
                this.columncoyaddr2 = new global::System.Data.DataColumn("coyaddr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr2);
                this.columncoyaddr3 = new global::System.Data.DataColumn("coyaddr3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr3);
                this.columncoyaddr4 = new global::System.Data.DataColumn("coyaddr4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr4);
                this.columncoyemail = new global::System.Data.DataColumn("coyemail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyemail);
                this.columncoyurl = new global::System.Data.DataColumn("coyurl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyurl);
                this.columncoytel = new global::System.Data.DataColumn("coytel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoytel);
                this.columncoyfax = new global::System.Data.DataColumn("coyfax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyfax);
                this.columncoyregnum = new global::System.Data.DataColumn("coyregnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyregnum);
                this.columncoygstnum = new global::System.Data.DataColumn("coygstnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoygstnum);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoyimage = new global::System.Data.DataColumn("coyimage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyimage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columncoy.MaxLength = 10;
                this.columncoyname.MaxLength = 50;
                this.columncoyaddr1.MaxLength = 50;
                this.columncoyaddr2.MaxLength = 50;
                this.columncoyaddr3.MaxLength = 50;
                this.columncoyaddr4.MaxLength = 50;
                this.columncoyemail.MaxLength = 50;
                this.columncoyurl.MaxLength = 50;
                this.columncoytel.MaxLength = 30;
                this.columncoyfax.MaxLength = 30;
                this.columncoyregnum.MaxLength = 20;
                this.columncoygstnum.MaxLength = 20;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public coyRow NewcoyRow() {
                return ((coyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new coyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(coyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.coyRowChanged != null)) {
                    this.coyRowChanged(this, new coyRowChangeEvent(((coyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.coyRowChanging != null)) {
                    this.coyRowChanging(this, new coyRowChangeEvent(((coyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.coyRowDeleted != null)) {
                    this.coyRowDeleted(this, new coyRowChangeEvent(((coyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.coyRowDeleting != null)) {
                    this.coyRowDeleting(this, new coyRowChangeEvent(((coyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecoyRow(coyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                paytPayment ds = new paytPayment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "coyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PIV1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columndocunum;
            
            private global::System.Data.DataColumn columninvnum;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columnsupinvnum;
            
            private global::System.Data.DataColumn columnptc;
            
            private global::System.Data.DataColumn columnponum;
            
            private global::System.Data.DataColumn columngrnum;
            
            private global::System.Data.DataColumn columnaccnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columngstgrpnum;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columnupdatestock;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnoricur;
            
            private global::System.Data.DataColumn columnexrate;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columngrosamt;
            
            private global::System.Data.DataColumn columndiscamt;
            
            private global::System.Data.DataColumn columnoriamt;
            
            private global::System.Data.DataColumn columnorigstamt;
            
            private global::System.Data.DataColumn columnpostamt;
            
            private global::System.Data.DataColumn columngstamt;
            
            private global::System.Data.DataColumn columncosamt;
            
            private global::System.Data.DataColumn columnstdcost;
            
            private global::System.Data.DataColumn columnlgr;
            
            private global::System.Data.DataColumn columndetail;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columnline;
            
            private global::System.Data.DataColumn columnsupplierdo;
            
            private global::System.Data.DataColumn columninvdate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnsupplierinv;
            
            private global::System.Data.DataColumn columnoridebit;
            
            private global::System.Data.DataColumn columnoricredit;
            
            private global::System.Data.DataColumn columngstper;
            
            private global::System.Data.DataColumn columndqty;
            
            private global::System.Data.DataColumn columndgrosamt;
            
            private global::System.Data.DataColumn columndpostamt;
            
            private global::System.Data.DataColumn columndoriamt;
            
            private global::System.Data.DataColumn columndgstamt;
            
            private global::System.Data.DataColumn columndorigstamt;
            
            private global::System.Data.DataColumn columnroriamt;
            
            private global::System.Data.DataColumn columnrpostamt;
            
            private global::System.Data.DataColumn columngrnoriamt;
            
            private global::System.Data.DataColumn columndiscallow;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnccnum;
            
            private global::System.Data.DataColumn columnsupcrnum;
            
            private global::System.Data.DataColumn columndeptno;
            
            private global::System.Data.DataColumn columnlocno;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIV1DataTable() {
                this.TableName = "PIV1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIV1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PIV1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn docunumColumn {
                get {
                    return this.columndocunum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invnumColumn {
                get {
                    return this.columninvnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supinvnumColumn {
                get {
                    return this.columnsupinvnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ptcColumn {
                get {
                    return this.columnptc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ponumColumn {
                get {
                    return this.columnponum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grnumColumn {
                get {
                    return this.columngrnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnumColumn {
                get {
                    return this.columnaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstgrpnumColumn {
                get {
                    return this.columngstgrpnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updatestockColumn {
                get {
                    return this.columnupdatestock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricurColumn {
                get {
                    return this.columnoricur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exrateColumn {
                get {
                    return this.columnexrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grosamtColumn {
                get {
                    return this.columngrosamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discamtColumn {
                get {
                    return this.columndiscamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oriamtColumn {
                get {
                    return this.columnoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn origstamtColumn {
                get {
                    return this.columnorigstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn postamtColumn {
                get {
                    return this.columnpostamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstamtColumn {
                get {
                    return this.columngstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cosamtColumn {
                get {
                    return this.columncosamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stdcostColumn {
                get {
                    return this.columnstdcost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lgrColumn {
                get {
                    return this.columnlgr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn detailColumn {
                get {
                    return this.columndetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineColumn {
                get {
                    return this.columnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supplierdoColumn {
                get {
                    return this.columnsupplierdo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invdateColumn {
                get {
                    return this.columninvdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supplierinvColumn {
                get {
                    return this.columnsupplierinv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oridebitColumn {
                get {
                    return this.columnoridebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricreditColumn {
                get {
                    return this.columnoricredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gstperColumn {
                get {
                    return this.columngstper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dqtyColumn {
                get {
                    return this.columndqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dgrosamtColumn {
                get {
                    return this.columndgrosamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dpostamtColumn {
                get {
                    return this.columndpostamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn doriamtColumn {
                get {
                    return this.columndoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dgstamtColumn {
                get {
                    return this.columndgstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dorigstamtColumn {
                get {
                    return this.columndorigstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn roriamtColumn {
                get {
                    return this.columnroriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rpostamtColumn {
                get {
                    return this.columnrpostamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grnoriamtColumn {
                get {
                    return this.columngrnoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discallowColumn {
                get {
                    return this.columndiscallow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ccnumColumn {
                get {
                    return this.columnccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supcrnumColumn {
                get {
                    return this.columnsupcrnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptnoColumn {
                get {
                    return this.columndeptno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locnoColumn {
                get {
                    return this.columnlocno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIV1Row this[int index] {
                get {
                    return ((PIV1Row)(this.Rows[index]));
                }
            }
            
            public event PIV1RowChangeEventHandler PIV1RowChanging;
            
            public event PIV1RowChangeEventHandler PIV1RowChanged;
            
            public event PIV1RowChangeEventHandler PIV1RowDeleting;
            
            public event PIV1RowChangeEventHandler PIV1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPIV1Row(PIV1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIV1Row AddPIV1Row(
                        long ID, 
                        string refnum, 
                        string docunum, 
                        string invnum, 
                        string apnum, 
                        string supinvnum, 
                        string ptc, 
                        string ponum, 
                        string grnum, 
                        string accnum, 
                        string empnum, 
                        string gstgrpnum, 
                        string matnum, 
                        string uom, 
                        bool updatestock, 
                        System.DateTime trandate, 
                        string oricur, 
                        decimal exrate, 
                        decimal price, 
                        decimal grosamt, 
                        decimal discamt, 
                        decimal oriamt, 
                        decimal origstamt, 
                        decimal postamt, 
                        decimal gstamt, 
                        decimal cosamt, 
                        decimal stdcost, 
                        string lgr, 
                        string detail, 
                        int period, 
                        string user, 
                        string flag, 
                        string status, 
                        string createdby, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string coy, 
                        decimal line, 
                        string supplierdo, 
                        System.DateTime invdate, 
                        string remark, 
                        string supplierinv, 
                        decimal oridebit, 
                        decimal oricredit, 
                        decimal gstper, 
                        decimal dqty, 
                        decimal dgrosamt, 
                        decimal dpostamt, 
                        decimal doriamt, 
                        decimal dgstamt, 
                        decimal dorigstamt, 
                        decimal roriamt, 
                        decimal rpostamt, 
                        decimal grnoriamt, 
                        string discallow, 
                        decimal qty, 
                        string ccnum, 
                        string supcrnum, 
                        string deptno, 
                        string locno) {
                PIV1Row rowPIV1Row = ((PIV1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        docunum,
                        invnum,
                        apnum,
                        supinvnum,
                        ptc,
                        ponum,
                        grnum,
                        accnum,
                        empnum,
                        gstgrpnum,
                        matnum,
                        uom,
                        updatestock,
                        trandate,
                        oricur,
                        exrate,
                        price,
                        grosamt,
                        discamt,
                        oriamt,
                        origstamt,
                        postamt,
                        gstamt,
                        cosamt,
                        stdcost,
                        lgr,
                        detail,
                        period,
                        user,
                        flag,
                        status,
                        createdby,
                        created,
                        modified,
                        coy,
                        line,
                        supplierdo,
                        invdate,
                        remark,
                        supplierinv,
                        oridebit,
                        oricredit,
                        gstper,
                        dqty,
                        dgrosamt,
                        dpostamt,
                        doriamt,
                        dgstamt,
                        dorigstamt,
                        roriamt,
                        rpostamt,
                        grnoriamt,
                        discallow,
                        qty,
                        ccnum,
                        supcrnum,
                        deptno,
                        locno};
                rowPIV1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowPIV1Row);
                return rowPIV1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PIV1DataTable cln = ((PIV1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PIV1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columndocunum = base.Columns["docunum"];
                this.columninvnum = base.Columns["invnum"];
                this.columnapnum = base.Columns["apnum"];
                this.columnsupinvnum = base.Columns["supinvnum"];
                this.columnptc = base.Columns["ptc"];
                this.columnponum = base.Columns["ponum"];
                this.columngrnum = base.Columns["grnum"];
                this.columnaccnum = base.Columns["accnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columngstgrpnum = base.Columns["gstgrpnum"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnuom = base.Columns["uom"];
                this.columnupdatestock = base.Columns["updatestock"];
                this.columntrandate = base.Columns["trandate"];
                this.columnoricur = base.Columns["oricur"];
                this.columnexrate = base.Columns["exrate"];
                this.columnprice = base.Columns["price"];
                this.columngrosamt = base.Columns["grosamt"];
                this.columndiscamt = base.Columns["discamt"];
                this.columnoriamt = base.Columns["oriamt"];
                this.columnorigstamt = base.Columns["origstamt"];
                this.columnpostamt = base.Columns["postamt"];
                this.columngstamt = base.Columns["gstamt"];
                this.columncosamt = base.Columns["cosamt"];
                this.columnstdcost = base.Columns["stdcost"];
                this.columnlgr = base.Columns["lgr"];
                this.columndetail = base.Columns["detail"];
                this.columnperiod = base.Columns["period"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreatedby = base.Columns["createdby"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoy = base.Columns["coy"];
                this.columnline = base.Columns["line"];
                this.columnsupplierdo = base.Columns["supplierdo"];
                this.columninvdate = base.Columns["invdate"];
                this.columnremark = base.Columns["remark"];
                this.columnsupplierinv = base.Columns["supplierinv"];
                this.columnoridebit = base.Columns["oridebit"];
                this.columnoricredit = base.Columns["oricredit"];
                this.columngstper = base.Columns["gstper"];
                this.columndqty = base.Columns["dqty"];
                this.columndgrosamt = base.Columns["dgrosamt"];
                this.columndpostamt = base.Columns["dpostamt"];
                this.columndoriamt = base.Columns["doriamt"];
                this.columndgstamt = base.Columns["dgstamt"];
                this.columndorigstamt = base.Columns["dorigstamt"];
                this.columnroriamt = base.Columns["roriamt"];
                this.columnrpostamt = base.Columns["rpostamt"];
                this.columngrnoriamt = base.Columns["grnoriamt"];
                this.columndiscallow = base.Columns["discallow"];
                this.columnqty = base.Columns["qty"];
                this.columnccnum = base.Columns["ccnum"];
                this.columnsupcrnum = base.Columns["supcrnum"];
                this.columndeptno = base.Columns["deptno"];
                this.columnlocno = base.Columns["locno"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columndocunum = new global::System.Data.DataColumn("docunum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocunum);
                this.columninvnum = new global::System.Data.DataColumn("invnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvnum);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columnsupinvnum = new global::System.Data.DataColumn("supinvnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupinvnum);
                this.columnptc = new global::System.Data.DataColumn("ptc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptc);
                this.columnponum = new global::System.Data.DataColumn("ponum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnponum);
                this.columngrnum = new global::System.Data.DataColumn("grnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrnum);
                this.columnaccnum = new global::System.Data.DataColumn("accnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columngstgrpnum = new global::System.Data.DataColumn("gstgrpnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstgrpnum);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columnupdatestock = new global::System.Data.DataColumn("updatestock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatestock);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnoricur = new global::System.Data.DataColumn("oricur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur);
                this.columnexrate = new global::System.Data.DataColumn("exrate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexrate);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columngrosamt = new global::System.Data.DataColumn("grosamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrosamt);
                this.columndiscamt = new global::System.Data.DataColumn("discamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscamt);
                this.columnoriamt = new global::System.Data.DataColumn("oriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriamt);
                this.columnorigstamt = new global::System.Data.DataColumn("origstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorigstamt);
                this.columnpostamt = new global::System.Data.DataColumn("postamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostamt);
                this.columngstamt = new global::System.Data.DataColumn("gstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstamt);
                this.columncosamt = new global::System.Data.DataColumn("cosamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncosamt);
                this.columnstdcost = new global::System.Data.DataColumn("stdcost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstdcost);
                this.columnlgr = new global::System.Data.DataColumn("lgr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlgr);
                this.columndetail = new global::System.Data.DataColumn("detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndetail);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columnline = new global::System.Data.DataColumn("line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline);
                this.columnsupplierdo = new global::System.Data.DataColumn("supplierdo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupplierdo);
                this.columninvdate = new global::System.Data.DataColumn("invdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvdate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnsupplierinv = new global::System.Data.DataColumn("supplierinv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupplierinv);
                this.columnoridebit = new global::System.Data.DataColumn("oridebit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoridebit);
                this.columnoricredit = new global::System.Data.DataColumn("oricredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricredit);
                this.columngstper = new global::System.Data.DataColumn("gstper", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngstper);
                this.columndqty = new global::System.Data.DataColumn("dqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndqty);
                this.columndgrosamt = new global::System.Data.DataColumn("dgrosamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndgrosamt);
                this.columndpostamt = new global::System.Data.DataColumn("dpostamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndpostamt);
                this.columndoriamt = new global::System.Data.DataColumn("doriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoriamt);
                this.columndgstamt = new global::System.Data.DataColumn("dgstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndgstamt);
                this.columndorigstamt = new global::System.Data.DataColumn("dorigstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndorigstamt);
                this.columnroriamt = new global::System.Data.DataColumn("roriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroriamt);
                this.columnrpostamt = new global::System.Data.DataColumn("rpostamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrpostamt);
                this.columngrnoriamt = new global::System.Data.DataColumn("grnoriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrnoriamt);
                this.columndiscallow = new global::System.Data.DataColumn("discallow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscallow);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnccnum = new global::System.Data.DataColumn("ccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnccnum);
                this.columnsupcrnum = new global::System.Data.DataColumn("supcrnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupcrnum);
                this.columndeptno = new global::System.Data.DataColumn("deptno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptno);
                this.columnlocno = new global::System.Data.DataColumn("locno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocno);
                this.columnID.AllowDBNull = false;
                this.columnrefnum.MaxLength = 20;
                this.columndocunum.MaxLength = 20;
                this.columninvnum.MaxLength = 20;
                this.columnapnum.MaxLength = 12;
                this.columnsupinvnum.MaxLength = 20;
                this.columnptc.MaxLength = 50;
                this.columnponum.MaxLength = 20;
                this.columngrnum.MaxLength = 20;
                this.columnaccnum.MaxLength = 12;
                this.columnempnum.MaxLength = 20;
                this.columngstgrpnum.MaxLength = 12;
                this.columnmatnum.MaxLength = 20;
                this.columnuom.MaxLength = 5;
                this.columnoricur.MaxLength = 5;
                this.columnlgr.MaxLength = 5;
                this.columndetail.MaxLength = 255;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columncreatedby.MaxLength = 50;
                this.columncoy.MaxLength = 10;
                this.columnsupplierdo.MaxLength = 20;
                this.columnremark.MaxLength = 300;
                this.columnsupplierinv.MaxLength = 20;
                this.columndiscallow.MaxLength = 3;
                this.columnccnum.MaxLength = 50;
                this.columnsupcrnum.MaxLength = 50;
                this.columndeptno.MaxLength = 20;
                this.columnlocno.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIV1Row NewPIV1Row() {
                return ((PIV1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PIV1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PIV1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PIV1RowChanged != null)) {
                    this.PIV1RowChanged(this, new PIV1RowChangeEvent(((PIV1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PIV1RowChanging != null)) {
                    this.PIV1RowChanging(this, new PIV1RowChangeEvent(((PIV1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PIV1RowDeleted != null)) {
                    this.PIV1RowDeleted(this, new PIV1RowChangeEvent(((PIV1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PIV1RowDeleting != null)) {
                    this.PIV1RowDeleting(this, new PIV1RowChangeEvent(((PIV1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePIV1Row(PIV1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                paytPayment ds = new paytPayment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PIV1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ACMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnaccnum;
            
            private global::System.Data.DataColumn columnaccname;
            
            private global::System.Data.DataColumn columnacctype;
            
            private global::System.Data.DataColumn columnsubaccnum;
            
            private global::System.Data.DataColumn columndepth;
            
            private global::System.Data.DataColumn columnincludecashflow;
            
            private global::System.Data.DataColumn columncashflowtype;
            
            private global::System.Data.DataColumn columnbanknum;
            
            private global::System.Data.DataColumn columnbankaccnum;
            
            private global::System.Data.DataColumn columnclassification;
            
            private global::System.Data.DataColumn columnoldaccnum;
            
            private global::System.Data.DataColumn columnactive;
            
            private global::System.Data.DataColumn columnpurcrpt;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnsalesrpt;
            
            private global::System.Data.DataColumn columnoricur;
            
            private global::System.Data.DataColumn columncshlgritem;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnacmgcode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACMDataTable() {
                this.TableName = "ACM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ACMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ACMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnumColumn {
                get {
                    return this.columnaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnameColumn {
                get {
                    return this.columnaccname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn acctypeColumn {
                get {
                    return this.columnacctype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subaccnumColumn {
                get {
                    return this.columnsubaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn depthColumn {
                get {
                    return this.columndepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn includecashflowColumn {
                get {
                    return this.columnincludecashflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cashflowtypeColumn {
                get {
                    return this.columncashflowtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn banknumColumn {
                get {
                    return this.columnbanknum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankaccnumColumn {
                get {
                    return this.columnbankaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn classificationColumn {
                get {
                    return this.columnclassification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oldaccnumColumn {
                get {
                    return this.columnoldaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn purcrptColumn {
                get {
                    return this.columnpurcrpt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesrptColumn {
                get {
                    return this.columnsalesrpt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oricurColumn {
                get {
                    return this.columnoricur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cshlgritemColumn {
                get {
                    return this.columncshlgritem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn acmgcodeColumn {
                get {
                    return this.columnacmgcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACMRow this[int index] {
                get {
                    return ((ACMRow)(this.Rows[index]));
                }
            }
            
            public event ACMRowChangeEventHandler ACMRowChanging;
            
            public event ACMRowChangeEventHandler ACMRowChanged;
            
            public event ACMRowChangeEventHandler ACMRowDeleting;
            
            public event ACMRowChangeEventHandler ACMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddACMRow(ACMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACMRow AddACMRow(
                        long ID, 
                        string accnum, 
                        string accname, 
                        int acctype, 
                        string subaccnum, 
                        int depth, 
                        bool includecashflow, 
                        string cashflowtype, 
                        string banknum, 
                        string bankaccnum, 
                        string classification, 
                        string oldaccnum, 
                        bool active, 
                        bool purcrpt, 
                        string flag, 
                        string status, 
                        string user, 
                        string coy, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        bool salesrpt, 
                        string oricur, 
                        bool cshlgritem, 
                        string createdby, 
                        string acmgcode) {
                ACMRow rowACMRow = ((ACMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        accnum,
                        accname,
                        acctype,
                        subaccnum,
                        depth,
                        includecashflow,
                        cashflowtype,
                        banknum,
                        bankaccnum,
                        classification,
                        oldaccnum,
                        active,
                        purcrpt,
                        flag,
                        status,
                        user,
                        coy,
                        created,
                        modified,
                        salesrpt,
                        oricur,
                        cshlgritem,
                        createdby,
                        acmgcode};
                rowACMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowACMRow);
                return rowACMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ACMDataTable cln = ((ACMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ACMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnaccnum = base.Columns["accnum"];
                this.columnaccname = base.Columns["accname"];
                this.columnacctype = base.Columns["acctype"];
                this.columnsubaccnum = base.Columns["subaccnum"];
                this.columndepth = base.Columns["depth"];
                this.columnincludecashflow = base.Columns["includecashflow"];
                this.columncashflowtype = base.Columns["cashflowtype"];
                this.columnbanknum = base.Columns["banknum"];
                this.columnbankaccnum = base.Columns["bankaccnum"];
                this.columnclassification = base.Columns["classification"];
                this.columnoldaccnum = base.Columns["oldaccnum"];
                this.columnactive = base.Columns["active"];
                this.columnpurcrpt = base.Columns["purcrpt"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columnuser = base.Columns["user"];
                this.columncoy = base.Columns["coy"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnsalesrpt = base.Columns["salesrpt"];
                this.columnoricur = base.Columns["oricur"];
                this.columncshlgritem = base.Columns["cshlgritem"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnacmgcode = base.Columns["acmgcode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnaccnum = new global::System.Data.DataColumn("accnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum);
                this.columnaccname = new global::System.Data.DataColumn("accname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccname);
                this.columnacctype = new global::System.Data.DataColumn("acctype", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacctype);
                this.columnsubaccnum = new global::System.Data.DataColumn("subaccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubaccnum);
                this.columndepth = new global::System.Data.DataColumn("depth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepth);
                this.columnincludecashflow = new global::System.Data.DataColumn("includecashflow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincludecashflow);
                this.columncashflowtype = new global::System.Data.DataColumn("cashflowtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncashflowtype);
                this.columnbanknum = new global::System.Data.DataColumn("banknum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbanknum);
                this.columnbankaccnum = new global::System.Data.DataColumn("bankaccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankaccnum);
                this.columnclassification = new global::System.Data.DataColumn("classification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclassification);
                this.columnoldaccnum = new global::System.Data.DataColumn("oldaccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoldaccnum);
                this.columnactive = new global::System.Data.DataColumn("active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columnpurcrpt = new global::System.Data.DataColumn("purcrpt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpurcrpt);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnsalesrpt = new global::System.Data.DataColumn("salesrpt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesrpt);
                this.columnoricur = new global::System.Data.DataColumn("oricur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoricur);
                this.columncshlgritem = new global::System.Data.DataColumn("cshlgritem", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncshlgritem);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnacmgcode = new global::System.Data.DataColumn("acmgcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacmgcode);
                this.columnID.AllowDBNull = false;
                this.columnaccnum.MaxLength = 12;
                this.columnaccname.MaxLength = 50;
                this.columnsubaccnum.MaxLength = 12;
                this.columncashflowtype.MaxLength = 1;
                this.columnbanknum.MaxLength = 12;
                this.columnbankaccnum.MaxLength = 20;
                this.columnclassification.MaxLength = 129;
                this.columnoldaccnum.MaxLength = 20;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnuser.MaxLength = 50;
                this.columncoy.MaxLength = 10;
                this.columnoricur.MaxLength = 5;
                this.columncreatedby.MaxLength = 30;
                this.columnacmgcode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACMRow NewACMRow() {
                return ((ACMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ACMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ACMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ACMRowChanged != null)) {
                    this.ACMRowChanged(this, new ACMRowChangeEvent(((ACMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ACMRowChanging != null)) {
                    this.ACMRowChanging(this, new ACMRowChangeEvent(((ACMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ACMRowDeleted != null)) {
                    this.ACMRowDeleted(this, new ACMRowChangeEvent(((ACMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ACMRowDeleting != null)) {
                    this.ACMRowDeleting(this, new ACMRowChangeEvent(((ACMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveACMRow(ACMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                paytPayment ds = new paytPayment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ACMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class paytRow : global::System.Data.DataRow {
            
            private paytDataTable tablepayt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal paytRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepayt = ((paytDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablepayt.IDColumn]));
                }
                set {
                    this[this.tablepayt.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablepayt.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string docunum {
                get {
                    try {
                        return ((string)(this[this.tablepayt.docunumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docunum\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.docunumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tablepayt.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablepayt.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal exrate {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.exrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exrate\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.exrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gstgrpnum {
                get {
                    try {
                        return ((string)(this[this.tablepayt.gstgrpnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstgrpnum\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.gstgrpnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gstper {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.gstperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstper\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.gstperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool verify {
                get {
                    try {
                        return ((bool)(this[this.tablepayt.verifyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'verify\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.verifyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool advtype {
                get {
                    try {
                        return ((bool)(this[this.tablepayt.advtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'advtype\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.advtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string terms {
                get {
                    try {
                        return ((string)(this[this.tablepayt.termsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'terms\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.termsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptc {
                get {
                    try {
                        return ((string)(this[this.tablepayt.ptcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ptc\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.ptcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum1 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.accnum1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum1\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.accnum1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum2 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.accnum2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum2\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.accnum2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur {
                get {
                    try {
                        return ((string)(this[this.tablepayt.oricurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.oricurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur1 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.oricur1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur1\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.oricur1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur2 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.oricur2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur2\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.oricur2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tablepayt.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bankamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.bankamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.bankamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bankchg {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.bankchgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankchg\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.bankchgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oriamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.oriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oriamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.oriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bankchggst {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.bankchggstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankchggst\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.bankchggstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal origstamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.origstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'origstamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.origstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oritotalamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.oritotalamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oritotalamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.oritotalamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal postamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.postamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.postamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gstamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.gstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.gstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.totalamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.totalamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string detail {
                get {
                    try {
                        return ((string)(this[this.tablepayt.detailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'detail\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.detailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepayt.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tablepayt.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year {
                get {
                    try {
                        return ((int)(this[this.tablepayt.yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'year\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablepayt.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mark {
                get {
                    try {
                        return ((bool)(this[this.tablepayt.markColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mark\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.markColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal line {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'line\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item {
                get {
                    try {
                        return ((string)(this[this.tablepayt.itemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'item\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.itemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablepayt.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablepayt.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablepayt.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string issueby {
                get {
                    try {
                        return ((string)(this[this.tablepayt.issuebyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issueby\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.issuebyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepayt.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepayt.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablepayt.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankname {
                get {
                    try {
                        return ((string)(this[this.tablepayt.banknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankname\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.banknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankbranch {
                get {
                    try {
                        return ((string)(this[this.tablepayt.bankbranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankbranch\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.bankbranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chknum {
                get {
                    try {
                        return ((string)(this[this.tablepayt.chknumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chknum\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.chknumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankacc {
                get {
                    try {
                        return ((string)(this[this.tablepayt.bankaccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankacc\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.bankaccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptnum {
                get {
                    try {
                        return ((string)(this[this.tablepayt.ptnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ptnum\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.ptnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hp {
                get {
                    try {
                        return ((string)(this[this.tablepayt.hpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hp\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.hpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablepayt.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dbankamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.dbankamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbankamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.dbankamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dbankchg {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.dbankchgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbankchg\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.dbankchgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chequeno {
                get {
                    try {
                        return ((string)(this[this.tablepayt.chequenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chequeno\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.chequenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum3 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.accnum3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum3\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.accnum3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur3 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.oricur3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur3\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.oricur3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal discamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.discamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.discamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amtpaid {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.amtpaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amtpaid\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.amtpaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur4 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.oricur4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur4\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.oricur4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum4 {
                get {
                    try {
                        return ((string)(this[this.tablepayt.accnum4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum4\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.accnum4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tablepayt.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string payterms {
                get {
                    try {
                        return ((string)(this[this.tablepayt.paytermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'payterms\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.paytermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablepayt.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tablepayt.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tablepayt.faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fax\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal flexamt {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.flexamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flexamt\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.flexamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal aptotal {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.aptotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aptotal\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.aptotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pivtotal {
                get {
                    try {
                        return ((decimal)(this[this.tablepayt.pivtotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pivtotal\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.pivtotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apname {
                get {
                    try {
                        return ((string)(this[this.tablepayt.apnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apname\' in table \'payt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayt.apnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablepayt.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablepayt.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocunumNull() {
                return this.IsNull(this.tablepayt.docunumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocunumNull() {
                this[this.tablepayt.docunumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tablepayt.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tablepayt.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablepayt.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablepayt.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexrateNull() {
                return this.IsNull(this.tablepayt.exrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexrateNull() {
                this[this.tablepayt.exrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstgrpnumNull() {
                return this.IsNull(this.tablepayt.gstgrpnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstgrpnumNull() {
                this[this.tablepayt.gstgrpnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstperNull() {
                return this.IsNull(this.tablepayt.gstperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstperNull() {
                this[this.tablepayt.gstperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsverifyNull() {
                return this.IsNull(this.tablepayt.verifyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetverifyNull() {
                this[this.tablepayt.verifyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadvtypeNull() {
                return this.IsNull(this.tablepayt.advtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadvtypeNull() {
                this[this.tablepayt.advtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstermsNull() {
                return this.IsNull(this.tablepayt.termsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettermsNull() {
                this[this.tablepayt.termsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptcNull() {
                return this.IsNull(this.tablepayt.ptcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptcNull() {
                this[this.tablepayt.ptcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccnum1Null() {
                return this.IsNull(this.tablepayt.accnum1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccnum1Null() {
                this[this.tablepayt.accnum1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccnum2Null() {
                return this.IsNull(this.tablepayt.accnum2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccnum2Null() {
                this[this.tablepayt.accnum2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricurNull() {
                return this.IsNull(this.tablepayt.oricurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricurNull() {
                this[this.tablepayt.oricurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoricur1Null() {
                return this.IsNull(this.tablepayt.oricur1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoricur1Null() {
                this[this.tablepayt.oricur1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoricur2Null() {
                return this.IsNull(this.tablepayt.oricur2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoricur2Null() {
                this[this.tablepayt.oricur2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tablepayt.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tablepayt.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankamtNull() {
                return this.IsNull(this.tablepayt.bankamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankamtNull() {
                this[this.tablepayt.bankamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankchgNull() {
                return this.IsNull(this.tablepayt.bankchgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankchgNull() {
                this[this.tablepayt.bankchgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoriamtNull() {
                return this.IsNull(this.tablepayt.oriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoriamtNull() {
                this[this.tablepayt.oriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankchggstNull() {
                return this.IsNull(this.tablepayt.bankchggstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankchggstNull() {
                this[this.tablepayt.bankchggstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorigstamtNull() {
                return this.IsNull(this.tablepayt.origstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorigstamtNull() {
                this[this.tablepayt.origstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoritotalamtNull() {
                return this.IsNull(this.tablepayt.oritotalamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoritotalamtNull() {
                this[this.tablepayt.oritotalamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspostamtNull() {
                return this.IsNull(this.tablepayt.postamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpostamtNull() {
                this[this.tablepayt.postamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstamtNull() {
                return this.IsNull(this.tablepayt.gstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstamtNull() {
                this[this.tablepayt.gstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalamtNull() {
                return this.IsNull(this.tablepayt.totalamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalamtNull() {
                this[this.tablepayt.totalamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdetailNull() {
                return this.IsNull(this.tablepayt.detailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdetailNull() {
                this[this.tablepayt.detailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tablepayt.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tablepayt.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tablepayt.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tablepayt.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearNull() {
                return this.IsNull(this.tablepayt.yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearNull() {
                this[this.tablepayt.yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablepayt.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablepayt.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmarkNull() {
                return this.IsNull(this.tablepayt.markColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmarkNull() {
                this[this.tablepayt.markColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNull() {
                return this.IsNull(this.tablepayt.lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNull() {
                this[this.tablepayt.lineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemNull() {
                return this.IsNull(this.tablepayt.itemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemNull() {
                this[this.tablepayt.itemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablepayt.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablepayt.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablepayt.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablepayt.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablepayt.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablepayt.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsissuebyNull() {
                return this.IsNull(this.tablepayt.issuebyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetissuebyNull() {
                this[this.tablepayt.issuebyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablepayt.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablepayt.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablepayt.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablepayt.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablepayt.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablepayt.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanknameNull() {
                return this.IsNull(this.tablepayt.banknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanknameNull() {
                this[this.tablepayt.banknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankbranchNull() {
                return this.IsNull(this.tablepayt.bankbranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankbranchNull() {
                this[this.tablepayt.bankbranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschknumNull() {
                return this.IsNull(this.tablepayt.chknumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchknumNull() {
                this[this.tablepayt.chknumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankaccNull() {
                return this.IsNull(this.tablepayt.bankaccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankaccNull() {
                this[this.tablepayt.bankaccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptnumNull() {
                return this.IsNull(this.tablepayt.ptnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptnumNull() {
                this[this.tablepayt.ptnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshpNull() {
                return this.IsNull(this.tablepayt.hpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethpNull() {
                this[this.tablepayt.hpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tablepayt.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tablepayt.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdbankamtNull() {
                return this.IsNull(this.tablepayt.dbankamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdbankamtNull() {
                this[this.tablepayt.dbankamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdbankchgNull() {
                return this.IsNull(this.tablepayt.dbankchgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdbankchgNull() {
                this[this.tablepayt.dbankchgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschequenoNull() {
                return this.IsNull(this.tablepayt.chequenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchequenoNull() {
                this[this.tablepayt.chequenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccnum3Null() {
                return this.IsNull(this.tablepayt.accnum3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccnum3Null() {
                this[this.tablepayt.accnum3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoricur3Null() {
                return this.IsNull(this.tablepayt.oricur3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoricur3Null() {
                this[this.tablepayt.oricur3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscamtNull() {
                return this.IsNull(this.tablepayt.discamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscamtNull() {
                this[this.tablepayt.discamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamtpaidNull() {
                return this.IsNull(this.tablepayt.amtpaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamtpaidNull() {
                this[this.tablepayt.amtpaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoricur4Null() {
                return this.IsNull(this.tablepayt.oricur4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoricur4Null() {
                this[this.tablepayt.oricur4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccnum4Null() {
                return this.IsNull(this.tablepayt.accnum4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccnum4Null() {
                this[this.tablepayt.accnum4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tablepayt.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tablepayt.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaytermsNull() {
                return this.IsNull(this.tablepayt.paytermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaytermsNull() {
                this[this.tablepayt.paytermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tablepayt.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tablepayt.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tablepayt.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tablepayt.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxNull() {
                return this.IsNull(this.tablepayt.faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxNull() {
                this[this.tablepayt.faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflexamtNull() {
                return this.IsNull(this.tablepayt.flexamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflexamtNull() {
                this[this.tablepayt.flexamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaptotalNull() {
                return this.IsNull(this.tablepayt.aptotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaptotalNull() {
                this[this.tablepayt.aptotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspivtotalNull() {
                return this.IsNull(this.tablepayt.pivtotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpivtotalNull() {
                this[this.tablepayt.pivtotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnameNull() {
                return this.IsNull(this.tablepayt.apnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnameNull() {
                this[this.tablepayt.apnameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APDRow : global::System.Data.DataRow {
            
            private APDDataTable tableAPD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPD = ((APDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableAPD.IDColumn]));
                }
                set {
                    this[this.tableAPD.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string docunum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.docunumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docunum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.docunumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supinvnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.supinvnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'supinvnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.supinvnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.invnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.invnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chknum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.chknumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chknum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.chknumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.accnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.accnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ccnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.ccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ccnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.ccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.regnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.regnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime invdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPD.invdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invdate\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.invdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPD.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur {
                get {
                    try {
                        return ((string)(this[this.tableAPD.oricurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.oricurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal exrate {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.exrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exrate\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.exrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oricredit {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.oricreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricredit\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.oricreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oridebit {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.oridebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oridebit\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.oridebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oriamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.oriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oriamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.oriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal postamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.postamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.postamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal exramt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.exramtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exramt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.exramtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gstamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.gstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.gstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string detail {
                get {
                    try {
                        return ((string)(this[this.tableAPD.detailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'detail\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.detailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int crterm {
                get {
                    try {
                        return ((int)(this[this.tableAPD.crtermColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'crterm\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.crtermColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool opbal {
                get {
                    try {
                        return ((bool)(this[this.tableAPD.opbalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opbal\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.opbalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int advtype {
                get {
                    try {
                        return ((int)(this[this.tableAPD.advtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'advtype\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.advtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tableAPD.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableAPD.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableAPD.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableAPD.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPD.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPD.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tableAPD.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal line {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'line\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prjnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.prjnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prjnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.prjnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableAPD.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pivnum {
                get {
                    try {
                        return ((string)(this[this.tableAPD.pivnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pivnum\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.pivnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lgr {
                get {
                    try {
                        return ((string)(this[this.tableAPD.lgrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lgr\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.lgrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal origstamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.origstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'origstamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.origstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chknum1 {
                get {
                    try {
                        return ((string)(this[this.tableAPD.chknum1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chknum1\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.chknum1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal finaloriamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.finaloriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finaloriamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.finaloriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rebateper {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.rebateperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rebateper\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.rebateperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rebateamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.rebateamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rebateamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.rebateamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal doriamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.doriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doriamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.doriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dpostamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.dpostamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dpostamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.dpostamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dgstamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.dgstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dgstamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.dgstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool opbal1 {
                get {
                    try {
                        return ((bool)(this[this.tableAPD.opbal1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opbal1\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.opbal1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pivamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.pivamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pivamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.pivamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal adjamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.adjamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'adjamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.adjamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dorigstamt {
                get {
                    try {
                        return ((decimal)(this[this.tableAPD.dorigstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dorigstamt\' in table \'APD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPD.dorigstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableAPD.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableAPD.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tableAPD.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tableAPD.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocunumNull() {
                return this.IsNull(this.tableAPD.docunumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocunumNull() {
                this[this.tableAPD.docunumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupinvnumNull() {
                return this.IsNull(this.tableAPD.supinvnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupinvnumNull() {
                this[this.tableAPD.supinvnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvnumNull() {
                return this.IsNull(this.tableAPD.invnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvnumNull() {
                this[this.tableAPD.invnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschknumNull() {
                return this.IsNull(this.tableAPD.chknumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchknumNull() {
                this[this.tableAPD.chknumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccnumNull() {
                return this.IsNull(this.tableAPD.accnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccnumNull() {
                this[this.tableAPD.accnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccnumNull() {
                return this.IsNull(this.tableAPD.ccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccnumNull() {
                this[this.tableAPD.ccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableAPD.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableAPD.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregnumNull() {
                return this.IsNull(this.tableAPD.regnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregnumNull() {
                this[this.tableAPD.regnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvdateNull() {
                return this.IsNull(this.tableAPD.invdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvdateNull() {
                this[this.tableAPD.invdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tableAPD.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tableAPD.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricurNull() {
                return this.IsNull(this.tableAPD.oricurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricurNull() {
                this[this.tableAPD.oricurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexrateNull() {
                return this.IsNull(this.tableAPD.exrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexrateNull() {
                this[this.tableAPD.exrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricreditNull() {
                return this.IsNull(this.tableAPD.oricreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricreditNull() {
                this[this.tableAPD.oricreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoridebitNull() {
                return this.IsNull(this.tableAPD.oridebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoridebitNull() {
                this[this.tableAPD.oridebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoriamtNull() {
                return this.IsNull(this.tableAPD.oriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoriamtNull() {
                this[this.tableAPD.oriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspostamtNull() {
                return this.IsNull(this.tableAPD.postamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpostamtNull() {
                this[this.tableAPD.postamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexramtNull() {
                return this.IsNull(this.tableAPD.exramtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexramtNull() {
                this[this.tableAPD.exramtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstamtNull() {
                return this.IsNull(this.tableAPD.gstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstamtNull() {
                this[this.tableAPD.gstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdetailNull() {
                return this.IsNull(this.tableAPD.detailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdetailNull() {
                this[this.tableAPD.detailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscrtermNull() {
                return this.IsNull(this.tableAPD.crtermColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcrtermNull() {
                this[this.tableAPD.crtermColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsopbalNull() {
                return this.IsNull(this.tableAPD.opbalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetopbalNull() {
                this[this.tableAPD.opbalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadvtypeNull() {
                return this.IsNull(this.tableAPD.advtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadvtypeNull() {
                this[this.tableAPD.advtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tableAPD.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tableAPD.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableAPD.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableAPD.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableAPD.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableAPD.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableAPD.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableAPD.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableAPD.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableAPD.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableAPD.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableAPD.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tableAPD.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tableAPD.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNull() {
                return this.IsNull(this.tableAPD.lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNull() {
                this[this.tableAPD.lineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprjnumNull() {
                return this.IsNull(this.tableAPD.prjnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprjnumNull() {
                this[this.tableAPD.prjnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableAPD.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableAPD.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspivnumNull() {
                return this.IsNull(this.tableAPD.pivnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpivnumNull() {
                this[this.tableAPD.pivnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslgrNull() {
                return this.IsNull(this.tableAPD.lgrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlgrNull() {
                this[this.tableAPD.lgrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorigstamtNull() {
                return this.IsNull(this.tableAPD.origstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorigstamtNull() {
                this[this.tableAPD.origstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischknum1Null() {
                return this.IsNull(this.tableAPD.chknum1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchknum1Null() {
                this[this.tableAPD.chknum1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfinaloriamtNull() {
                return this.IsNull(this.tableAPD.finaloriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfinaloriamtNull() {
                this[this.tableAPD.finaloriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrebateperNull() {
                return this.IsNull(this.tableAPD.rebateperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrebateperNull() {
                this[this.tableAPD.rebateperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrebateamtNull() {
                return this.IsNull(this.tableAPD.rebateamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrebateamtNull() {
                this[this.tableAPD.rebateamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdoriamtNull() {
                return this.IsNull(this.tableAPD.doriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdoriamtNull() {
                this[this.tableAPD.doriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdpostamtNull() {
                return this.IsNull(this.tableAPD.dpostamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdpostamtNull() {
                this[this.tableAPD.dpostamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdgstamtNull() {
                return this.IsNull(this.tableAPD.dgstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdgstamtNull() {
                this[this.tableAPD.dgstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isopbal1Null() {
                return this.IsNull(this.tableAPD.opbal1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setopbal1Null() {
                this[this.tableAPD.opbal1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspivamtNull() {
                return this.IsNull(this.tableAPD.pivamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpivamtNull() {
                this[this.tableAPD.pivamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadjamtNull() {
                return this.IsNull(this.tableAPD.adjamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadjamtNull() {
                this[this.tableAPD.adjamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdorigstamtNull() {
                return this.IsNull(this.tableAPD.dorigstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdorigstamtNull() {
                this[this.tableAPD.dorigstamtColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APMRow : global::System.Data.DataRow {
            
            private APMDataTable tableAPM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPM = ((APMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableAPM.IDColumn]));
                }
                set {
                    this[this.tableAPM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tableAPM.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apname {
                get {
                    try {
                        return ((string)(this[this.tableAPM.apnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apname\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.apnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tableAPM.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableAPM.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hp {
                get {
                    try {
                        return ((string)(this[this.tableAPM.hpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hp\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.hpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tableAPM.faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fax\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableAPM.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptc {
                get {
                    try {
                        return ((string)(this[this.tableAPM.ptcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ptc\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.ptcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string term {
                get {
                    try {
                        return ((string)(this[this.tableAPM.termColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'term\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.termColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal credit {
                get {
                    try {
                        return ((decimal)(this[this.tableAPM.creditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'credit\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.creditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gstgrpnum {
                get {
                    try {
                        return ((string)(this[this.tableAPM.gstgrpnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstgrpnum\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.gstgrpnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regnum {
                get {
                    try {
                        return ((string)(this[this.tableAPM.regnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regnum\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.regnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur {
                get {
                    try {
                        return ((string)(this[this.tableAPM.oricurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.oricurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum {
                get {
                    try {
                        return ((string)(this[this.tableAPM.accnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.accnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool expire {
                get {
                    try {
                        return ((bool)(this[this.tableAPM.expireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expire\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.expireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableAPM.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableAPM.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableAPM.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPM.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPM.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptnum {
                get {
                    try {
                        return ((string)(this[this.tableAPM.ptnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ptnum\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.ptnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool active {
                get {
                    try {
                        return ((bool)(this[this.tableAPM.activeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'active\' in table \'APM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPM.activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tableAPM.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tableAPM.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnameNull() {
                return this.IsNull(this.tableAPM.apnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnameNull() {
                this[this.tableAPM.apnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tableAPM.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tableAPM.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableAPM.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableAPM.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshpNull() {
                return this.IsNull(this.tableAPM.hpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethpNull() {
                this[this.tableAPM.hpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxNull() {
                return this.IsNull(this.tableAPM.faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxNull() {
                this[this.tableAPM.faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableAPM.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableAPM.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptcNull() {
                return this.IsNull(this.tableAPM.ptcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptcNull() {
                this[this.tableAPM.ptcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstermNull() {
                return this.IsNull(this.tableAPM.termColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettermNull() {
                this[this.tableAPM.termColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreditNull() {
                return this.IsNull(this.tableAPM.creditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreditNull() {
                this[this.tableAPM.creditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstgrpnumNull() {
                return this.IsNull(this.tableAPM.gstgrpnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstgrpnumNull() {
                this[this.tableAPM.gstgrpnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregnumNull() {
                return this.IsNull(this.tableAPM.regnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregnumNull() {
                this[this.tableAPM.regnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricurNull() {
                return this.IsNull(this.tableAPM.oricurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricurNull() {
                this[this.tableAPM.oricurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccnumNull() {
                return this.IsNull(this.tableAPM.accnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccnumNull() {
                this[this.tableAPM.accnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpireNull() {
                return this.IsNull(this.tableAPM.expireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpireNull() {
                this[this.tableAPM.expireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableAPM.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableAPM.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableAPM.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableAPM.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableAPM.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableAPM.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableAPM.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableAPM.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableAPM.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableAPM.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptnumNull() {
                return this.IsNull(this.tableAPM.ptnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptnumNull() {
                this[this.tableAPM.ptnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsactiveNull() {
                return this.IsNull(this.tableAPM.activeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetactiveNull() {
                this[this.tableAPM.activeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class coyRow : global::System.Data.DataRow {
            
            private coyDataTable tablecoy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal coyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecoy = ((coyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablecoy.IDColumn]));
                }
                set {
                    this[this.tablecoy.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyname {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coynameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyname\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coynameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr1 {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyaddr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr1\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyaddr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr2 {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyaddr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr2\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyaddr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr3 {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyaddr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr3\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyaddr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr4 {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyaddr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr4\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyaddr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyemail {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyemailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyemail\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyemailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyurl {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyurlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyurl\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyurlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coytel {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coytelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coytel\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coytelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyfax {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyfaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyfax\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyfaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyregnum {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coyregnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyregnum\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyregnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coygstnum {
                get {
                    try {
                        return ((string)(this[this.tablecoy.coygstnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coygstnum\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coygstnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablecoy.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablecoy.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablecoy.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecoy.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecoy.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] coyimage {
                get {
                    try {
                        return ((byte[])(this[this.tablecoy.coyimageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyimage\' in table \'coy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoy.coyimageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablecoy.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablecoy.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoynameNull() {
                return this.IsNull(this.tablecoy.coynameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoynameNull() {
                this[this.tablecoy.coynameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr1Null() {
                return this.IsNull(this.tablecoy.coyaddr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr1Null() {
                this[this.tablecoy.coyaddr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr2Null() {
                return this.IsNull(this.tablecoy.coyaddr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr2Null() {
                this[this.tablecoy.coyaddr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr3Null() {
                return this.IsNull(this.tablecoy.coyaddr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr3Null() {
                this[this.tablecoy.coyaddr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr4Null() {
                return this.IsNull(this.tablecoy.coyaddr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr4Null() {
                this[this.tablecoy.coyaddr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyemailNull() {
                return this.IsNull(this.tablecoy.coyemailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyemailNull() {
                this[this.tablecoy.coyemailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyurlNull() {
                return this.IsNull(this.tablecoy.coyurlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyurlNull() {
                this[this.tablecoy.coyurlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoytelNull() {
                return this.IsNull(this.tablecoy.coytelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoytelNull() {
                this[this.tablecoy.coytelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyfaxNull() {
                return this.IsNull(this.tablecoy.coyfaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyfaxNull() {
                this[this.tablecoy.coyfaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyregnumNull() {
                return this.IsNull(this.tablecoy.coyregnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyregnumNull() {
                this[this.tablecoy.coyregnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoygstnumNull() {
                return this.IsNull(this.tablecoy.coygstnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoygstnumNull() {
                this[this.tablecoy.coygstnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablecoy.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablecoy.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablecoy.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablecoy.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablecoy.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablecoy.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablecoy.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablecoy.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablecoy.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablecoy.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyimageNull() {
                return this.IsNull(this.tablecoy.coyimageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyimageNull() {
                this[this.tablecoy.coyimageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PIV1Row : global::System.Data.DataRow {
            
            private PIV1DataTable tablePIV1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIV1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePIV1 = ((PIV1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tablePIV1.IDColumn]));
                }
                set {
                    this[this.tablePIV1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string docunum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.docunumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docunum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.docunumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.invnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.invnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supinvnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.supinvnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'supinvnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.supinvnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptc {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.ptcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ptc\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.ptcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ponum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.ponumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ponum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.ponumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.grnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.grnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.accnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.accnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gstgrpnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.gstgrpnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstgrpnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.gstgrpnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool updatestock {
                get {
                    try {
                        return ((bool)(this[this.tablePIV1.updatestockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updatestock\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.updatestockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePIV1.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.oricurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.oricurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal exrate {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.exrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exrate\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.exrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal grosamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.grosamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grosamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.grosamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal discamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.discamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.discamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oriamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.oriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oriamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.oriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal origstamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.origstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'origstamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.origstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal postamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.postamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.postamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gstamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.gstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.gstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal cosamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.cosamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cosamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.cosamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stdcost {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.stdcostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stdcost\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.stdcostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lgr {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.lgrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lgr\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.lgrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string detail {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.detailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'detail\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.detailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tablePIV1.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePIV1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePIV1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal line {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'line\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supplierdo {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.supplierdoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'supplierdo\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.supplierdoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime invdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePIV1.invdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invdate\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.invdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supplierinv {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.supplierinvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'supplierinv\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.supplierinvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oridebit {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.oridebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oridebit\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.oridebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oricredit {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.oricreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricredit\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.oricreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gstper {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.gstperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gstper\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.gstperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dqty {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.dqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dqty\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.dqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dgrosamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.dgrosamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dgrosamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.dgrosamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dpostamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.dpostamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dpostamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.dpostamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal doriamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.doriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doriamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.doriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dgstamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.dgstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dgstamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.dgstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dorigstamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.dorigstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dorigstamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.dorigstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal roriamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.roriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'roriamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.roriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rpostamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.rpostamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rpostamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.rpostamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal grnoriamt {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.grnoriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grnoriamt\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.grnoriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string discallow {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.discallowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discallow\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.discallowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    try {
                        return ((decimal)(this[this.tablePIV1.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ccnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.ccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ccnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.ccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supcrnum {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.supcrnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'supcrnum\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.supcrnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string deptno {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.deptnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deptno\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.deptnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string locno {
                get {
                    try {
                        return ((string)(this[this.tablePIV1.locnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'locno\' in table \'PIV1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIV1.locnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablePIV1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablePIV1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocunumNull() {
                return this.IsNull(this.tablePIV1.docunumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocunumNull() {
                this[this.tablePIV1.docunumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvnumNull() {
                return this.IsNull(this.tablePIV1.invnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvnumNull() {
                this[this.tablePIV1.invnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tablePIV1.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tablePIV1.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupinvnumNull() {
                return this.IsNull(this.tablePIV1.supinvnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupinvnumNull() {
                this[this.tablePIV1.supinvnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptcNull() {
                return this.IsNull(this.tablePIV1.ptcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptcNull() {
                this[this.tablePIV1.ptcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsponumNull() {
                return this.IsNull(this.tablePIV1.ponumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetponumNull() {
                this[this.tablePIV1.ponumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrnumNull() {
                return this.IsNull(this.tablePIV1.grnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrnumNull() {
                this[this.tablePIV1.grnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccnumNull() {
                return this.IsNull(this.tablePIV1.accnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccnumNull() {
                this[this.tablePIV1.accnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tablePIV1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tablePIV1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstgrpnumNull() {
                return this.IsNull(this.tablePIV1.gstgrpnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstgrpnumNull() {
                this[this.tablePIV1.gstgrpnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tablePIV1.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tablePIV1.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tablePIV1.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tablePIV1.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatestockNull() {
                return this.IsNull(this.tablePIV1.updatestockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatestockNull() {
                this[this.tablePIV1.updatestockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tablePIV1.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tablePIV1.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricurNull() {
                return this.IsNull(this.tablePIV1.oricurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricurNull() {
                this[this.tablePIV1.oricurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexrateNull() {
                return this.IsNull(this.tablePIV1.exrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexrateNull() {
                this[this.tablePIV1.exrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tablePIV1.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tablePIV1.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrosamtNull() {
                return this.IsNull(this.tablePIV1.grosamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrosamtNull() {
                this[this.tablePIV1.grosamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscamtNull() {
                return this.IsNull(this.tablePIV1.discamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscamtNull() {
                this[this.tablePIV1.discamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoriamtNull() {
                return this.IsNull(this.tablePIV1.oriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoriamtNull() {
                this[this.tablePIV1.oriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorigstamtNull() {
                return this.IsNull(this.tablePIV1.origstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorigstamtNull() {
                this[this.tablePIV1.origstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspostamtNull() {
                return this.IsNull(this.tablePIV1.postamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpostamtNull() {
                this[this.tablePIV1.postamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstamtNull() {
                return this.IsNull(this.tablePIV1.gstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstamtNull() {
                this[this.tablePIV1.gstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscosamtNull() {
                return this.IsNull(this.tablePIV1.cosamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcosamtNull() {
                this[this.tablePIV1.cosamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstdcostNull() {
                return this.IsNull(this.tablePIV1.stdcostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstdcostNull() {
                this[this.tablePIV1.stdcostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslgrNull() {
                return this.IsNull(this.tablePIV1.lgrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlgrNull() {
                this[this.tablePIV1.lgrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdetailNull() {
                return this.IsNull(this.tablePIV1.detailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdetailNull() {
                this[this.tablePIV1.detailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tablePIV1.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tablePIV1.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablePIV1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablePIV1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tablePIV1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tablePIV1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePIV1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePIV1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tablePIV1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tablePIV1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tablePIV1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tablePIV1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablePIV1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablePIV1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tablePIV1.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tablePIV1.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNull() {
                return this.IsNull(this.tablePIV1.lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNull() {
                this[this.tablePIV1.lineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupplierdoNull() {
                return this.IsNull(this.tablePIV1.supplierdoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupplierdoNull() {
                this[this.tablePIV1.supplierdoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvdateNull() {
                return this.IsNull(this.tablePIV1.invdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvdateNull() {
                this[this.tablePIV1.invdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tablePIV1.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tablePIV1.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupplierinvNull() {
                return this.IsNull(this.tablePIV1.supplierinvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupplierinvNull() {
                this[this.tablePIV1.supplierinvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoridebitNull() {
                return this.IsNull(this.tablePIV1.oridebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoridebitNull() {
                this[this.tablePIV1.oridebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricreditNull() {
                return this.IsNull(this.tablePIV1.oricreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricreditNull() {
                this[this.tablePIV1.oricreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgstperNull() {
                return this.IsNull(this.tablePIV1.gstperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgstperNull() {
                this[this.tablePIV1.gstperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdqtyNull() {
                return this.IsNull(this.tablePIV1.dqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdqtyNull() {
                this[this.tablePIV1.dqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdgrosamtNull() {
                return this.IsNull(this.tablePIV1.dgrosamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdgrosamtNull() {
                this[this.tablePIV1.dgrosamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdpostamtNull() {
                return this.IsNull(this.tablePIV1.dpostamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdpostamtNull() {
                this[this.tablePIV1.dpostamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdoriamtNull() {
                return this.IsNull(this.tablePIV1.doriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdoriamtNull() {
                this[this.tablePIV1.doriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdgstamtNull() {
                return this.IsNull(this.tablePIV1.dgstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdgstamtNull() {
                this[this.tablePIV1.dgstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdorigstamtNull() {
                return this.IsNull(this.tablePIV1.dorigstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdorigstamtNull() {
                this[this.tablePIV1.dorigstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsroriamtNull() {
                return this.IsNull(this.tablePIV1.roriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetroriamtNull() {
                this[this.tablePIV1.roriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrpostamtNull() {
                return this.IsNull(this.tablePIV1.rpostamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrpostamtNull() {
                this[this.tablePIV1.rpostamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrnoriamtNull() {
                return this.IsNull(this.tablePIV1.grnoriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrnoriamtNull() {
                this[this.tablePIV1.grnoriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscallowNull() {
                return this.IsNull(this.tablePIV1.discallowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscallowNull() {
                this[this.tablePIV1.discallowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tablePIV1.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tablePIV1.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccnumNull() {
                return this.IsNull(this.tablePIV1.ccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccnumNull() {
                this[this.tablePIV1.ccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupcrnumNull() {
                return this.IsNull(this.tablePIV1.supcrnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupcrnumNull() {
                this[this.tablePIV1.supcrnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeptnoNull() {
                return this.IsNull(this.tablePIV1.deptnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeptnoNull() {
                this[this.tablePIV1.deptnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocnoNull() {
                return this.IsNull(this.tablePIV1.locnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocnoNull() {
                this[this.tablePIV1.locnoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ACMRow : global::System.Data.DataRow {
            
            private ACMDataTable tableACM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ACMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableACM = ((ACMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableACM.IDColumn]));
                }
                set {
                    this[this.tableACM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum {
                get {
                    try {
                        return ((string)(this[this.tableACM.accnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.accnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accname {
                get {
                    try {
                        return ((string)(this[this.tableACM.accnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accname\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.accnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int acctype {
                get {
                    try {
                        return ((int)(this[this.tableACM.acctypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'acctype\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.acctypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subaccnum {
                get {
                    try {
                        return ((string)(this[this.tableACM.subaccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subaccnum\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.subaccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int depth {
                get {
                    try {
                        return ((int)(this[this.tableACM.depthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'depth\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.depthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool includecashflow {
                get {
                    try {
                        return ((bool)(this[this.tableACM.includecashflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'includecashflow\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.includecashflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cashflowtype {
                get {
                    try {
                        return ((string)(this[this.tableACM.cashflowtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cashflowtype\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.cashflowtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string banknum {
                get {
                    try {
                        return ((string)(this[this.tableACM.banknumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'banknum\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.banknumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankaccnum {
                get {
                    try {
                        return ((string)(this[this.tableACM.bankaccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankaccnum\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.bankaccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string classification {
                get {
                    try {
                        return ((string)(this[this.tableACM.classificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'classification\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.classificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oldaccnum {
                get {
                    try {
                        return ((string)(this[this.tableACM.oldaccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oldaccnum\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.oldaccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool active {
                get {
                    try {
                        return ((bool)(this[this.tableACM.activeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'active\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool purcrpt {
                get {
                    try {
                        return ((bool)(this[this.tableACM.purcrptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'purcrpt\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.purcrptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableACM.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableACM.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableACM.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tableACM.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableACM.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableACM.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool salesrpt {
                get {
                    try {
                        return ((bool)(this[this.tableACM.salesrptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesrpt\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.salesrptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oricur {
                get {
                    try {
                        return ((string)(this[this.tableACM.oricurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oricur\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.oricurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool cshlgritem {
                get {
                    try {
                        return ((bool)(this[this.tableACM.cshlgritemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cshlgritem\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.cshlgritemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableACM.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string acmgcode {
                get {
                    try {
                        return ((string)(this[this.tableACM.acmgcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'acmgcode\' in table \'ACM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACM.acmgcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccnumNull() {
                return this.IsNull(this.tableACM.accnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccnumNull() {
                this[this.tableACM.accnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccnameNull() {
                return this.IsNull(this.tableACM.accnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccnameNull() {
                this[this.tableACM.accnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsacctypeNull() {
                return this.IsNull(this.tableACM.acctypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetacctypeNull() {
                this[this.tableACM.acctypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubaccnumNull() {
                return this.IsNull(this.tableACM.subaccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubaccnumNull() {
                this[this.tableACM.subaccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdepthNull() {
                return this.IsNull(this.tableACM.depthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdepthNull() {
                this[this.tableACM.depthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsincludecashflowNull() {
                return this.IsNull(this.tableACM.includecashflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetincludecashflowNull() {
                this[this.tableACM.includecashflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscashflowtypeNull() {
                return this.IsNull(this.tableACM.cashflowtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcashflowtypeNull() {
                this[this.tableACM.cashflowtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanknumNull() {
                return this.IsNull(this.tableACM.banknumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanknumNull() {
                this[this.tableACM.banknumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankaccnumNull() {
                return this.IsNull(this.tableACM.bankaccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankaccnumNull() {
                this[this.tableACM.bankaccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclassificationNull() {
                return this.IsNull(this.tableACM.classificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclassificationNull() {
                this[this.tableACM.classificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoldaccnumNull() {
                return this.IsNull(this.tableACM.oldaccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoldaccnumNull() {
                this[this.tableACM.oldaccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsactiveNull() {
                return this.IsNull(this.tableACM.activeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetactiveNull() {
                this[this.tableACM.activeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspurcrptNull() {
                return this.IsNull(this.tableACM.purcrptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpurcrptNull() {
                this[this.tableACM.purcrptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableACM.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableACM.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableACM.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableACM.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableACM.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableACM.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tableACM.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tableACM.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableACM.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableACM.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableACM.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableACM.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesrptNull() {
                return this.IsNull(this.tableACM.salesrptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesrptNull() {
                this[this.tableACM.salesrptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoricurNull() {
                return this.IsNull(this.tableACM.oricurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoricurNull() {
                this[this.tableACM.oricurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscshlgritemNull() {
                return this.IsNull(this.tableACM.cshlgritemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcshlgritemNull() {
                this[this.tableACM.cshlgritemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableACM.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableACM.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsacmgcodeNull() {
                return this.IsNull(this.tableACM.acmgcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetacmgcodeNull() {
                this[this.tableACM.acmgcodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class paytRowChangeEvent : global::System.EventArgs {
            
            private paytRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paytRowChangeEvent(paytRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paytRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APDRowChangeEvent : global::System.EventArgs {
            
            private APDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APDRowChangeEvent(APDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APMRowChangeEvent : global::System.EventArgs {
            
            private APMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APMRowChangeEvent(APMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class coyRowChangeEvent : global::System.EventArgs {
            
            private coyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public coyRowChangeEvent(coyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public coyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PIV1RowChangeEvent : global::System.EventArgs {
            
            private PIV1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIV1RowChangeEvent(PIV1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIV1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ACMRowChangeEvent : global::System.EventArgs {
            
            private ACMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACMRowChangeEvent(ACMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ACMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591