//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9164
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.StandardAccountingReports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("balanceSheet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class balanceSheet : global::System.Data.DataSet {
        
        private gldDataTable tablegld;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public balanceSheet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected balanceSheet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["gld"] != null)) {
                    base.Tables.Add(new gldDataTable(ds.Tables["gld"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public gldDataTable gld {
            get {
                return this.tablegld;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            balanceSheet cln = ((balanceSheet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["gld"] != null)) {
                    base.Tables.Add(new gldDataTable(ds.Tables["gld"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablegld = ((gldDataTable)(base.Tables["gld"]));
            if ((initTable == true)) {
                if ((this.tablegld != null)) {
                    this.tablegld.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "balanceSheet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/balanceSheet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablegld = new gldDataTable();
            base.Tables.Add(this.tablegld);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializegld() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            balanceSheet ds = new balanceSheet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void gldRowChangeEventHandler(object sender, gldRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class gldDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnaccnum;
            
            private global::System.Data.DataColumn columnaccname;
            
            private global::System.Data.DataColumn columnacctype;
            
            private global::System.Data.DataColumn columnacctypename;
            
            private global::System.Data.DataColumn columnreportGrouping;
            
            private global::System.Data.DataColumn columngroupingName;
            
            private global::System.Data.DataColumn columnsubaccnum;
            
            private global::System.Data.DataColumn columndepth;
            
            private global::System.Data.DataColumn columnpd0;
            
            private global::System.Data.DataColumn columnpd1;
            
            private global::System.Data.DataColumn columnpd2;
            
            private global::System.Data.DataColumn columnpd3;
            
            private global::System.Data.DataColumn columnpd4;
            
            private global::System.Data.DataColumn columnpd5;
            
            private global::System.Data.DataColumn columnpd6;
            
            private global::System.Data.DataColumn columnpd7;
            
            private global::System.Data.DataColumn columnpd8;
            
            private global::System.Data.DataColumn columnpd9;
            
            private global::System.Data.DataColumn columnpd10;
            
            private global::System.Data.DataColumn columnpd11;
            
            private global::System.Data.DataColumn columnpd12;
            
            private global::System.Data.DataColumn columnytd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public gldDataTable() {
                this.TableName = "gld";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal gldDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected gldDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnumColumn {
                get {
                    return this.columnaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accnameColumn {
                get {
                    return this.columnaccname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn acctypeColumn {
                get {
                    return this.columnacctype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn acctypenameColumn {
                get {
                    return this.columnacctypename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportGroupingColumn {
                get {
                    return this.columnreportGrouping;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn groupingNameColumn {
                get {
                    return this.columngroupingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subaccnumColumn {
                get {
                    return this.columnsubaccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn depthColumn {
                get {
                    return this.columndepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd0Column {
                get {
                    return this.columnpd0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd1Column {
                get {
                    return this.columnpd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd2Column {
                get {
                    return this.columnpd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd3Column {
                get {
                    return this.columnpd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd4Column {
                get {
                    return this.columnpd4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd5Column {
                get {
                    return this.columnpd5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd6Column {
                get {
                    return this.columnpd6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd7Column {
                get {
                    return this.columnpd7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd8Column {
                get {
                    return this.columnpd8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd9Column {
                get {
                    return this.columnpd9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd10Column {
                get {
                    return this.columnpd10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd11Column {
                get {
                    return this.columnpd11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pd12Column {
                get {
                    return this.columnpd12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ytdColumn {
                get {
                    return this.columnytd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public gldRow this[int index] {
                get {
                    return ((gldRow)(this.Rows[index]));
                }
            }
            
            public event gldRowChangeEventHandler gldRowChanging;
            
            public event gldRowChangeEventHandler gldRowChanged;
            
            public event gldRowChangeEventHandler gldRowDeleting;
            
            public event gldRowChangeEventHandler gldRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddgldRow(gldRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public gldRow AddgldRow(
                        string accnum, 
                        string accname, 
                        int acctype, 
                        string acctypename, 
                        int reportGrouping, 
                        string groupingName, 
                        string subaccnum, 
                        int depth, 
                        decimal pd0, 
                        decimal pd1, 
                        decimal pd2, 
                        decimal pd3, 
                        decimal pd4, 
                        decimal pd5, 
                        decimal pd6, 
                        decimal pd7, 
                        decimal pd8, 
                        decimal pd9, 
                        decimal pd10, 
                        decimal pd11, 
                        decimal pd12, 
                        decimal ytd) {
                gldRow rowgldRow = ((gldRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        accnum,
                        accname,
                        acctype,
                        acctypename,
                        reportGrouping,
                        groupingName,
                        subaccnum,
                        depth,
                        pd0,
                        pd1,
                        pd2,
                        pd3,
                        pd4,
                        pd5,
                        pd6,
                        pd7,
                        pd8,
                        pd9,
                        pd10,
                        pd11,
                        pd12,
                        ytd};
                rowgldRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgldRow);
                return rowgldRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                gldDataTable cln = ((gldDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new gldDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccnum = base.Columns["accnum"];
                this.columnaccname = base.Columns["accname"];
                this.columnacctype = base.Columns["acctype"];
                this.columnacctypename = base.Columns["acctypename"];
                this.columnreportGrouping = base.Columns["reportGrouping"];
                this.columngroupingName = base.Columns["groupingName"];
                this.columnsubaccnum = base.Columns["subaccnum"];
                this.columndepth = base.Columns["depth"];
                this.columnpd0 = base.Columns["pd0"];
                this.columnpd1 = base.Columns["pd1"];
                this.columnpd2 = base.Columns["pd2"];
                this.columnpd3 = base.Columns["pd3"];
                this.columnpd4 = base.Columns["pd4"];
                this.columnpd5 = base.Columns["pd5"];
                this.columnpd6 = base.Columns["pd6"];
                this.columnpd7 = base.Columns["pd7"];
                this.columnpd8 = base.Columns["pd8"];
                this.columnpd9 = base.Columns["pd9"];
                this.columnpd10 = base.Columns["pd10"];
                this.columnpd11 = base.Columns["pd11"];
                this.columnpd12 = base.Columns["pd12"];
                this.columnytd = base.Columns["ytd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccnum = new global::System.Data.DataColumn("accnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccnum);
                this.columnaccname = new global::System.Data.DataColumn("accname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccname);
                this.columnacctype = new global::System.Data.DataColumn("acctype", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacctype);
                this.columnacctypename = new global::System.Data.DataColumn("acctypename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacctypename);
                this.columnreportGrouping = new global::System.Data.DataColumn("reportGrouping", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportGrouping);
                this.columngroupingName = new global::System.Data.DataColumn("groupingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroupingName);
                this.columnsubaccnum = new global::System.Data.DataColumn("subaccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubaccnum);
                this.columndepth = new global::System.Data.DataColumn("depth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepth);
                this.columnpd0 = new global::System.Data.DataColumn("pd0", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd0);
                this.columnpd1 = new global::System.Data.DataColumn("pd1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd1);
                this.columnpd2 = new global::System.Data.DataColumn("pd2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd2);
                this.columnpd3 = new global::System.Data.DataColumn("pd3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd3);
                this.columnpd4 = new global::System.Data.DataColumn("pd4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd4);
                this.columnpd5 = new global::System.Data.DataColumn("pd5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd5);
                this.columnpd6 = new global::System.Data.DataColumn("pd6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd6);
                this.columnpd7 = new global::System.Data.DataColumn("pd7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd7);
                this.columnpd8 = new global::System.Data.DataColumn("pd8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd8);
                this.columnpd9 = new global::System.Data.DataColumn("pd9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd9);
                this.columnpd10 = new global::System.Data.DataColumn("pd10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd10);
                this.columnpd11 = new global::System.Data.DataColumn("pd11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd11);
                this.columnpd12 = new global::System.Data.DataColumn("pd12", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpd12);
                this.columnytd = new global::System.Data.DataColumn("ytd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnytd);
                this.columnpd0.DefaultValue = ((decimal)(0m));
                this.columnpd1.DefaultValue = ((decimal)(0m));
                this.columnpd2.DefaultValue = ((decimal)(0m));
                this.columnpd3.DefaultValue = ((decimal)(0m));
                this.columnpd4.DefaultValue = ((decimal)(0m));
                this.columnpd5.DefaultValue = ((decimal)(0m));
                this.columnpd6.DefaultValue = ((decimal)(0m));
                this.columnpd7.DefaultValue = ((decimal)(0m));
                this.columnpd8.DefaultValue = ((decimal)(0m));
                this.columnpd9.DefaultValue = ((decimal)(0m));
                this.columnpd10.DefaultValue = ((decimal)(0m));
                this.columnpd11.DefaultValue = ((decimal)(0m));
                this.columnpd12.DefaultValue = ((decimal)(0m));
                this.columnytd.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public gldRow NewgldRow() {
                return ((gldRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new gldRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(gldRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.gldRowChanged != null)) {
                    this.gldRowChanged(this, new gldRowChangeEvent(((gldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.gldRowChanging != null)) {
                    this.gldRowChanging(this, new gldRowChangeEvent(((gldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.gldRowDeleted != null)) {
                    this.gldRowDeleted(this, new gldRowChangeEvent(((gldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.gldRowDeleting != null)) {
                    this.gldRowDeleting(this, new gldRowChangeEvent(((gldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovegldRow(gldRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                balanceSheet ds = new balanceSheet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "gldDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class gldRow : global::System.Data.DataRow {
            
            private gldDataTable tablegld;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal gldRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegld = ((gldDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accnum {
                get {
                    try {
                        return ((string)(this[this.tablegld.accnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accnum\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.accnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accname {
                get {
                    try {
                        return ((string)(this[this.tablegld.accnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accname\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.accnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int acctype {
                get {
                    try {
                        return ((int)(this[this.tablegld.acctypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'acctype\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.acctypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string acctypename {
                get {
                    try {
                        return ((string)(this[this.tablegld.acctypenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'acctypename\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.acctypenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int reportGrouping {
                get {
                    try {
                        return ((int)(this[this.tablegld.reportGroupingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reportGrouping\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.reportGroupingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string groupingName {
                get {
                    try {
                        return ((string)(this[this.tablegld.groupingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'groupingName\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.groupingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subaccnum {
                get {
                    try {
                        return ((string)(this[this.tablegld.subaccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subaccnum\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.subaccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int depth {
                get {
                    try {
                        return ((int)(this[this.tablegld.depthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'depth\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.depthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd0 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd0\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd1 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd1\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd2 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd2\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd3 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd3\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd4 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd4\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd5 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd5\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd6 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd6\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd7 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd7\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd8 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd8\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd9 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd9\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd10 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd10\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd11 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd11\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pd12 {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.pd12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pd12\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.pd12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ytd {
                get {
                    try {
                        return ((decimal)(this[this.tablegld.ytdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ytd\' in table \'gld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegld.ytdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccnumNull() {
                return this.IsNull(this.tablegld.accnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccnumNull() {
                this[this.tablegld.accnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccnameNull() {
                return this.IsNull(this.tablegld.accnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccnameNull() {
                this[this.tablegld.accnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsacctypeNull() {
                return this.IsNull(this.tablegld.acctypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetacctypeNull() {
                this[this.tablegld.acctypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsacctypenameNull() {
                return this.IsNull(this.tablegld.acctypenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetacctypenameNull() {
                this[this.tablegld.acctypenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreportGroupingNull() {
                return this.IsNull(this.tablegld.reportGroupingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreportGroupingNull() {
                this[this.tablegld.reportGroupingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgroupingNameNull() {
                return this.IsNull(this.tablegld.groupingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgroupingNameNull() {
                this[this.tablegld.groupingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubaccnumNull() {
                return this.IsNull(this.tablegld.subaccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubaccnumNull() {
                this[this.tablegld.subaccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdepthNull() {
                return this.IsNull(this.tablegld.depthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdepthNull() {
                this[this.tablegld.depthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd0Null() {
                return this.IsNull(this.tablegld.pd0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd0Null() {
                this[this.tablegld.pd0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd1Null() {
                return this.IsNull(this.tablegld.pd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd1Null() {
                this[this.tablegld.pd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd2Null() {
                return this.IsNull(this.tablegld.pd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd2Null() {
                this[this.tablegld.pd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd3Null() {
                return this.IsNull(this.tablegld.pd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd3Null() {
                this[this.tablegld.pd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd4Null() {
                return this.IsNull(this.tablegld.pd4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd4Null() {
                this[this.tablegld.pd4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd5Null() {
                return this.IsNull(this.tablegld.pd5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd5Null() {
                this[this.tablegld.pd5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd6Null() {
                return this.IsNull(this.tablegld.pd6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd6Null() {
                this[this.tablegld.pd6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd7Null() {
                return this.IsNull(this.tablegld.pd7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd7Null() {
                this[this.tablegld.pd7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd8Null() {
                return this.IsNull(this.tablegld.pd8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd8Null() {
                this[this.tablegld.pd8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd9Null() {
                return this.IsNull(this.tablegld.pd9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd9Null() {
                this[this.tablegld.pd9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd10Null() {
                return this.IsNull(this.tablegld.pd10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd10Null() {
                this[this.tablegld.pd10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd11Null() {
                return this.IsNull(this.tablegld.pd11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd11Null() {
                this[this.tablegld.pd11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispd12Null() {
                return this.IsNull(this.tablegld.pd12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpd12Null() {
                this[this.tablegld.pd12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsytdNull() {
                return this.IsNull(this.tablegld.ytdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetytdNull() {
                this[this.tablegld.ytdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class gldRowChangeEvent : global::System.EventArgs {
            
            private gldRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public gldRowChangeEvent(gldRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public gldRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591