//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.StandardAccountingReports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsStockAging")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsStockAging : global::System.Data.DataSet {
        
        private MWTDataTable tableMWT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsStockAging() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsStockAging(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MWT"] != null)) {
                    base.Tables.Add(new MWTDataTable(ds.Tables["MWT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MWTDataTable MWT {
            get {
                return this.tableMWT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsStockAging cln = ((dsStockAging)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MWT"] != null)) {
                    base.Tables.Add(new MWTDataTable(ds.Tables["MWT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMWT = ((MWTDataTable)(base.Tables["MWT"]));
            if ((initTable == true)) {
                if ((this.tableMWT != null)) {
                    this.tableMWT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsStockAging";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsStockAging.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMWT = new MWTDataTable();
            base.Tables.Add(this.tableMWT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMWT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsStockAging ds = new dsStockAging();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MWTRowChangeEventHandler(object sender, MWTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MWTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columngrnum;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columndetail;
            
            private global::System.Data.DataColumn columnlocation;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnexpire;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnline;
            
            private global::System.Data.DataColumn columnuom;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columndonum;
            
            private global::System.Data.DataColumn columndocunum;
            
            private global::System.Data.DataColumn columnarnum;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columnstdcost;
            
            private global::System.Data.DataColumn columncosamt;
            
            private global::System.Data.DataColumn columnstkdate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnopbal;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columndiscamt;
            
            private global::System.Data.DataColumn columnAccumQty;
            
            private global::System.Data.DataColumn columnUsageQty;
            
            private global::System.Data.DataColumn columnfirstGRN;
            
            private global::System.Data.DataColumn columnAgingQty;
            
            private global::System.Data.DataColumn column1;
            
            private global::System.Data.DataColumn column2;
            
            private global::System.Data.DataColumn column3;
            
            private global::System.Data.DataColumn column4;
            
            private global::System.Data.DataColumn column5;
            
            private global::System.Data.DataColumn column6;
            
            private global::System.Data.DataColumn column7;
            
            private global::System.Data.DataColumn column8;
            
            private global::System.Data.DataColumn columnAgingValue;
            
            private global::System.Data.DataColumn column9;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MWTDataTable() {
                this.TableName = "MWT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MWTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MWTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grnumColumn {
                get {
                    return this.columngrnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn detailColumn {
                get {
                    return this.columndetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expireColumn {
                get {
                    return this.columnexpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineColumn {
                get {
                    return this.columnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn donumColumn {
                get {
                    return this.columndonum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn docunumColumn {
                get {
                    return this.columndocunum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn arnumColumn {
                get {
                    return this.columnarnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stdcostColumn {
                get {
                    return this.columnstdcost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cosamtColumn {
                get {
                    return this.columncosamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stkdateColumn {
                get {
                    return this.columnstkdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn opbalColumn {
                get {
                    return this.columnopbal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discamtColumn {
                get {
                    return this.columndiscamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccumQtyColumn {
                get {
                    return this.columnAccumQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsageQtyColumn {
                get {
                    return this.columnUsageQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn firstGRNColumn {
                get {
                    return this.columnfirstGRN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgingQtyColumn {
                get {
                    return this.columnAgingQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _1Column {
                get {
                    return this.column1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _2Column {
                get {
                    return this.column2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _3Column {
                get {
                    return this.column3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _4Column {
                get {
                    return this.column4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _5Column {
                get {
                    return this.column5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _6Column {
                get {
                    return this.column6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _7Column {
                get {
                    return this.column7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _8Column {
                get {
                    return this.column8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgingValueColumn {
                get {
                    return this.columnAgingValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _9Column {
                get {
                    return this.column9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MWTRow this[int index] {
                get {
                    return ((MWTRow)(this.Rows[index]));
                }
            }
            
            public event MWTRowChangeEventHandler MWTRowChanging;
            
            public event MWTRowChangeEventHandler MWTRowChanged;
            
            public event MWTRowChangeEventHandler MWTRowDeleting;
            
            public event MWTRowChangeEventHandler MWTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMWTRow(MWTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MWTRow AddMWTRow(
                        long ID, 
                        string refnum, 
                        string grnum, 
                        string matnum, 
                        string detail, 
                        string location, 
                        decimal qty, 
                        string user, 
                        string flag, 
                        string status, 
                        bool expire, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        decimal line, 
                        string uom, 
                        System.DateTime trandate, 
                        string coy, 
                        int period, 
                        string donum, 
                        string docunum, 
                        string arnum, 
                        string apnum, 
                        decimal stdcost, 
                        decimal cosamt, 
                        System.DateTime stkdate, 
                        string remark, 
                        bool opbal, 
                        decimal price, 
                        decimal discamt, 
                        decimal AccumQty, 
                        decimal UsageQty, 
                        decimal firstGRN, 
                        decimal AgingQty, 
                        decimal _1, 
                        decimal _2, 
                        decimal _3, 
                        decimal _4, 
                        decimal _5, 
                        decimal _6, 
                        decimal _7, 
                        decimal _8, 
                        string AgingValue, 
                        string _9) {
                MWTRow rowMWTRow = ((MWTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        grnum,
                        matnum,
                        detail,
                        location,
                        qty,
                        user,
                        flag,
                        status,
                        expire,
                        created,
                        modified,
                        line,
                        uom,
                        trandate,
                        coy,
                        period,
                        donum,
                        docunum,
                        arnum,
                        apnum,
                        stdcost,
                        cosamt,
                        stkdate,
                        remark,
                        opbal,
                        price,
                        discamt,
                        AccumQty,
                        UsageQty,
                        firstGRN,
                        AgingQty,
                        _1,
                        _2,
                        _3,
                        _4,
                        _5,
                        _6,
                        _7,
                        _8,
                        AgingValue,
                        _9};
                rowMWTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMWTRow);
                return rowMWTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MWTRow FindByID(long ID) {
                return ((MWTRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MWTDataTable cln = ((MWTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MWTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columngrnum = base.Columns["grnum"];
                this.columnmatnum = base.Columns["matnum"];
                this.columndetail = base.Columns["detail"];
                this.columnlocation = base.Columns["location"];
                this.columnqty = base.Columns["qty"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columnexpire = base.Columns["expire"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnline = base.Columns["line"];
                this.columnuom = base.Columns["uom"];
                this.columntrandate = base.Columns["trandate"];
                this.columncoy = base.Columns["coy"];
                this.columnperiod = base.Columns["period"];
                this.columndonum = base.Columns["donum"];
                this.columndocunum = base.Columns["docunum"];
                this.columnarnum = base.Columns["arnum"];
                this.columnapnum = base.Columns["apnum"];
                this.columnstdcost = base.Columns["stdcost"];
                this.columncosamt = base.Columns["cosamt"];
                this.columnstkdate = base.Columns["stkdate"];
                this.columnremark = base.Columns["remark"];
                this.columnopbal = base.Columns["opbal"];
                this.columnprice = base.Columns["price"];
                this.columndiscamt = base.Columns["discamt"];
                this.columnAccumQty = base.Columns["AccumQty"];
                this.columnUsageQty = base.Columns["UsageQty"];
                this.columnfirstGRN = base.Columns["firstGRN"];
                this.columnAgingQty = base.Columns["AgingQty"];
                this.column1 = base.Columns["1"];
                this.column2 = base.Columns["2"];
                this.column3 = base.Columns["3"];
                this.column4 = base.Columns["4"];
                this.column5 = base.Columns["5"];
                this.column6 = base.Columns["6"];
                this.column7 = base.Columns["7"];
                this.column8 = base.Columns["8"];
                this.columnAgingValue = base.Columns["AgingValue"];
                this.column9 = base.Columns["9"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columngrnum = new global::System.Data.DataColumn("grnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrnum);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columndetail = new global::System.Data.DataColumn("detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndetail);
                this.columnlocation = new global::System.Data.DataColumn("location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnexpire = new global::System.Data.DataColumn("expire", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpire);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnline = new global::System.Data.DataColumn("line", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline);
                this.columnuom = new global::System.Data.DataColumn("uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columndonum = new global::System.Data.DataColumn("donum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndonum);
                this.columndocunum = new global::System.Data.DataColumn("docunum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocunum);
                this.columnarnum = new global::System.Data.DataColumn("arnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarnum);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columnstdcost = new global::System.Data.DataColumn("stdcost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstdcost);
                this.columncosamt = new global::System.Data.DataColumn("cosamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncosamt);
                this.columnstkdate = new global::System.Data.DataColumn("stkdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstkdate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnopbal = new global::System.Data.DataColumn("opbal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopbal);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columndiscamt = new global::System.Data.DataColumn("discamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscamt);
                this.columnAccumQty = new global::System.Data.DataColumn("AccumQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccumQty);
                this.columnUsageQty = new global::System.Data.DataColumn("UsageQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsageQty);
                this.columnfirstGRN = new global::System.Data.DataColumn("firstGRN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirstGRN);
                this.columnAgingQty = new global::System.Data.DataColumn("AgingQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgingQty);
                this.column1 = new global::System.Data.DataColumn("1", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column1.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column1");
                this.column1.ExtendedProperties.Add("Generator_UserColumnName", "1");
                base.Columns.Add(this.column1);
                this.column2 = new global::System.Data.DataColumn("2", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column2.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column2");
                this.column2.ExtendedProperties.Add("Generator_UserColumnName", "2");
                base.Columns.Add(this.column2);
                this.column3 = new global::System.Data.DataColumn("3", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column3.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column3");
                this.column3.ExtendedProperties.Add("Generator_UserColumnName", "3");
                base.Columns.Add(this.column3);
                this.column4 = new global::System.Data.DataColumn("4", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column4.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column4");
                this.column4.ExtendedProperties.Add("Generator_UserColumnName", "4");
                base.Columns.Add(this.column4);
                this.column5 = new global::System.Data.DataColumn("5", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column5.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column5");
                this.column5.ExtendedProperties.Add("Generator_UserColumnName", "5");
                base.Columns.Add(this.column5);
                this.column6 = new global::System.Data.DataColumn("6", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column6.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column6");
                this.column6.ExtendedProperties.Add("Generator_UserColumnName", "6");
                base.Columns.Add(this.column6);
                this.column7 = new global::System.Data.DataColumn("7", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column7.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column7");
                this.column7.ExtendedProperties.Add("Generator_UserColumnName", "7");
                base.Columns.Add(this.column7);
                this.column8 = new global::System.Data.DataColumn("8", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.column8.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column8");
                this.column8.ExtendedProperties.Add("Generator_UserColumnName", "8");
                base.Columns.Add(this.column8);
                this.columnAgingValue = new global::System.Data.DataColumn("AgingValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgingValue);
                this.column9 = new global::System.Data.DataColumn("9", typeof(string), null, global::System.Data.MappingType.Element);
                this.column9.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column9");
                this.column9.ExtendedProperties.Add("Generator_UserColumnName", "9");
                base.Columns.Add(this.column9);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnrefnum.MaxLength = 20;
                this.columngrnum.MaxLength = 20;
                this.columnmatnum.MaxLength = 20;
                this.columndetail.MaxLength = 100;
                this.columnlocation.MaxLength = 50;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnuom.MaxLength = 20;
                this.columncoy.MaxLength = 10;
                this.columndonum.MaxLength = 20;
                this.columndocunum.MaxLength = 50;
                this.columnarnum.MaxLength = 20;
                this.columnapnum.MaxLength = 20;
                this.columnremark.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MWTRow NewMWTRow() {
                return ((MWTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MWTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MWTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MWTRowChanged != null)) {
                    this.MWTRowChanged(this, new MWTRowChangeEvent(((MWTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MWTRowChanging != null)) {
                    this.MWTRowChanging(this, new MWTRowChangeEvent(((MWTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MWTRowDeleted != null)) {
                    this.MWTRowDeleted(this, new MWTRowChangeEvent(((MWTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MWTRowDeleting != null)) {
                    this.MWTRowDeleting(this, new MWTRowChangeEvent(((MWTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMWTRow(MWTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStockAging ds = new dsStockAging();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MWTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MWTRow : global::System.Data.DataRow {
            
            private MWTDataTable tableMWT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MWTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMWT = ((MWTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableMWT.IDColumn]));
                }
                set {
                    this[this.tableMWT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableMWT.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grnum {
                get {
                    try {
                        return ((string)(this[this.tableMWT.grnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grnum\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.grnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tableMWT.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string detail {
                get {
                    try {
                        return ((string)(this[this.tableMWT.detailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'detail\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.detailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location {
                get {
                    try {
                        return ((string)(this[this.tableMWT.locationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'location\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableMWT.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableMWT.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableMWT.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool expire {
                get {
                    try {
                        return ((bool)(this[this.tableMWT.expireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expire\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.expireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMWT.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMWT.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal line {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'line\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    try {
                        return ((string)(this[this.tableMWT.uomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uom\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.uomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMWT.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tableMWT.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tableMWT.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string donum {
                get {
                    try {
                        return ((string)(this[this.tableMWT.donumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'donum\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.donumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string docunum {
                get {
                    try {
                        return ((string)(this[this.tableMWT.docunumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docunum\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.docunumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string arnum {
                get {
                    try {
                        return ((string)(this[this.tableMWT.arnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arnum\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.arnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tableMWT.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stdcost {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.stdcostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stdcost\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.stdcostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal cosamt {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.cosamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cosamt\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.cosamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime stkdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMWT.stkdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stkdate\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.stkdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableMWT.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool opbal {
                get {
                    try {
                        return ((bool)(this[this.tableMWT.opbalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opbal\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.opbalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal discamt {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.discamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discamt\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.discamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AccumQty {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.AccumQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccumQty\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.AccumQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UsageQty {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.UsageQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsageQty\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.UsageQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal firstGRN {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.firstGRNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'firstGRN\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.firstGRNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AgingQty {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT.AgingQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgingQty\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.AgingQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _1 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'1\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _2 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'2\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _3 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'3\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _4 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'4\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _5 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'5\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _6 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'6\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _7 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'7\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _8 {
                get {
                    try {
                        return ((decimal)(this[this.tableMWT._8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'8\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgingValue {
                get {
                    try {
                        return ((string)(this[this.tableMWT.AgingValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgingValue\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT.AgingValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _9 {
                get {
                    try {
                        return ((string)(this[this.tableMWT._9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'9\' in table \'MWT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMWT._9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableMWT.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableMWT.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrnumNull() {
                return this.IsNull(this.tableMWT.grnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrnumNull() {
                this[this.tableMWT.grnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tableMWT.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tableMWT.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdetailNull() {
                return this.IsNull(this.tableMWT.detailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdetailNull() {
                this[this.tableMWT.detailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationNull() {
                return this.IsNull(this.tableMWT.locationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationNull() {
                this[this.tableMWT.locationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tableMWT.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tableMWT.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableMWT.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableMWT.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableMWT.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableMWT.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableMWT.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableMWT.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpireNull() {
                return this.IsNull(this.tableMWT.expireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpireNull() {
                this[this.tableMWT.expireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableMWT.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableMWT.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableMWT.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableMWT.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineNull() {
                return this.IsNull(this.tableMWT.lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineNull() {
                this[this.tableMWT.lineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuomNull() {
                return this.IsNull(this.tableMWT.uomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuomNull() {
                this[this.tableMWT.uomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tableMWT.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tableMWT.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tableMWT.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tableMWT.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tableMWT.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tableMWT.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdonumNull() {
                return this.IsNull(this.tableMWT.donumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdonumNull() {
                this[this.tableMWT.donumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocunumNull() {
                return this.IsNull(this.tableMWT.docunumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocunumNull() {
                this[this.tableMWT.docunumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsarnumNull() {
                return this.IsNull(this.tableMWT.arnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetarnumNull() {
                this[this.tableMWT.arnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tableMWT.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tableMWT.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstdcostNull() {
                return this.IsNull(this.tableMWT.stdcostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstdcostNull() {
                this[this.tableMWT.stdcostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscosamtNull() {
                return this.IsNull(this.tableMWT.cosamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcosamtNull() {
                this[this.tableMWT.cosamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstkdateNull() {
                return this.IsNull(this.tableMWT.stkdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstkdateNull() {
                this[this.tableMWT.stkdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableMWT.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableMWT.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsopbalNull() {
                return this.IsNull(this.tableMWT.opbalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetopbalNull() {
                this[this.tableMWT.opbalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tableMWT.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tableMWT.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscamtNull() {
                return this.IsNull(this.tableMWT.discamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscamtNull() {
                this[this.tableMWT.discamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccumQtyNull() {
                return this.IsNull(this.tableMWT.AccumQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccumQtyNull() {
                this[this.tableMWT.AccumQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsageQtyNull() {
                return this.IsNull(this.tableMWT.UsageQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsageQtyNull() {
                this[this.tableMWT.UsageQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfirstGRNNull() {
                return this.IsNull(this.tableMWT.firstGRNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfirstGRNNull() {
                this[this.tableMWT.firstGRNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgingQtyNull() {
                return this.IsNull(this.tableMWT.AgingQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgingQtyNull() {
                this[this.tableMWT.AgingQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_1Null() {
                return this.IsNull(this.tableMWT._1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_1Null() {
                this[this.tableMWT._1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_2Null() {
                return this.IsNull(this.tableMWT._2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_2Null() {
                this[this.tableMWT._2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_3Null() {
                return this.IsNull(this.tableMWT._3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_3Null() {
                this[this.tableMWT._3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_4Null() {
                return this.IsNull(this.tableMWT._4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_4Null() {
                this[this.tableMWT._4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_5Null() {
                return this.IsNull(this.tableMWT._5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_5Null() {
                this[this.tableMWT._5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_6Null() {
                return this.IsNull(this.tableMWT._6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_6Null() {
                this[this.tableMWT._6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_7Null() {
                return this.IsNull(this.tableMWT._7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_7Null() {
                this[this.tableMWT._7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_8Null() {
                return this.IsNull(this.tableMWT._8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_8Null() {
                this[this.tableMWT._8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgingValueNull() {
                return this.IsNull(this.tableMWT.AgingValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgingValueNull() {
                this[this.tableMWT.AgingValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_9Null() {
                return this.IsNull(this.tableMWT._9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_9Null() {
                this[this.tableMWT._9Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MWTRowChangeEvent : global::System.EventArgs {
            
            private MWTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MWTRowChangeEvent(MWTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MWTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591