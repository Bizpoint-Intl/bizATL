//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.ERR.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ERRds1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ERRds1 : global::System.Data.DataSet {
        
        private ERR11DataTable tableERR11;
        
        private Coy1DataTable tableCoy1;
        
        private NRDataTable tableNR;
        
        private SigTB1DataTable tableSigTB1;
        
        private ERRH1DataTable tableERRH1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ERRds1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ERRds1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ERR11"] != null)) {
                    base.Tables.Add(new ERR11DataTable(ds.Tables["ERR11"]));
                }
                if ((ds.Tables["Coy1"] != null)) {
                    base.Tables.Add(new Coy1DataTable(ds.Tables["Coy1"]));
                }
                if ((ds.Tables["NR"] != null)) {
                    base.Tables.Add(new NRDataTable(ds.Tables["NR"]));
                }
                if ((ds.Tables["SigTB1"] != null)) {
                    base.Tables.Add(new SigTB1DataTable(ds.Tables["SigTB1"]));
                }
                if ((ds.Tables["ERRH1"] != null)) {
                    base.Tables.Add(new ERRH1DataTable(ds.Tables["ERRH1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ERR11DataTable ERR11 {
            get {
                return this.tableERR11;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Coy1DataTable Coy1 {
            get {
                return this.tableCoy1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NRDataTable NR {
            get {
                return this.tableNR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SigTB1DataTable SigTB1 {
            get {
                return this.tableSigTB1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ERRH1DataTable ERRH1 {
            get {
                return this.tableERRH1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ERRds1 cln = ((ERRds1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ERR11"] != null)) {
                    base.Tables.Add(new ERR11DataTable(ds.Tables["ERR11"]));
                }
                if ((ds.Tables["Coy1"] != null)) {
                    base.Tables.Add(new Coy1DataTable(ds.Tables["Coy1"]));
                }
                if ((ds.Tables["NR"] != null)) {
                    base.Tables.Add(new NRDataTable(ds.Tables["NR"]));
                }
                if ((ds.Tables["SigTB1"] != null)) {
                    base.Tables.Add(new SigTB1DataTable(ds.Tables["SigTB1"]));
                }
                if ((ds.Tables["ERRH1"] != null)) {
                    base.Tables.Add(new ERRH1DataTable(ds.Tables["ERRH1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableERR11 = ((ERR11DataTable)(base.Tables["ERR11"]));
            if ((initTable == true)) {
                if ((this.tableERR11 != null)) {
                    this.tableERR11.InitVars();
                }
            }
            this.tableCoy1 = ((Coy1DataTable)(base.Tables["Coy1"]));
            if ((initTable == true)) {
                if ((this.tableCoy1 != null)) {
                    this.tableCoy1.InitVars();
                }
            }
            this.tableNR = ((NRDataTable)(base.Tables["NR"]));
            if ((initTable == true)) {
                if ((this.tableNR != null)) {
                    this.tableNR.InitVars();
                }
            }
            this.tableSigTB1 = ((SigTB1DataTable)(base.Tables["SigTB1"]));
            if ((initTable == true)) {
                if ((this.tableSigTB1 != null)) {
                    this.tableSigTB1.InitVars();
                }
            }
            this.tableERRH1 = ((ERRH1DataTable)(base.Tables["ERRH1"]));
            if ((initTable == true)) {
                if ((this.tableERRH1 != null)) {
                    this.tableERRH1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ERRds1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ERRds1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableERR11 = new ERR11DataTable();
            base.Tables.Add(this.tableERR11);
            this.tableCoy1 = new Coy1DataTable();
            base.Tables.Add(this.tableCoy1);
            this.tableNR = new NRDataTable();
            base.Tables.Add(this.tableNR);
            this.tableSigTB1 = new SigTB1DataTable();
            base.Tables.Add(this.tableSigTB1);
            this.tableERRH1 = new ERRH1DataTable();
            base.Tables.Add(this.tableERRH1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeERR11() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCoy1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSigTB1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeERRH1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ERRds1 ds = new ERRds1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ERR11RowChangeEventHandler(object sender, ERR11RowChangeEvent e);
        
        public delegate void Coy1RowChangeEventHandler(object sender, Coy1RowChangeEvent e);
        
        public delegate void NRRowChangeEventHandler(object sender, NRRowChangeEvent e);
        
        public delegate void SigTB1RowChangeEventHandler(object sender, SigTB1RowChangeEvent e);
        
        public delegate void ERRH1RowChangeEventHandler(object sender, ERRH1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ERR11DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnequipment;
            
            private global::System.Data.DataColumn columniscollected;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncreatedby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERR11DataTable() {
                this.TableName = "ERR11";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERR11DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ERR11DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn equipmentColumn {
                get {
                    return this.columnequipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iscollectedColumn {
                get {
                    return this.columniscollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERR11Row this[int index] {
                get {
                    return ((ERR11Row)(this.Rows[index]));
                }
            }
            
            public event ERR11RowChangeEventHandler ERR11RowChanging;
            
            public event ERR11RowChangeEventHandler ERR11RowChanged;
            
            public event ERR11RowChangeEventHandler ERR11RowDeleting;
            
            public event ERR11RowChangeEventHandler ERR11RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddERR11Row(ERR11Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERR11Row AddERR11Row(long ID, string refnum, string equipment, bool iscollected, System.DateTime trandate, string remark, string status, string flag, string user, System.DateTime created, System.DateTime modified, string createdby) {
                ERR11Row rowERR11Row = ((ERR11Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        equipment,
                        iscollected,
                        trandate,
                        remark,
                        status,
                        flag,
                        user,
                        created,
                        modified,
                        createdby};
                rowERR11Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowERR11Row);
                return rowERR11Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERR11Row FindByID(long ID) {
                return ((ERR11Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ERR11DataTable cln = ((ERR11DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ERR11DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnequipment = base.Columns["equipment"];
                this.columniscollected = base.Columns["iscollected"];
                this.columntrandate = base.Columns["trandate"];
                this.columnremark = base.Columns["remark"];
                this.columnstatus = base.Columns["status"];
                this.columnflag = base.Columns["flag"];
                this.columnuser = base.Columns["user"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncreatedby = base.Columns["createdby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnequipment = new global::System.Data.DataColumn("equipment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipment);
                this.columniscollected = new global::System.Data.DataColumn("iscollected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniscollected);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnrefnum.MaxLength = 20;
                this.columnequipment.MaxLength = 50;
                this.columnremark.MaxLength = 250;
                this.columnstatus.MaxLength = 1;
                this.columnflag.MaxLength = 10;
                this.columnuser.MaxLength = 50;
                this.columncreatedby.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERR11Row NewERR11Row() {
                return ((ERR11Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ERR11Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ERR11Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ERR11RowChanged != null)) {
                    this.ERR11RowChanged(this, new ERR11RowChangeEvent(((ERR11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ERR11RowChanging != null)) {
                    this.ERR11RowChanging(this, new ERR11RowChangeEvent(((ERR11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ERR11RowDeleted != null)) {
                    this.ERR11RowDeleted(this, new ERR11RowChangeEvent(((ERR11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ERR11RowDeleting != null)) {
                    this.ERR11RowDeleting(this, new ERR11RowChangeEvent(((ERR11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveERR11Row(ERR11Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERRds1 ds = new ERRds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ERR11DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Coy1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columncoy;
            
            private global::System.Data.DataColumn columncoyname;
            
            private global::System.Data.DataColumn columncoyaddr1;
            
            private global::System.Data.DataColumn columncoyaddr2;
            
            private global::System.Data.DataColumn columncoyaddr3;
            
            private global::System.Data.DataColumn columncoyaddr4;
            
            private global::System.Data.DataColumn columncoyemail;
            
            private global::System.Data.DataColumn columncoyurl;
            
            private global::System.Data.DataColumn columncoytel;
            
            private global::System.Data.DataColumn columncoyfax;
            
            private global::System.Data.DataColumn columncoyregnum;
            
            private global::System.Data.DataColumn columncoygstnum;
            
            private global::System.Data.DataColumn columncpfregnum;
            
            private global::System.Data.DataColumn columnapnum;
            
            private global::System.Data.DataColumn columnarnum;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columncoyimage;
            
            private global::System.Data.DataColumn columnwhnum;
            
            private global::System.Data.DataColumn columnccnum;
            
            private global::System.Data.DataColumn columncreatedby;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Coy1DataTable() {
                this.TableName = "Coy1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Coy1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Coy1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyColumn {
                get {
                    return this.columncoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coynameColumn {
                get {
                    return this.columncoyname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr1Column {
                get {
                    return this.columncoyaddr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr2Column {
                get {
                    return this.columncoyaddr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr3Column {
                get {
                    return this.columncoyaddr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyaddr4Column {
                get {
                    return this.columncoyaddr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyemailColumn {
                get {
                    return this.columncoyemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyurlColumn {
                get {
                    return this.columncoyurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coytelColumn {
                get {
                    return this.columncoytel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyfaxColumn {
                get {
                    return this.columncoyfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyregnumColumn {
                get {
                    return this.columncoyregnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coygstnumColumn {
                get {
                    return this.columncoygstnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cpfregnumColumn {
                get {
                    return this.columncpfregnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apnumColumn {
                get {
                    return this.columnapnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn arnumColumn {
                get {
                    return this.columnarnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coyimageColumn {
                get {
                    return this.columncoyimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn whnumColumn {
                get {
                    return this.columnwhnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ccnumColumn {
                get {
                    return this.columnccnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Coy1Row this[int index] {
                get {
                    return ((Coy1Row)(this.Rows[index]));
                }
            }
            
            public event Coy1RowChangeEventHandler Coy1RowChanging;
            
            public event Coy1RowChangeEventHandler Coy1RowChanged;
            
            public event Coy1RowChangeEventHandler Coy1RowDeleting;
            
            public event Coy1RowChangeEventHandler Coy1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCoy1Row(Coy1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Coy1Row AddCoy1Row(
                        long ID, 
                        string coy, 
                        string coyname, 
                        string coyaddr1, 
                        string coyaddr2, 
                        string coyaddr3, 
                        string coyaddr4, 
                        string coyemail, 
                        string coyurl, 
                        string coytel, 
                        string coyfax, 
                        string coyregnum, 
                        string coygstnum, 
                        string cpfregnum, 
                        string apnum, 
                        string arnum, 
                        string user, 
                        string flag, 
                        string status, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        byte[] coyimage, 
                        string whnum, 
                        string ccnum, 
                        string createdby) {
                Coy1Row rowCoy1Row = ((Coy1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        coy,
                        coyname,
                        coyaddr1,
                        coyaddr2,
                        coyaddr3,
                        coyaddr4,
                        coyemail,
                        coyurl,
                        coytel,
                        coyfax,
                        coyregnum,
                        coygstnum,
                        cpfregnum,
                        apnum,
                        arnum,
                        user,
                        flag,
                        status,
                        created,
                        modified,
                        coyimage,
                        whnum,
                        ccnum,
                        createdby};
                rowCoy1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowCoy1Row);
                return rowCoy1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Coy1Row FindByID(long ID) {
                return ((Coy1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Coy1DataTable cln = ((Coy1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Coy1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columncoy = base.Columns["coy"];
                this.columncoyname = base.Columns["coyname"];
                this.columncoyaddr1 = base.Columns["coyaddr1"];
                this.columncoyaddr2 = base.Columns["coyaddr2"];
                this.columncoyaddr3 = base.Columns["coyaddr3"];
                this.columncoyaddr4 = base.Columns["coyaddr4"];
                this.columncoyemail = base.Columns["coyemail"];
                this.columncoyurl = base.Columns["coyurl"];
                this.columncoytel = base.Columns["coytel"];
                this.columncoyfax = base.Columns["coyfax"];
                this.columncoyregnum = base.Columns["coyregnum"];
                this.columncoygstnum = base.Columns["coygstnum"];
                this.columncpfregnum = base.Columns["cpfregnum"];
                this.columnapnum = base.Columns["apnum"];
                this.columnarnum = base.Columns["arnum"];
                this.columnuser = base.Columns["user"];
                this.columnflag = base.Columns["flag"];
                this.columnstatus = base.Columns["status"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columncoyimage = base.Columns["coyimage"];
                this.columnwhnum = base.Columns["whnum"];
                this.columnccnum = base.Columns["ccnum"];
                this.columncreatedby = base.Columns["createdby"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columncoy = new global::System.Data.DataColumn("coy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoy);
                this.columncoyname = new global::System.Data.DataColumn("coyname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyname);
                this.columncoyaddr1 = new global::System.Data.DataColumn("coyaddr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr1);
                this.columncoyaddr2 = new global::System.Data.DataColumn("coyaddr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr2);
                this.columncoyaddr3 = new global::System.Data.DataColumn("coyaddr3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr3);
                this.columncoyaddr4 = new global::System.Data.DataColumn("coyaddr4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyaddr4);
                this.columncoyemail = new global::System.Data.DataColumn("coyemail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyemail);
                this.columncoyurl = new global::System.Data.DataColumn("coyurl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyurl);
                this.columncoytel = new global::System.Data.DataColumn("coytel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoytel);
                this.columncoyfax = new global::System.Data.DataColumn("coyfax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyfax);
                this.columncoyregnum = new global::System.Data.DataColumn("coyregnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyregnum);
                this.columncoygstnum = new global::System.Data.DataColumn("coygstnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoygstnum);
                this.columncpfregnum = new global::System.Data.DataColumn("cpfregnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpfregnum);
                this.columnapnum = new global::System.Data.DataColumn("apnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapnum);
                this.columnarnum = new global::System.Data.DataColumn("arnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarnum);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columncoyimage = new global::System.Data.DataColumn("coyimage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoyimage);
                this.columnwhnum = new global::System.Data.DataColumn("whnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwhnum);
                this.columnccnum = new global::System.Data.DataColumn("ccnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnccnum);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columncoy.MaxLength = 10;
                this.columncoyname.MaxLength = 50;
                this.columncoyaddr1.MaxLength = 50;
                this.columncoyaddr2.MaxLength = 50;
                this.columncoyaddr3.MaxLength = 50;
                this.columncoyaddr4.MaxLength = 50;
                this.columncoyemail.MaxLength = 50;
                this.columncoyurl.MaxLength = 50;
                this.columncoytel.MaxLength = 20;
                this.columncoyfax.MaxLength = 20;
                this.columncoyregnum.MaxLength = 20;
                this.columncoygstnum.MaxLength = 20;
                this.columncpfregnum.MaxLength = 20;
                this.columnapnum.MaxLength = 12;
                this.columnarnum.MaxLength = 12;
                this.columnuser.MaxLength = 50;
                this.columnflag.MaxLength = 10;
                this.columnstatus.MaxLength = 1;
                this.columnwhnum.MaxLength = 12;
                this.columnccnum.MaxLength = 12;
                this.columncreatedby.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Coy1Row NewCoy1Row() {
                return ((Coy1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Coy1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Coy1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Coy1RowChanged != null)) {
                    this.Coy1RowChanged(this, new Coy1RowChangeEvent(((Coy1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Coy1RowChanging != null)) {
                    this.Coy1RowChanging(this, new Coy1RowChangeEvent(((Coy1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Coy1RowDeleted != null)) {
                    this.Coy1RowDeleted(this, new Coy1RowChangeEvent(((Coy1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Coy1RowDeleting != null)) {
                    this.Coy1RowDeleting(this, new Coy1RowChangeEvent(((Coy1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCoy1Row(Coy1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERRds1 ds = new ERRds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Coy1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnnric;
            
            private global::System.Data.DataColumn columnempname;
            
            private global::System.Data.DataColumn columnlastday;
            
            private global::System.Data.DataColumn columnfuturecontact;
            
            private global::System.Data.DataColumn columnconfirmedcomments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NRDataTable() {
                this.TableName = "NR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nricColumn {
                get {
                    return this.columnnric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnameColumn {
                get {
                    return this.columnempname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastdayColumn {
                get {
                    return this.columnlastday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn futurecontactColumn {
                get {
                    return this.columnfuturecontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmedcommentsColumn {
                get {
                    return this.columnconfirmedcomments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NRRow this[int index] {
                get {
                    return ((NRRow)(this.Rows[index]));
                }
            }
            
            public event NRRowChangeEventHandler NRRowChanging;
            
            public event NRRowChangeEventHandler NRRowChanged;
            
            public event NRRowChangeEventHandler NRRowDeleting;
            
            public event NRRowChangeEventHandler NRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNRRow(NRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NRRow AddNRRow(string empnum, string nric, string empname, System.DateTime lastday, string futurecontact, string confirmedcomments) {
                NRRow rowNRRow = ((NRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        empnum,
                        nric,
                        empname,
                        lastday,
                        futurecontact,
                        confirmedcomments};
                rowNRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNRRow);
                return rowNRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NRDataTable cln = ((NRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempnum = base.Columns["empnum"];
                this.columnnric = base.Columns["nric"];
                this.columnempname = base.Columns["empname"];
                this.columnlastday = base.Columns["lastday"];
                this.columnfuturecontact = base.Columns["futurecontact"];
                this.columnconfirmedcomments = base.Columns["confirmedcomments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnnric = new global::System.Data.DataColumn("nric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnric);
                this.columnempname = new global::System.Data.DataColumn("empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname);
                this.columnlastday = new global::System.Data.DataColumn("lastday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastday);
                this.columnfuturecontact = new global::System.Data.DataColumn("futurecontact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfuturecontact);
                this.columnconfirmedcomments = new global::System.Data.DataColumn("confirmedcomments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmedcomments);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NRRow NewNRRow() {
                return ((NRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NRRowChanged != null)) {
                    this.NRRowChanged(this, new NRRowChangeEvent(((NRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NRRowChanging != null)) {
                    this.NRRowChanging(this, new NRRowChangeEvent(((NRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NRRowDeleted != null)) {
                    this.NRRowDeleted(this, new NRRowChangeEvent(((NRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NRRowDeleting != null)) {
                    this.NRRowDeleting(this, new NRRowChangeEvent(((NRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNRRow(NRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERRds1 ds = new ERRds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SigTB1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnsignaturepicloc;
            
            private global::System.Data.DataColumn columngirosigLoc;
            
            private global::System.Data.DataColumn columnphoto1;
            
            private global::System.Data.DataColumn columnphoto2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTB1DataTable() {
                this.TableName = "SigTB1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SigTB1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SigTB1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn signaturepiclocColumn {
                get {
                    return this.columnsignaturepicloc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn girosigLocColumn {
                get {
                    return this.columngirosigLoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photo1Column {
                get {
                    return this.columnphoto1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn photo2Column {
                get {
                    return this.columnphoto2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTB1Row this[int index] {
                get {
                    return ((SigTB1Row)(this.Rows[index]));
                }
            }
            
            public event SigTB1RowChangeEventHandler SigTB1RowChanging;
            
            public event SigTB1RowChangeEventHandler SigTB1RowChanged;
            
            public event SigTB1RowChangeEventHandler SigTB1RowDeleting;
            
            public event SigTB1RowChangeEventHandler SigTB1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSigTB1Row(SigTB1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTB1Row AddSigTB1Row(string empnum, string signaturepicloc, string girosigLoc, byte[] photo1, byte[] photo2) {
                SigTB1Row rowSigTB1Row = ((SigTB1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        empnum,
                        signaturepicloc,
                        girosigLoc,
                        photo1,
                        photo2};
                rowSigTB1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSigTB1Row);
                return rowSigTB1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SigTB1DataTable cln = ((SigTB1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SigTB1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempnum = base.Columns["empnum"];
                this.columnsignaturepicloc = base.Columns["signaturepicloc"];
                this.columngirosigLoc = base.Columns["girosigLoc"];
                this.columnphoto1 = base.Columns["photo1"];
                this.columnphoto2 = base.Columns["photo2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnsignaturepicloc = new global::System.Data.DataColumn("signaturepicloc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsignaturepicloc);
                this.columngirosigLoc = new global::System.Data.DataColumn("girosigLoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngirosigLoc);
                this.columnphoto1 = new global::System.Data.DataColumn("photo1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto1);
                this.columnphoto2 = new global::System.Data.DataColumn("photo2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTB1Row NewSigTB1Row() {
                return ((SigTB1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SigTB1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SigTB1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SigTB1RowChanged != null)) {
                    this.SigTB1RowChanged(this, new SigTB1RowChangeEvent(((SigTB1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SigTB1RowChanging != null)) {
                    this.SigTB1RowChanging(this, new SigTB1RowChangeEvent(((SigTB1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SigTB1RowDeleted != null)) {
                    this.SigTB1RowDeleted(this, new SigTB1RowChangeEvent(((SigTB1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SigTB1RowDeleting != null)) {
                    this.SigTB1RowDeleting(this, new SigTB1RowChangeEvent(((SigTB1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSigTB1Row(SigTB1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERRds1 ds = new ERRds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SigTB1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ERRH1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columnempnum;
            
            private global::System.Data.DataColumn columnconfirmedby;
            
            private global::System.Data.DataColumn columnconfirmedcomments;
            
            private global::System.Data.DataColumn columnisrecommended;
            
            private global::System.Data.DataColumn columnapprovedby;
            
            private global::System.Data.DataColumn columnapprovedcomments;
            
            private global::System.Data.DataColumn columnisapproved;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnemploymentdate;
            
            private global::System.Data.DataColumn columncurrentsal;
            
            private global::System.Data.DataColumn columnlastday;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnsectorcode;
            
            private global::System.Data.DataColumn columnempname;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columnEmpWillConvert;
            
            private global::System.Data.DataColumn columnmatnum;
            
            private global::System.Data.DataColumn columnmatname;
            
            private global::System.Data.DataColumn columncreatedby;
            
            private global::System.Data.DataColumn columnsitename;
            
            private global::System.Data.DataColumn columnsitenum;
            
            private global::System.Data.DataColumn columnfuturecontact;
            
            private global::System.Data.DataColumn columnfurtureaddress;
            
            private global::System.Data.DataColumn columnstatuscode;
            
            private global::System.Data.DataColumn columnuserSignature;
            
            private global::System.Data.DataColumn columnappraiserSignature;
            
            private global::System.Data.DataColumn columnnoticeRemark;
            
            private global::System.Data.DataColumn columnsendto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERRH1DataTable() {
                this.TableName = "ERRH1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERRH1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ERRH1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnumColumn {
                get {
                    return this.columnempnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmedbyColumn {
                get {
                    return this.columnconfirmedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmedcommentsColumn {
                get {
                    return this.columnconfirmedcomments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isrecommendedColumn {
                get {
                    return this.columnisrecommended;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvedbyColumn {
                get {
                    return this.columnapprovedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approvedcommentsColumn {
                get {
                    return this.columnapprovedcomments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isapprovedColumn {
                get {
                    return this.columnisapproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn employmentdateColumn {
                get {
                    return this.columnemploymentdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn currentsalColumn {
                get {
                    return this.columncurrentsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastdayColumn {
                get {
                    return this.columnlastday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sectorcodeColumn {
                get {
                    return this.columnsectorcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empnameColumn {
                get {
                    return this.columnempname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpWillConvertColumn {
                get {
                    return this.columnEmpWillConvert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnumColumn {
                get {
                    return this.columnmatnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matnameColumn {
                get {
                    return this.columnmatname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdbyColumn {
                get {
                    return this.columncreatedby;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenameColumn {
                get {
                    return this.columnsitename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenumColumn {
                get {
                    return this.columnsitenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn futurecontactColumn {
                get {
                    return this.columnfuturecontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn furtureaddressColumn {
                get {
                    return this.columnfurtureaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statuscodeColumn {
                get {
                    return this.columnstatuscode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userSignatureColumn {
                get {
                    return this.columnuserSignature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appraiserSignatureColumn {
                get {
                    return this.columnappraiserSignature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noticeRemarkColumn {
                get {
                    return this.columnnoticeRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sendtoColumn {
                get {
                    return this.columnsendto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERRH1Row this[int index] {
                get {
                    return ((ERRH1Row)(this.Rows[index]));
                }
            }
            
            public event ERRH1RowChangeEventHandler ERRH1RowChanging;
            
            public event ERRH1RowChangeEventHandler ERRH1RowChanged;
            
            public event ERRH1RowChangeEventHandler ERRH1RowDeleting;
            
            public event ERRH1RowChangeEventHandler ERRH1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddERRH1Row(ERRH1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERRH1Row AddERRH1Row(
                        long ID, 
                        string refnum, 
                        string empnum, 
                        string confirmedby, 
                        string confirmedcomments, 
                        bool isrecommended, 
                        string approvedby, 
                        string approvedcomments, 
                        bool isapproved, 
                        System.DateTime trandate, 
                        System.DateTime employmentdate, 
                        decimal currentsal, 
                        System.DateTime lastday, 
                        string remark, 
                        string status, 
                        string flag, 
                        string user, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        string sectorcode, 
                        string empname, 
                        string designation, 
                        bool EmpWillConvert, 
                        string matnum, 
                        string matname, 
                        string createdby, 
                        string sitename, 
                        string sitenum, 
                        string futurecontact, 
                        string furtureaddress, 
                        string statuscode, 
                        string userSignature, 
                        string appraiserSignature, 
                        string noticeRemark, 
                        string sendto) {
                ERRH1Row rowERRH1Row = ((ERRH1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        refnum,
                        empnum,
                        confirmedby,
                        confirmedcomments,
                        isrecommended,
                        approvedby,
                        approvedcomments,
                        isapproved,
                        trandate,
                        employmentdate,
                        currentsal,
                        lastday,
                        remark,
                        status,
                        flag,
                        user,
                        created,
                        modified,
                        sectorcode,
                        empname,
                        designation,
                        EmpWillConvert,
                        matnum,
                        matname,
                        createdby,
                        sitename,
                        sitenum,
                        futurecontact,
                        furtureaddress,
                        statuscode,
                        userSignature,
                        appraiserSignature,
                        noticeRemark,
                        sendto};
                rowERRH1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowERRH1Row);
                return rowERRH1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERRH1Row FindByID(long ID) {
                return ((ERRH1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ERRH1DataTable cln = ((ERRH1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ERRH1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnrefnum = base.Columns["refnum"];
                this.columnempnum = base.Columns["empnum"];
                this.columnconfirmedby = base.Columns["confirmedby"];
                this.columnconfirmedcomments = base.Columns["confirmedcomments"];
                this.columnisrecommended = base.Columns["isrecommended"];
                this.columnapprovedby = base.Columns["approvedby"];
                this.columnapprovedcomments = base.Columns["approvedcomments"];
                this.columnisapproved = base.Columns["isapproved"];
                this.columntrandate = base.Columns["trandate"];
                this.columnemploymentdate = base.Columns["employmentdate"];
                this.columncurrentsal = base.Columns["currentsal"];
                this.columnlastday = base.Columns["lastday"];
                this.columnremark = base.Columns["remark"];
                this.columnstatus = base.Columns["status"];
                this.columnflag = base.Columns["flag"];
                this.columnuser = base.Columns["user"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnsectorcode = base.Columns["sectorcode"];
                this.columnempname = base.Columns["empname"];
                this.columndesignation = base.Columns["designation"];
                this.columnEmpWillConvert = base.Columns["EmpWillConvert"];
                this.columnmatnum = base.Columns["matnum"];
                this.columnmatname = base.Columns["matname"];
                this.columncreatedby = base.Columns["createdby"];
                this.columnsitename = base.Columns["sitename"];
                this.columnsitenum = base.Columns["sitenum"];
                this.columnfuturecontact = base.Columns["futurecontact"];
                this.columnfurtureaddress = base.Columns["furtureaddress"];
                this.columnstatuscode = base.Columns["statuscode"];
                this.columnuserSignature = base.Columns["userSignature"];
                this.columnappraiserSignature = base.Columns["appraiserSignature"];
                this.columnnoticeRemark = base.Columns["noticeRemark"];
                this.columnsendto = base.Columns["sendto"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columnempnum = new global::System.Data.DataColumn("empnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempnum);
                this.columnconfirmedby = new global::System.Data.DataColumn("confirmedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmedby);
                this.columnconfirmedcomments = new global::System.Data.DataColumn("confirmedcomments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmedcomments);
                this.columnisrecommended = new global::System.Data.DataColumn("isrecommended", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisrecommended);
                this.columnapprovedby = new global::System.Data.DataColumn("approvedby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovedby);
                this.columnapprovedcomments = new global::System.Data.DataColumn("approvedcomments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprovedcomments);
                this.columnisapproved = new global::System.Data.DataColumn("isapproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisapproved);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnemploymentdate = new global::System.Data.DataColumn("employmentdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploymentdate);
                this.columncurrentsal = new global::System.Data.DataColumn("currentsal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrentsal);
                this.columnlastday = new global::System.Data.DataColumn("lastday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastday);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnsectorcode = new global::System.Data.DataColumn("sectorcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsectorcode);
                this.columnempname = new global::System.Data.DataColumn("empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempname);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columnEmpWillConvert = new global::System.Data.DataColumn("EmpWillConvert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpWillConvert);
                this.columnmatnum = new global::System.Data.DataColumn("matnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatnum);
                this.columnmatname = new global::System.Data.DataColumn("matname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatname);
                this.columncreatedby = new global::System.Data.DataColumn("createdby", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedby);
                this.columnsitename = new global::System.Data.DataColumn("sitename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitename);
                this.columnsitenum = new global::System.Data.DataColumn("sitenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitenum);
                this.columnfuturecontact = new global::System.Data.DataColumn("futurecontact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfuturecontact);
                this.columnfurtureaddress = new global::System.Data.DataColumn("furtureaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfurtureaddress);
                this.columnstatuscode = new global::System.Data.DataColumn("statuscode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatuscode);
                this.columnuserSignature = new global::System.Data.DataColumn("userSignature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserSignature);
                this.columnappraiserSignature = new global::System.Data.DataColumn("appraiserSignature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappraiserSignature);
                this.columnnoticeRemark = new global::System.Data.DataColumn("noticeRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoticeRemark);
                this.columnsendto = new global::System.Data.DataColumn("sendto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsendto);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnrefnum.MaxLength = 20;
                this.columnempnum.MaxLength = 20;
                this.columnconfirmedby.MaxLength = 20;
                this.columnconfirmedcomments.MaxLength = 100;
                this.columnapprovedby.MaxLength = 20;
                this.columnapprovedcomments.MaxLength = 100;
                this.columnremark.MaxLength = 250;
                this.columnstatus.MaxLength = 1;
                this.columnflag.MaxLength = 10;
                this.columnuser.MaxLength = 50;
                this.columnsectorcode.MaxLength = 30;
                this.columnempname.MaxLength = 50;
                this.columndesignation.MaxLength = 30;
                this.columnmatnum.MaxLength = 30;
                this.columnmatname.MaxLength = 50;
                this.columncreatedby.MaxLength = 30;
                this.columnsitename.MaxLength = 50;
                this.columnsitenum.MaxLength = 20;
                this.columnfuturecontact.MaxLength = 50;
                this.columnfurtureaddress.MaxLength = 50;
                this.columnstatuscode.MaxLength = 20;
                this.columnuserSignature.MaxLength = 200;
                this.columnappraiserSignature.MaxLength = 200;
                this.columnnoticeRemark.MaxLength = 200;
                this.columnsendto.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERRH1Row NewERRH1Row() {
                return ((ERRH1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ERRH1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ERRH1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ERRH1RowChanged != null)) {
                    this.ERRH1RowChanged(this, new ERRH1RowChangeEvent(((ERRH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ERRH1RowChanging != null)) {
                    this.ERRH1RowChanging(this, new ERRH1RowChangeEvent(((ERRH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ERRH1RowDeleted != null)) {
                    this.ERRH1RowDeleted(this, new ERRH1RowChangeEvent(((ERRH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ERRH1RowDeleting != null)) {
                    this.ERRH1RowDeleting(this, new ERRH1RowChangeEvent(((ERRH1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveERRH1Row(ERRH1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERRds1 ds = new ERRds1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ERRH1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ERR11Row : global::System.Data.DataRow {
            
            private ERR11DataTable tableERR11;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERR11Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableERR11 = ((ERR11DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableERR11.IDColumn]));
                }
                set {
                    this[this.tableERR11.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableERR11.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string equipment {
                get {
                    try {
                        return ((string)(this[this.tableERR11.equipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'equipment\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.equipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool iscollected {
                get {
                    try {
                        return ((bool)(this[this.tableERR11.iscollectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iscollected\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.iscollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERR11.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableERR11.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableERR11.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableERR11.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableERR11.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERR11.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERR11.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableERR11.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'ERR11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERR11.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableERR11.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableERR11.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsequipmentNull() {
                return this.IsNull(this.tableERR11.equipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetequipmentNull() {
                this[this.tableERR11.equipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiscollectedNull() {
                return this.IsNull(this.tableERR11.iscollectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiscollectedNull() {
                this[this.tableERR11.iscollectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tableERR11.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tableERR11.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableERR11.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableERR11.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableERR11.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableERR11.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableERR11.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableERR11.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableERR11.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableERR11.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableERR11.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableERR11.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableERR11.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableERR11.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableERR11.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableERR11.createdbyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Coy1Row : global::System.Data.DataRow {
            
            private Coy1DataTable tableCoy1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Coy1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCoy1 = ((Coy1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableCoy1.IDColumn]));
                }
                set {
                    this[this.tableCoy1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coy {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coy\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyname {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coynameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyname\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coynameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr1 {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyaddr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr1\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyaddr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr2 {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyaddr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr2\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyaddr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr3 {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyaddr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr3\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyaddr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyaddr4 {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyaddr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyaddr4\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyaddr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyemail {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyemailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyemail\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyemailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyurl {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyurlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyurl\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyurlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coytel {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coytelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coytel\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coytelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyfax {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyfaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyfax\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyfaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coyregnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coyregnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyregnum\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyregnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coygstnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.coygstnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coygstnum\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coygstnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cpfregnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.cpfregnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cpfregnum\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.cpfregnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.apnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apnum\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.apnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string arnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.arnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arnum\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.arnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCoy1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCoy1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] coyimage {
                get {
                    try {
                        return ((byte[])(this[this.tableCoy1.coyimageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coyimage\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.coyimageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string whnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.whnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'whnum\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.whnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ccnum {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.ccnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ccnum\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.ccnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableCoy1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'Coy1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoy1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyNull() {
                return this.IsNull(this.tableCoy1.coyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyNull() {
                this[this.tableCoy1.coyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoynameNull() {
                return this.IsNull(this.tableCoy1.coynameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoynameNull() {
                this[this.tableCoy1.coynameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr1Null() {
                return this.IsNull(this.tableCoy1.coyaddr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr1Null() {
                this[this.tableCoy1.coyaddr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr2Null() {
                return this.IsNull(this.tableCoy1.coyaddr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr2Null() {
                this[this.tableCoy1.coyaddr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr3Null() {
                return this.IsNull(this.tableCoy1.coyaddr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr3Null() {
                this[this.tableCoy1.coyaddr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscoyaddr4Null() {
                return this.IsNull(this.tableCoy1.coyaddr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcoyaddr4Null() {
                this[this.tableCoy1.coyaddr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyemailNull() {
                return this.IsNull(this.tableCoy1.coyemailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyemailNull() {
                this[this.tableCoy1.coyemailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyurlNull() {
                return this.IsNull(this.tableCoy1.coyurlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyurlNull() {
                this[this.tableCoy1.coyurlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoytelNull() {
                return this.IsNull(this.tableCoy1.coytelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoytelNull() {
                this[this.tableCoy1.coytelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyfaxNull() {
                return this.IsNull(this.tableCoy1.coyfaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyfaxNull() {
                this[this.tableCoy1.coyfaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyregnumNull() {
                return this.IsNull(this.tableCoy1.coyregnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyregnumNull() {
                this[this.tableCoy1.coyregnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoygstnumNull() {
                return this.IsNull(this.tableCoy1.coygstnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoygstnumNull() {
                this[this.tableCoy1.coygstnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscpfregnumNull() {
                return this.IsNull(this.tableCoy1.cpfregnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcpfregnumNull() {
                this[this.tableCoy1.cpfregnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapnumNull() {
                return this.IsNull(this.tableCoy1.apnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapnumNull() {
                this[this.tableCoy1.apnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsarnumNull() {
                return this.IsNull(this.tableCoy1.arnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetarnumNull() {
                this[this.tableCoy1.arnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableCoy1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableCoy1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableCoy1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableCoy1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableCoy1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableCoy1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableCoy1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableCoy1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableCoy1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableCoy1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoyimageNull() {
                return this.IsNull(this.tableCoy1.coyimageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoyimageNull() {
                this[this.tableCoy1.coyimageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswhnumNull() {
                return this.IsNull(this.tableCoy1.whnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwhnumNull() {
                this[this.tableCoy1.whnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccnumNull() {
                return this.IsNull(this.tableCoy1.ccnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccnumNull() {
                this[this.tableCoy1.ccnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableCoy1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableCoy1.createdbyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NRRow : global::System.Data.DataRow {
            
            private NRDataTable tableNR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNR = ((NRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableNR.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'NR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNR.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nric {
                get {
                    try {
                        return ((string)(this[this.tableNR.nricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nric\' in table \'NR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNR.nricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname {
                get {
                    try {
                        return ((string)(this[this.tableNR.empnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname\' in table \'NR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNR.empnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lastday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNR.lastdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lastday\' in table \'NR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNR.lastdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string futurecontact {
                get {
                    try {
                        return ((string)(this[this.tableNR.futurecontactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'futurecontact\' in table \'NR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNR.futurecontactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirmedcomments {
                get {
                    try {
                        return ((string)(this[this.tableNR.confirmedcommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmedcomments\' in table \'NR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNR.confirmedcommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableNR.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableNR.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnricNull() {
                return this.IsNull(this.tableNR.nricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnricNull() {
                this[this.tableNR.nricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnameNull() {
                return this.IsNull(this.tableNR.empnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnameNull() {
                this[this.tableNR.empnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslastdayNull() {
                return this.IsNull(this.tableNR.lastdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlastdayNull() {
                this[this.tableNR.lastdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfuturecontactNull() {
                return this.IsNull(this.tableNR.futurecontactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfuturecontactNull() {
                this[this.tableNR.futurecontactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmedcommentsNull() {
                return this.IsNull(this.tableNR.confirmedcommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmedcommentsNull() {
                this[this.tableNR.confirmedcommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SigTB1Row : global::System.Data.DataRow {
            
            private SigTB1DataTable tableSigTB1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SigTB1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSigTB1 = ((SigTB1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableSigTB1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'SigTB1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string signaturepicloc {
                get {
                    try {
                        return ((string)(this[this.tableSigTB1.signaturepiclocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'signaturepicloc\' in table \'SigTB1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB1.signaturepiclocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string girosigLoc {
                get {
                    try {
                        return ((string)(this[this.tableSigTB1.girosigLocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'girosigLoc\' in table \'SigTB1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB1.girosigLocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo1 {
                get {
                    try {
                        return ((byte[])(this[this.tableSigTB1.photo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo1\' in table \'SigTB1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB1.photo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] photo2 {
                get {
                    try {
                        return ((byte[])(this[this.tableSigTB1.photo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo2\' in table \'SigTB1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSigTB1.photo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableSigTB1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableSigTB1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssignaturepiclocNull() {
                return this.IsNull(this.tableSigTB1.signaturepiclocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsignaturepiclocNull() {
                this[this.tableSigTB1.signaturepiclocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgirosigLocNull() {
                return this.IsNull(this.tableSigTB1.girosigLocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgirosigLocNull() {
                this[this.tableSigTB1.girosigLocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphoto1Null() {
                return this.IsNull(this.tableSigTB1.photo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphoto1Null() {
                this[this.tableSigTB1.photo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphoto2Null() {
                return this.IsNull(this.tableSigTB1.photo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphoto2Null() {
                this[this.tableSigTB1.photo2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ERRH1Row : global::System.Data.DataRow {
            
            private ERRH1DataTable tableERRH1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERRH1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableERRH1 = ((ERRH1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableERRH1.IDColumn]));
                }
                set {
                    this[this.tableERRH1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empnum {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.empnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empnum\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.empnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirmedby {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.confirmedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmedby\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.confirmedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirmedcomments {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.confirmedcommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmedcomments\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.confirmedcommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isrecommended {
                get {
                    try {
                        return ((bool)(this[this.tableERRH1.isrecommendedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isrecommended\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.isrecommendedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvedby {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.approvedbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvedby\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.approvedbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approvedcomments {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.approvedcommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approvedcomments\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.approvedcommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isapproved {
                get {
                    try {
                        return ((bool)(this[this.tableERRH1.isapprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isapproved\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.isapprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERRH1.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime employmentdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERRH1.employmentdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'employmentdate\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.employmentdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal currentsal {
                get {
                    try {
                        return ((decimal)(this[this.tableERRH1.currentsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'currentsal\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.currentsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lastday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERRH1.lastdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lastday\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.lastdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remark\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERRH1.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERRH1.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sectorcode {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.sectorcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sectorcode\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.sectorcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empname {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.empnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empname\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.empnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EmpWillConvert {
                get {
                    try {
                        return ((bool)(this[this.tableERRH1.EmpWillConvertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpWillConvert\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.EmpWillConvertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matnum {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.matnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matnum\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.matnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matname {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.matnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matname\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.matnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdby {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.createdbyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createdby\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.createdbyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitename {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.sitenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitename\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.sitenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitenum {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.sitenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitenum\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.sitenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string futurecontact {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.futurecontactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'futurecontact\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.futurecontactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string furtureaddress {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.furtureaddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'furtureaddress\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.furtureaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statuscode {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.statuscodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statuscode\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.statuscodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userSignature {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.userSignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userSignature\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.userSignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appraiserSignature {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.appraiserSignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appraiserSignature\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.appraiserSignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noticeRemark {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.noticeRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noticeRemark\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.noticeRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sendto {
                get {
                    try {
                        return ((string)(this[this.tableERRH1.sendtoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sendto\' in table \'ERRH1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableERRH1.sendtoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tableERRH1.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tableERRH1.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnumNull() {
                return this.IsNull(this.tableERRH1.empnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnumNull() {
                this[this.tableERRH1.empnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmedbyNull() {
                return this.IsNull(this.tableERRH1.confirmedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmedbyNull() {
                this[this.tableERRH1.confirmedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmedcommentsNull() {
                return this.IsNull(this.tableERRH1.confirmedcommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmedcommentsNull() {
                this[this.tableERRH1.confirmedcommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisrecommendedNull() {
                return this.IsNull(this.tableERRH1.isrecommendedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisrecommendedNull() {
                this[this.tableERRH1.isrecommendedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovedbyNull() {
                return this.IsNull(this.tableERRH1.approvedbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovedbyNull() {
                this[this.tableERRH1.approvedbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprovedcommentsNull() {
                return this.IsNull(this.tableERRH1.approvedcommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprovedcommentsNull() {
                this[this.tableERRH1.approvedcommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisapprovedNull() {
                return this.IsNull(this.tableERRH1.isapprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisapprovedNull() {
                this[this.tableERRH1.isapprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tableERRH1.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tableERRH1.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemploymentdateNull() {
                return this.IsNull(this.tableERRH1.employmentdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemploymentdateNull() {
                this[this.tableERRH1.employmentdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurrentsalNull() {
                return this.IsNull(this.tableERRH1.currentsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurrentsalNull() {
                this[this.tableERRH1.currentsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslastdayNull() {
                return this.IsNull(this.tableERRH1.lastdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlastdayNull() {
                this[this.tableERRH1.lastdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableERRH1.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableERRH1.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableERRH1.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableERRH1.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableERRH1.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableERRH1.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tableERRH1.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tableERRH1.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableERRH1.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableERRH1.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableERRH1.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableERRH1.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssectorcodeNull() {
                return this.IsNull(this.tableERRH1.sectorcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsectorcodeNull() {
                this[this.tableERRH1.sectorcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempnameNull() {
                return this.IsNull(this.tableERRH1.empnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempnameNull() {
                this[this.tableERRH1.empnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdesignationNull() {
                return this.IsNull(this.tableERRH1.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdesignationNull() {
                this[this.tableERRH1.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpWillConvertNull() {
                return this.IsNull(this.tableERRH1.EmpWillConvertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpWillConvertNull() {
                this[this.tableERRH1.EmpWillConvertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnumNull() {
                return this.IsNull(this.tableERRH1.matnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnumNull() {
                this[this.tableERRH1.matnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatnameNull() {
                return this.IsNull(this.tableERRH1.matnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatnameNull() {
                this[this.tableERRH1.matnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedbyNull() {
                return this.IsNull(this.tableERRH1.createdbyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedbyNull() {
                this[this.tableERRH1.createdbyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenameNull() {
                return this.IsNull(this.tableERRH1.sitenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenameNull() {
                this[this.tableERRH1.sitenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenumNull() {
                return this.IsNull(this.tableERRH1.sitenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenumNull() {
                this[this.tableERRH1.sitenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfuturecontactNull() {
                return this.IsNull(this.tableERRH1.futurecontactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfuturecontactNull() {
                this[this.tableERRH1.futurecontactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfurtureaddressNull() {
                return this.IsNull(this.tableERRH1.furtureaddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfurtureaddressNull() {
                this[this.tableERRH1.furtureaddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatuscodeNull() {
                return this.IsNull(this.tableERRH1.statuscodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatuscodeNull() {
                this[this.tableERRH1.statuscodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserSignatureNull() {
                return this.IsNull(this.tableERRH1.userSignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserSignatureNull() {
                this[this.tableERRH1.userSignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsappraiserSignatureNull() {
                return this.IsNull(this.tableERRH1.appraiserSignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetappraiserSignatureNull() {
                this[this.tableERRH1.appraiserSignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoticeRemarkNull() {
                return this.IsNull(this.tableERRH1.noticeRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoticeRemarkNull() {
                this[this.tableERRH1.noticeRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssendtoNull() {
                return this.IsNull(this.tableERRH1.sendtoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsendtoNull() {
                this[this.tableERRH1.sendtoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ERR11RowChangeEvent : global::System.EventArgs {
            
            private ERR11Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERR11RowChangeEvent(ERR11Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERR11Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Coy1RowChangeEvent : global::System.EventArgs {
            
            private Coy1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Coy1RowChangeEvent(Coy1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Coy1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NRRowChangeEvent : global::System.EventArgs {
            
            private NRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NRRowChangeEvent(NRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SigTB1RowChangeEvent : global::System.EventArgs {
            
            private SigTB1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTB1RowChangeEvent(SigTB1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SigTB1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ERRH1RowChangeEvent : global::System.EventArgs {
            
            private ERRH1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERRH1RowChangeEvent(ERRH1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERRH1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591