//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ATL.BizModules.StandardSalesReports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("salesSOPListing")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class salesSOPListing : global::System.Data.DataSet {
        
        private sophDataTable tablesoph;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public salesSOPListing() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected salesSOPListing(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["soph"] != null)) {
                    base.Tables.Add(new sophDataTable(ds.Tables["soph"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sophDataTable soph {
            get {
                return this.tablesoph;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            salesSOPListing cln = ((salesSOPListing)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["soph"] != null)) {
                    base.Tables.Add(new sophDataTable(ds.Tables["soph"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablesoph = ((sophDataTable)(base.Tables["soph"]));
            if ((initTable == true)) {
                if ((this.tablesoph != null)) {
                    this.tablesoph.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "salesSOPListing";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/salesSOPListing.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablesoph = new sophDataTable();
            base.Tables.Add(this.tablesoph);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesoph() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            salesSOPListing ds = new salesSOPListing();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void sophRowChangeEventHandler(object sender, sophRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sophDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrefnum;
            
            private global::System.Data.DataColumn columntrandate;
            
            private global::System.Data.DataColumn columnsitenum;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnuser;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnoriamt;
            
            private global::System.Data.DataColumn columnorigstamt;
            
            private global::System.Data.DataColumn columntotaloriamtwgst;
            
            private global::System.Data.DataColumn columnpaymentmode;
            
            private global::System.Data.DataColumn columnchequenum;
            
            private global::System.Data.DataColumn columnbanknum;
            
            private global::System.Data.DataColumn columndeposit;
            
            private global::System.Data.DataColumn columnsivnum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sophDataTable() {
                this.TableName = "soph";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sophDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sophDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refnumColumn {
                get {
                    return this.columnrefnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trandateColumn {
                get {
                    return this.columntrandate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitenumColumn {
                get {
                    return this.columnsitenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oriamtColumn {
                get {
                    return this.columnoriamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn origstamtColumn {
                get {
                    return this.columnorigstamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totaloriamtwgstColumn {
                get {
                    return this.columntotaloriamtwgst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paymentmodeColumn {
                get {
                    return this.columnpaymentmode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequenumColumn {
                get {
                    return this.columnchequenum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn banknumColumn {
                get {
                    return this.columnbanknum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn depositColumn {
                get {
                    return this.columndeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sivnumColumn {
                get {
                    return this.columnsivnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sophRow this[int index] {
                get {
                    return ((sophRow)(this.Rows[index]));
                }
            }
            
            public event sophRowChangeEventHandler sophRowChanging;
            
            public event sophRowChangeEventHandler sophRowChanged;
            
            public event sophRowChangeEventHandler sophRowDeleting;
            
            public event sophRowChangeEventHandler sophRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsophRow(sophRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sophRow AddsophRow(string refnum, System.DateTime trandate, string sitenum, char status, int period, string user, System.DateTime modified, decimal oriamt, decimal origstamt, decimal totaloriamtwgst, string paymentmode, string chequenum, string banknum, decimal deposit, string sivnum) {
                sophRow rowsophRow = ((sophRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        refnum,
                        trandate,
                        sitenum,
                        status,
                        period,
                        user,
                        modified,
                        oriamt,
                        origstamt,
                        totaloriamtwgst,
                        paymentmode,
                        chequenum,
                        banknum,
                        deposit,
                        sivnum};
                rowsophRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsophRow);
                return rowsophRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sophDataTable cln = ((sophDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sophDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrefnum = base.Columns["refnum"];
                this.columntrandate = base.Columns["trandate"];
                this.columnsitenum = base.Columns["sitenum"];
                this.columnstatus = base.Columns["status"];
                this.columnperiod = base.Columns["period"];
                this.columnuser = base.Columns["user"];
                this.columnmodified = base.Columns["modified"];
                this.columnoriamt = base.Columns["oriamt"];
                this.columnorigstamt = base.Columns["origstamt"];
                this.columntotaloriamtwgst = base.Columns["totaloriamtwgst"];
                this.columnpaymentmode = base.Columns["paymentmode"];
                this.columnchequenum = base.Columns["chequenum"];
                this.columnbanknum = base.Columns["banknum"];
                this.columndeposit = base.Columns["deposit"];
                this.columnsivnum = base.Columns["sivnum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrefnum = new global::System.Data.DataColumn("refnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnum);
                this.columntrandate = new global::System.Data.DataColumn("trandate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrandate);
                this.columnsitenum = new global::System.Data.DataColumn("sitenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitenum);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(char), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnuser = new global::System.Data.DataColumn("user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnoriamt = new global::System.Data.DataColumn("oriamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriamt);
                this.columnorigstamt = new global::System.Data.DataColumn("origstamt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorigstamt);
                this.columntotaloriamtwgst = new global::System.Data.DataColumn("totaloriamtwgst", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotaloriamtwgst);
                this.columnpaymentmode = new global::System.Data.DataColumn("paymentmode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentmode);
                this.columnchequenum = new global::System.Data.DataColumn("chequenum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequenum);
                this.columnbanknum = new global::System.Data.DataColumn("banknum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbanknum);
                this.columndeposit = new global::System.Data.DataColumn("deposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeposit);
                this.columnsivnum = new global::System.Data.DataColumn("sivnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsivnum);
                this.columntrandate.DateTimeMode = global::System.Data.DataSetDateTime.Local;
                this.columnperiod.DefaultValue = ((int)(0));
                this.columnmodified.DateTimeMode = global::System.Data.DataSetDateTime.Local;
                this.columnoriamt.DefaultValue = ((decimal)(0m));
                this.columnorigstamt.DefaultValue = ((decimal)(0m));
                this.columntotaloriamtwgst.DefaultValue = ((decimal)(0m));
                this.columndeposit.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sophRow NewsophRow() {
                return ((sophRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sophRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sophRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sophRowChanged != null)) {
                    this.sophRowChanged(this, new sophRowChangeEvent(((sophRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sophRowChanging != null)) {
                    this.sophRowChanging(this, new sophRowChangeEvent(((sophRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sophRowDeleted != null)) {
                    this.sophRowDeleted(this, new sophRowChangeEvent(((sophRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sophRowDeleting != null)) {
                    this.sophRowDeleting(this, new sophRowChangeEvent(((sophRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesophRow(sophRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                salesSOPListing ds = new salesSOPListing();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sophDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sophRow : global::System.Data.DataRow {
            
            private sophDataTable tablesoph;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sophRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesoph = ((sophDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refnum {
                get {
                    try {
                        return ((string)(this[this.tablesoph.refnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnum\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.refnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime trandate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesoph.trandateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trandate\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.trandateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitenum {
                get {
                    try {
                        return ((string)(this[this.tablesoph.sitenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sitenum\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.sitenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public char status {
                get {
                    try {
                        return ((char)(this[this.tablesoph.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int period {
                get {
                    try {
                        return ((int)(this[this.tablesoph.periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'period\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.tablesoph.userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesoph.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oriamt {
                get {
                    try {
                        return ((decimal)(this[this.tablesoph.oriamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oriamt\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.oriamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal origstamt {
                get {
                    try {
                        return ((decimal)(this[this.tablesoph.origstamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'origstamt\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.origstamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totaloriamtwgst {
                get {
                    try {
                        return ((decimal)(this[this.tablesoph.totaloriamtwgstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totaloriamtwgst\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.totaloriamtwgstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paymentmode {
                get {
                    try {
                        return ((string)(this[this.tablesoph.paymentmodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paymentmode\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.paymentmodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chequenum {
                get {
                    try {
                        return ((string)(this[this.tablesoph.chequenumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chequenum\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.chequenumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string banknum {
                get {
                    try {
                        return ((string)(this[this.tablesoph.banknumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'banknum\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.banknumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal deposit {
                get {
                    try {
                        return ((decimal)(this[this.tablesoph.depositColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deposit\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.depositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sivnum {
                get {
                    try {
                        return ((string)(this[this.tablesoph.sivnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sivnum\' in table \'soph\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesoph.sivnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefnumNull() {
                return this.IsNull(this.tablesoph.refnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefnumNull() {
                this[this.tablesoph.refnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrandateNull() {
                return this.IsNull(this.tablesoph.trandateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrandateNull() {
                this[this.tablesoph.trandateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssitenumNull() {
                return this.IsNull(this.tablesoph.sitenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsitenumNull() {
                this[this.tablesoph.sitenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablesoph.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablesoph.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsperiodNull() {
                return this.IsNull(this.tablesoph.periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetperiodNull() {
                this[this.tablesoph.periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.tablesoph.userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.tablesoph.userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tablesoph.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tablesoph.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoriamtNull() {
                return this.IsNull(this.tablesoph.oriamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoriamtNull() {
                this[this.tablesoph.oriamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorigstamtNull() {
                return this.IsNull(this.tablesoph.origstamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorigstamtNull() {
                this[this.tablesoph.origstamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotaloriamtwgstNull() {
                return this.IsNull(this.tablesoph.totaloriamtwgstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotaloriamtwgstNull() {
                this[this.tablesoph.totaloriamtwgstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymentmodeNull() {
                return this.IsNull(this.tablesoph.paymentmodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymentmodeNull() {
                this[this.tablesoph.paymentmodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschequenumNull() {
                return this.IsNull(this.tablesoph.chequenumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchequenumNull() {
                this[this.tablesoph.chequenumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanknumNull() {
                return this.IsNull(this.tablesoph.banknumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanknumNull() {
                this[this.tablesoph.banknumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdepositNull() {
                return this.IsNull(this.tablesoph.depositColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdepositNull() {
                this[this.tablesoph.depositColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssivnumNull() {
                return this.IsNull(this.tablesoph.sivnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsivnumNull() {
                this[this.tablesoph.sivnumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sophRowChangeEvent : global::System.EventArgs {
            
            private sophRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sophRowChangeEvent(sophRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sophRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591